{"pages":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"posts":[{"title":"编译原理实验","date":"2024-10-13T13:51:31.000Z","path":"2024/10/13/编译原理实验/","text":"1.词法分析123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;conio.h&gt; // getch()#include &lt;stdlib.h&gt;char prog[80], token[32], ch; // 扩大 token 的大小，防止溢出int syn, p, m, n, sum;char *rwtab[6] = &#123;&quot;begin&quot;, &quot;if&quot;, &quot;then&quot;, &quot;while&quot;, &quot;do&quot;, &quot;end&quot;&#125;; // 保留字表void scaner();int main() &#123; p = 0; printf(&quot;\\nPlease input a string (end with &#x27;#&#x27;):\\n&quot;); // 读取输入直到# do &#123; scanf(&quot;%c&quot;, &amp;ch); prog[p++] = ch; &#125; while (ch != &#x27;#&#x27;); p = 0; do &#123; scaner(); // 执行词法分析 switch (syn) &#123; case 11: printf(&quot;( %-10d%5d )\\n&quot;, sum, syn); break; case -1: printf(&quot;You have input a wrong string\\n&quot;); getch(); exit(0); default: printf(&quot;( %-10s%5d )\\n&quot;, token, syn); break; &#125; &#125; while (syn != 0); // 直到遇到终止符号 # getch();&#125;// 词法分析函数void scaner() &#123; sum = 0; memset(token, 0, sizeof(token)); // 清空token数组 ch = prog[p++]; m = 0; // 跳过空格和换行符 while ((ch == &#x27; &#x27;) || (ch == &#x27;\\n&#x27;)) &#123; ch = prog[p++]; &#125; // 处理标识符或保留字 if (((ch &gt;= &#x27;a&#x27;) &amp;&amp; (ch &lt;= &#x27;z&#x27;)) || ((ch &gt;= &#x27;A&#x27;) &amp;&amp; (ch &lt;= &#x27;Z&#x27;))) &#123; while (((ch &gt;= &#x27;a&#x27;) &amp;&amp; (ch &lt;= &#x27;z&#x27;)) || ((ch &gt;= &#x27;A&#x27;) &amp;&amp; (ch &lt;= &#x27;Z&#x27;)) || ((ch &gt;= &#x27;0&#x27;) &amp;&amp; (ch &lt;= &#x27;9&#x27;))) &#123; token[m++] = ch; ch = prog[p++]; &#125; p--; // 回退一个字符 syn = 10; // 标识符默认值 // 检查是否是保留字 for (n = 0; n &lt; 6; n++) &#123; if (strcmp(token, rwtab[n]) == 0) &#123; syn = n + 1; // 是保留字 break; &#125; &#125; &#125; // 处理数字 else if ((ch &gt;= &#x27;0&#x27;) &amp;&amp; (ch &lt;= &#x27;9&#x27;)) &#123; while ((ch &gt;= &#x27;0&#x27;) &amp;&amp; (ch &lt;= &#x27;9&#x27;)) &#123; sum = sum * 10 + ch - &#x27;0&#x27;; ch = prog[p++]; &#125; p--; // 回退一个字符 syn = 11; // 数字 &#125; // 处理其他符号 else &#123; token[m++] = ch; switch (ch) &#123; case &#x27;&lt;&#x27;: ch = prog[p++]; if (ch == &#x27;=&#x27;) &#123; syn = 22; token[m++] = ch; &#125; else &#123; syn = 20; p--; &#125; break; case &#x27;&gt;&#x27;: ch = prog[p++]; if (ch == &#x27;=&#x27;) &#123; syn = 24; token[m++] = ch; &#125; else &#123; syn = 23; p--; &#125; break; case &#x27;+&#x27;: ch = prog[p++]; if (ch == &#x27;+&#x27;) &#123; syn = 17; token[m++] = ch; &#125; else &#123; syn = 13; p--; &#125; break; case &#x27;-&#x27;: ch = prog[p++]; if (ch == &#x27;-&#x27;) &#123; syn = 29; token[m++] = ch; &#125; else &#123; syn = 14; p--; &#125; break; case &#x27;!&#x27;: ch = prog[p++]; if (ch == &#x27;=&#x27;) &#123; syn = 21; token[m++] = ch; &#125; else &#123; syn = 31; p--; &#125; break; case &#x27;=&#x27;: ch = prog[p++]; if (ch == &#x27;=&#x27;) &#123; syn = 25; token[m++] = ch; &#125; else &#123; syn = 18; p--; &#125; break; case &#x27;*&#x27;: syn = 15; break; case &#x27;/&#x27;: syn = 16; break; case &#x27;(&#x27;: syn = 27; break; case &#x27;)&#x27;: syn = 28; break; case &#x27;&#123;&#x27;: syn = 5; break; case &#x27;&#125;&#x27;: syn = 6; break; case &#x27;;&#x27;: syn = 26; break; case &#x27;\\&quot;&#x27;: syn = 30; break; case &#x27;#&#x27;: syn = 0; break; case &#x27;:&#x27;: syn = 17; break; default: syn = -1; break; &#125; &#125; token[m] = &#x27;\\0&#x27;; // 结束token字符串&#125; 点击显示/隐藏 这段代码是一个简单的词法分析器（Lexical Analyzer），用于解析输入字符串并将其拆分为词法单元（Token），如标识符、数字、保留字和操作符等。词法分析器是编译器前端的一部分，它读取源代码，将其分解为有意义的基本元素，供后续的语法分析阶段使用。 程序的结构概述 全局变量： prog[80]: 用来存储输入的程序字符序列，最多可容纳80个字符。 token[32]: 存储当前识别的词法单元（Token），最大长度为32个字符。 ch: 用来存储当前读取的字符。 syn: 用来表示当前识别的词法单元的类型（如保留字、标识符、操作符等）。 p: 指向 prog 中当前读取字符的位置。 m: 指向 token 中存储字符的位置。 n: 辅助变量，用于遍历保留字表。 sum: 用于处理数字时存储数值。 rwtab[6]: 保留字表，包含6个保留字：begin, if, then, while, do, end。 主要函数 main 函数： 程序从 main 函数开始，首先读取用户输入的字符串并存储在 prog 数组中，输入以 # 结束。 然后，调用 scaner 函数进行词法分析。scaner 函数会不断返回词法单元，直到遇到 # 为止。 根据 syn 的值，决定如何输出词法单元，分别处理数字、保留字、标识符、符号以及错误情况。 scaner 函数（词法分析的核心部分）： 步骤 1：跳过空白字符。从 prog 中读取字符，忽略空格和换行符。 步骤 2：识别标识符或保留字。如果字符是字母，进入标识符或保留字识别逻辑。持续读取字母或数字字符，直到遇到非字母或非数字字符。然后检查是否是保留字，如果是，设置相应的 syn 值（1-6），否则 syn 设为 10（标识符）。 步骤 3：识别数字。如果字符是数字，进入数字识别逻辑，构造数值并存储在 sum 中，最后将 syn 设为 11。 步骤 4：识别符号。如果是操作符或其他符号（如 +、-、&lt;、&gt; 等），根据规则构造相应的词法单元，给出对应的 syn 值。部分符号（如 &lt;=、&gt;=）需要多读取一个字符进行判断。 步骤 5：结束标记。如果遇到 #，将 syn 设为 0，表示结束。 步骤 6：错误处理。如果遇到无法识别的字符，将 syn 设为 -1，并在 main 函数中输出错误信息。 词法单元类型 (syn) 对应表： 保留字（begin, if, then, while, do, end）：1-6 标识符：10 数字：11 操作符和符号： &lt;：20, &lt;=：22 &gt;：23, &gt;=：24 =：18, ==：25 !：31, !=：21 +：13, ++：17 -：14, --：29 *：15 /：16 (：27, )：28 &#123;：5, &#125;：6 ;：26 #：0 （结束标记） 错误字符：syn = -1 程序运行过程： 输入阶段： 用户输入一段以 # 结束的字符串，程序读取并存储在 prog 数组中。 词法分析阶段： 程序调用 scaner 函数，逐个扫描字符并识别出相应的词法单元。 scaner 会判断当前字符属于哪种类型：保留字、标识符、数字或符号，并赋值 syn 作为识别标志。 程序输出对应的词法单元和 syn 值，直到遇到 # 为止。 输出阶段： 若为标识符或保留字，程序会输出标识符或保留字的字符串和对应的 syn 值。 若为数字，程序会输出数值和 syn = 11。 若遇到错误输入，程序会提示用户输入了错误的字符串，并终止运行。 总结： 这个程序实现了一个简单的词法分析器，能够处理保留字、标识符、数字和常见的操作符。对于初学者而言，它提供了一个理解编译器前端词法分析功能的基础框架，后续可以通过增加更多的保留字、符号或扩展错误处理来进一步完善。 主要函数 main 函数： 程序从 main 函数开始，首先读取用户输入的字符串并存储在 prog 数组中，输入以 # 结束。 然后，调用 scaner 函数进行词法分析。scaner 函数会不断返回词法单元，直到遇到 # 为止。 根据 syn 的值，决定如何输出词法单元，分别处理数字、保留字、标识符、符号以及错误情况。 scaner 函数（词法分析的核心部分）： 步骤 1：跳过空白字符。从 prog 中读取字符，忽略空格和换行符。 步骤 2：识别标识符或保留字。如果字符是字母，进入标识符或保留字识别逻辑。持续读取字母或数字字符，直到遇到非字母或非数字字符。然后检查是否是保留字，如果是，设置相应的 syn 值（1-6），否则 syn 设为 10（标识符）。 步骤 3：识别数字。如果字符是数字，进入数字识别逻辑，构造数值并存储在 sum 中，最后将 syn 设为 11。 步骤 4：识别符号。如果是操作符或其他符号（如 +、-、&lt;、&gt; 等），根据规则构造相应的词法单元，给出对应的 syn 值。部分符号（如 &lt;=、&gt;=）需要多读取一个字符进行判断。 步骤 5：结束标记。如果遇到 #，将 syn 设为 0，表示结束。 步骤 6：错误处理。如果遇到无法识别的字符，将 syn 设为 -1，并在 main 函数中输出错误信息。 词法单元类型 (syn) 对应表： 保留字（begin, if, then, while, do, end）：1-6 标识符：10 数字：11 操作符和符号： &lt;：20, &lt;=：22 &gt;：23, &gt;=：24 =：18, ==：25 !：31, !=：21 +：13, ++：17 -：14, --：29 *：15 /：16 (：27, )：28 &#123;：5, &#125;：6 ;：26 #：0 （结束标记） 错误字符：syn = -1 程序运行过程： 输入阶段： 用户输入一段以 # 结束的字符串，程序读取并存储在 prog 数组中。 词法分析阶段： 程序调用 scaner 函数，逐个扫描字符并识别出相应的词法单元。 scaner 会判断当前字符属于哪种类型：保留字、标识符、数字或符号，并赋值 syn 作为识别标志。 程序输出对应的词法单元和 syn 值，直到遇到 # 为止。 输出阶段： 若为标识符或保留字，程序会输出标识符或保留字的字符串和对应的 syn 值。 若为数字，程序会输出数值和 syn = 11。 若遇到错误输入，程序会提示用户输入了错误的字符串，并终止运行。 总结： 这个程序实现了一个简单的词法分析器，能够处理保留字、标识符、数字和常见的操作符。对于初学者而言，它提供了一个理解编译器前端词法分析功能的基础框架，后续可以通过增加更多的保留字、符号或扩展错误处理来进一步完善。 1. memset(token, 0, sizeof(token)); // 清空token数组 memset 是 C 标准库中的函数，用于将内存中的某一块区域全部填充为某个值。在这行代码中： token 是一个字符数组，用来存储当前正在分析的词法单元（Token）。 sizeof(token) 表示 token 数组的大小，即 32 字节。 memset(token, 0, sizeof(token)) 将 token 数组的所有元素设置为 0，也就是将整个数组清空。 在词法分析中，每次读取到新的词法单元时，需要重置 token，以确保不受之前词法单元的影响。 2. p--; // 回退一个字符 在词法分析过程中，程序会不断从 prog 数组中读取字符，p 是当前字符的指针（数组下标）。当 scaner 函数识别出一个完整的标识符、数字或符号时，通常会多读取了一个不属于该词法单元的字符（如空格、符号等），这时就需要将指针回退一个字符。 作用： 在识别标识符、数字等连续字符的词法单元时，p--; 确保不会跳过或漏掉字符。通过回退，可以让下次词法分析继续处理下一个未分析的字符。 例如： 假设输入为 &quot;abc &quot;，程序在读取 &quot;abc&quot; 时，会额外读取一个空格。因此需要回退一个字符，以便后续继续分析。 3. strcmp(token, rwtab[n]) // 比较 token 和 rwtab[n] strcmp 是 C 标准库中的字符串比较函数。它用来比较两个字符串的内容是否相同。 token 是存储当前识别的词法单元的字符数组。 rwtab[n] 是保留字表中的一个字符串，如 &quot;begin&quot;, &quot;if&quot; 等。 strcmp(token, rwtab[n]) 会比较 token 和 rwtab[n] 是否相等。 如果相等，返回 0，说明当前 token 是保留字； 如果不相等，返回非 0 值，说明 token 不是当前比较的保留字。 通过遍历 rwtab 数组中的保留字列表，可以判断当前 token 是否为保留字。 4. token[m] = &#39;\\0&#39;; // 结束token字符串 C 语言中的字符串以 \\0（空字符）作为结束标志。这一行代码的作用是将 token 数组的最后一位设置为 \\0，从而将它标记为一个合法的 C 字符串。 为什么要这样做？ 在 C 语言中，字符串是以字符数组的形式表示的，并且字符串的结尾必须用 \\0 来表示，否则该字符数组无法作为字符串使用。 \\0 确保 token 在后续操作（例如 strcmp）中可以正确处理和比较。 总结： memset：清空 token，以防残留数据影响词法分析。 p--：回退一个字符，确保下次分析从正确位置开始。 strcmp：比较 token 是否与保留字表中的某个保留字相同。 token[m] = &#39;\\0：将 token 标记为一个以 \\0 结尾的合法 C 字符串，确保后续字符串操作可以正确进行。 2. 语法分析123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174#include &lt;conio.h&gt;#include &lt;stdio.h&gt;#include &lt;string.h&gt;char prog[100], token[8], ch;char *rwtab[6] = &#123;&quot;begin&quot;, &quot;if&quot;, &quot;then&quot;, &quot;while&quot;, &quot;do&quot;, &quot;end&quot;&#125;;int syn, p, m, n, sum, kk;// 函数声明void scaner();int lrparser();int yucu();int statement();int expression();int term();int factor();int main() &#123; p = kk = 0; printf(&quot;\\nPlease input a string (end with &#x27;#&#x27;): \\n&quot;); // 读入程序字符 do &#123; scanf(&quot;%c&quot;, &amp;ch); prog[p++] = ch; &#125; while (ch != &#x27;#&#x27;); p = 0; scaner(); // 读取第一个单词符号 lrparser(); // 进行语法分析 getch(); return 0;&#125;// LR语法分析器int lrparser() &#123; if (syn == 1) &#123; // &#x27;begin&#x27; scaner(); // 读下一个单词符号 yucu(); // 调用语句序列处理 if (syn == 6) &#123; // &#x27;end&#x27; scaner(); if (syn == 0) &#123; // 成功 printf(&quot;Success!\\n&quot;); &#125; &#125; else &#123; printf(&quot;Error: Expected &#x27;end&#x27;!\\n&quot;); &#125; &#125; else &#123; printf(&quot;Error: Expected &#x27;begin&#x27;!\\n&quot;); &#125; return 0;&#125;// 处理语句序列int yucu() &#123; statement(); // 调用语句处理 while (syn == 26) &#123; // &#x27;;&#x27; scaner(); // 读下一个单词符号 if (syn != 6) &#123; // 如果不是&#x27;end&#x27;，继续处理下一个语句 statement(); &#125; &#125; return 0;&#125;// 处理单条语句int statement() &#123; if (syn == 10) &#123; // 标识符 scaner(); // 读下一个单词符号 if (syn == 18) &#123; // &#x27;:=&#x27; scaner(); // 读下一个单词符号 expression(); // 处理表达式 &#125; else &#123; printf(&quot;Error: Expected &#x27;:=&#x27;\\n&quot;); kk = 1; &#125; &#125; else &#123; printf(&quot;Error: Invalid statement!\\n&quot;); kk = 1; &#125; return 0;&#125;// 处理表达式int expression() &#123; term(); // 处理项 while (syn == 13 || syn == 14) &#123; // &#x27;+&#x27;或&#x27;-&#x27; scaner(); // 读下一个单词符号 term(); // 处理项 &#125; return 0;&#125;// 处理项int term() &#123; factor(); // 处理因子 while (syn == 15 || syn == 16) &#123; // &#x27;*&#x27;或&#x27;/&#x27; scaner(); // 读下一个单词符号 factor(); // 处理因子 &#125; return 0;&#125;// 处理因子int factor() &#123; if (syn == 10 || syn == 11) &#123; // 标识符或数字 scaner(); // 读下一个单词符号 &#125; else if (syn == 27) &#123; // &#x27;(&#x27; scaner(); expression(); // 处理表达式 if (syn == 28) &#123; // &#x27;)&#x27; scaner(); // 读下一个单词符号 &#125; else &#123; printf(&quot;Error: Expected &#x27;)&#x27;\\n&quot;); kk = 1; &#125; &#125; else &#123; printf(&quot;Error: Invalid factor!\\n&quot;); kk = 1; &#125; return 0;&#125;// 词法分析器void scaner() &#123; sum = 0; memset(token, 0, sizeof(token)); // 清空token m = 0; ch = prog[p++]; while (ch == &#x27; &#x27;) ch = prog[p++]; // 跳过空格 if ((ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27;) || (ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27;)) &#123; // 处理标识符 while ((ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27;) || (ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27;) || (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;)) &#123; token[m++] = ch; ch = prog[p++]; &#125; p--; // 回退 syn = 10; // 默认是标识符 for (n = 0; n &lt; 6; n++) &#123; if (strcmp(token, rwtab[n]) == 0) &#123; syn = n + 1; // 是保留字 break; &#125; &#125; &#125; else if (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123; // 处理数字 while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123; sum = sum * 10 + ch - &#x27;0&#x27;; ch = prog[p++]; &#125; p--; // 回退 syn = 11; // 数字 &#125; else &#123; // 处理运算符和分隔符 switch (ch) &#123; case &#x27;&lt;&#x27;: ch = prog[p++]; syn = (ch == &#x27;=&#x27;) ? 22 : (ch == &#x27;&gt;&#x27;) ? 21 : 20; break; case &#x27;&gt;&#x27;: ch = prog[p++]; syn = (ch == &#x27;=&#x27;) ? 24 : 23; break; case &#x27;:&#x27;: ch = prog[p++]; syn = (ch == &#x27;=&#x27;) ? 18 : 17; break; case &#x27;+&#x27;: syn = 13; break; case &#x27;-&#x27;: syn = 14; break; case &#x27;*&#x27;: syn = 15; break; case &#x27;/&#x27;: syn = 16; break; case &#x27;(&#x27;: syn = 27; break; case &#x27;)&#x27;: syn = 28; break; case &#x27;=&#x27;: syn = 25; break; case &#x27;;&#x27;: syn = 26; break; case &#x27;#&#x27;: syn = 0; break; default: syn = -1; break; &#125; &#125;&#125; 点击显示/隐藏 这个程序实现了一个简单的 LR语法分析器，用来分析包含保留字、标识符、数字和基本算术表达式的小型程序。语法分析器通过词法分析（scaner 函数）解析输入的字符流，并基于一定的语法规则逐步匹配输入内容，检测输入是否符合语言定义的语法结构。 下面我将详细解释程序的功能和运行过程： 1. 运行过程概述： 程序首先读入一个以 # 结尾的字符串，该字符串表示一个简化的程序。 程序通过词法分析（scaner 函数）将输入字符流解析成词法单元（Token），词法单元可以是标识符、保留字、数字或符号。 然后通过语法分析器（lrparser 函数），依据一个预定的语法规则，判断输入是否符合特定的语法。如果输入符合语法规则，输出 &quot;Success!&quot;，否则输出相应的错误信息。 2. 主要函数介绍： 主函数 main int main() &#123; p = kk = 0; printf(&quot;\\nPlease input a string (end with &#39;#&#39;): \\n&quot;); do &#123; scanf(&quot;%c&quot;, &amp;ch); prog[p++] = ch; &#125; while (ch != &#39;#&#39;); p = 0; scaner(); // 读取第一个单词符号 lrparser(); // 进行语法分析 getch(); return 0; &#125; p 和 kk 初始化为 0，p 是指向当前字符的索引，kk 是错误标志变量。 程序通过 scanf 一次读取一个字符，直到遇到 #。读入的字符保存在 prog 数组中。 调用 scaner() 函数进行词法分析，从输入字符串中解析出第一个词法单元。 调用 lrparser() 函数进行 LR 语法分析，分析输入的句子是否符合语法规则。 LR 语法分析器 lrparser int lrparser() &#123; if (syn == 1) &#123; // &#39;begin&#39; scaner(); // 读下一个单词符号 yucu(); // 调用语句序列处理 if (syn == 6) &#123; // &#39;end&#39; scaner(); if (syn == 0) &#123; // 成功 printf(&quot;Success!\\n&quot;); &#125; &#125; else &#123; printf(&quot;Error: Expected &#39;end&#39;!\\n&quot;); &#125; &#125; else &#123; printf(&quot;Error: Expected &#39;begin&#39;!\\n&quot;); &#125; return 0; &#125; lrparser 是语法分析器的核心。它判断输入的程序是否以 begin 开头，并调用 yucu() 函数处理语句序列。 如果匹配到 begin 后，解析到 end，且 end 后没有其他多余的字符（即遇到 #），表示语法分析成功，输出 &quot;Success!&quot;。 如果未能正确匹配到 begin 或 end，则输出相应的错误信息。 处理语句序列 yucu int yucu() &#123; statement(); // 调用语句处理 while (syn == 26) &#123; // &#39;;&#39; scaner(); // 读下一个单词符号 if (syn != 6) &#123; // 如果不是&#39;end&#39;，继续处理下一个语句 statement(); &#125; &#125; return 0; &#125; yucu 负责处理一连串的语句。它首先调用 statement() 处理一条语句，然后检查是否有分号（;）分隔的多条语句。 每当遇到分号时，继续处理下一条语句，直到遇到 end 或没有更多语句。 处理单条语句 statement int statement() &#123; if (syn == 10) &#123; // 标识符 scaner(); // 读下一个单词符号 if (syn == 18) &#123; // &#39;:=&#39; scaner(); // 读下一个单词符号 expression(); // 处理表达式 &#125; else &#123; printf(&quot;Error: Expected &#39;:=&#39;\\n&quot;); kk = 1; &#125; &#125; else &#123; printf(&quot;Error: Invalid statement!\\n&quot;); kk = 1; &#125; return 0; &#125; statement 负责处理单个语句。它要求语句必须是 标识符（syn = 10），并且接着是赋值运算符 :=（syn = 18）。 如果语句格式正确，则调用 expression() 处理右侧的表达式。 如果语法不正确，会输出相应的错误信息，并设置错误标志 kk。 处理表达式 expression int expression() &#123; term(); // 处理项 while (syn == 13 || syn == 14) &#123; // &#39;+&#39;或&#39;-&#39; scaner(); // 读下一个单词符号 term(); // 处理项 &#125; return 0; &#125; expression 负责处理一个由 项（term） 组成的表达式。项之间可以由 + 或 - 连接。 它首先调用 term() 处理一个项，然后检查是否有 + 或 -，如果有则继续处理下一个项。 处理项 term int term() &#123; factor(); // 处理因子 while (syn == 15 || syn == 16) &#123; // &#39;*&#39;或&#39;/&#39; scaner(); // 读下一个单词符号 factor(); // 处理因子 &#125; return 0; &#125; term 处理一个由 因子（factor） 组成的项，项之间可以由 * 或 / 连接。 它首先调用 factor() 处理一个因子，然后检查是否有 * 或 /，如果有则继续处理下一个因子。 处理因子 factor int factor() &#123; if (syn == 10 || syn == 11) &#123; // 标识符或数字 scaner(); // 读下一个单词符号 &#125; else if (syn == 27) &#123; // &#39;(&#39; scaner(); expression(); // 处理表达式 if (syn == 28) &#123; // &#39;)&#39; scaner(); // 读下一个单词符号 &#125; else &#123; printf(&quot;Error: Expected &#39;)&#39;\\n&quot;); kk = 1; &#125; &#125; else &#123; printf(&quot;Error: Invalid factor!\\n&quot;); kk = 1; &#125; return 0; &#125; factor 处理一个因子，因子可以是 标识符、数字 或 带括号的表达式。 如果遇到 (，则递归调用 expression() 处理括号内的表达式，并要求最后必须遇到 )。 如果遇到的不是标识符、数字或有效括号表达式，输出错误信息。 3. 词法分析器 scaner void scaner() &#123; sum = 0; memset(token, 0, sizeof(token)); // 清空token m = 0; ch = prog[p++]; while (ch == &#39; &#39;) ch = prog[p++]; // 跳过空格 if ((ch &gt;= &#39;a&#39; &amp;&amp; ch &lt;= &#39;z&#39;) || (ch &gt;= &#39;A&#39; &amp;&amp; ch &lt;= &#39;Z&#39;)) &#123; // 处理标识符 while ((ch &gt;= &#39;a&#39; &amp;&amp; ch &lt;= &#39;z&#39;) || (ch &gt;= &#39;A&#39; &amp;&amp; ch &lt;= &#39;Z&#39;) || (ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;)) &#123; token[m++] = ch; ch = prog[p++]; &#125; p--; // 回退 syn = 10; // 默认是标识符 for (n = 0; n &lt; 6; n++) &#123; if (strcmp(token, rwtab[n]) == 0) &#123; syn = n + 1; // 是保留字 break; &#125; &#125; &#125; else if (ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;) &#123; // 处理数字 while (ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;) &#123; sum = sum * 10 + ch - &#39;0&#39;; ch = prog[p++]; &#125; p--; // 回退 syn = 11; // 数字 &#125; else &#123; // 处理运算符和分隔符 switch (ch) &#123; case &#39;&lt;&#39;: ch = prog[p++]; syn = (ch == &#39;=&#39;) ? 22 : (ch == &#39;&gt;&#39;) ? 21 : 20; break; case &#39;&gt;&#39;: ch = prog[p++]; syn = (ch == &#39;=&#39;) ? 24 : 23; break; case &#39;:&#39;: ch = prog[p++]; syn = (ch == &#39;=&#39;) ? 18 : 17;break; case &#39;+&#39;: syn = 13; break; case &#39;-&#39;: syn = 14; break; case &#39;*&#39;: syn = 15; break; case &#39;/&#39;: syn = 16; break; case &#39;(&#39;: syn = 27; break; case &#39;)&#39;: syn = 28; break; case &#39;=&#39;: syn = 25; break; case &#39;;&#39;: syn = 26; break; case &#39;#&#39;: syn = 0; break; default: syn = -1; break; &#125; &#125; &#125; scaner() 函数是词法分析器，用来从输入中读取下一个词法单元并根据类型给 syn 赋值。 它会处理空格，跳过空格后继续分析单词。 标识符：由字母和数字组成，默认 syn = 10，并检查是否为保留字（如 begin、if 等）。 数字：连续的数字序列，syn = 11。 运算符和符号：通过 switch 语句处理常见的运算符和分隔符（如 +, -, *, :, # 等）。 4. 难点解释： 词法分析中的回退 p--：在处理标识符或数字时，会多读入一个字符（可能是下一个单词的开始），因此需要将指针 p 回退一个，以便下次分析能正确从未处理的字符开始。 语法分析中的递归调用：语法分析器通过递归调用（如 expression 调用 term，term 调用 factor）来处理更复杂的语法结构。递归调用是匹配嵌套语法（如括号中的表达式）的常用方式。 总结： 这个程序通过词法分析将输入分割成词法单元，再通过语法分析判断词法单元是否符合预定的语法规则。 语法分析器采用递归下降法处理保留字、赋值语句、算术表达式等简单语法结构。 输入若符合语法规则，程序输出 Success!，否则输出错误信息。 3.语义分析123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232#include &lt;conio.h&gt;#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAX_PROG_LEN 100#define MAX_TOKEN_LEN 8#define MAX_QUAD 20char prog[MAX_PROG_LEN], token[MAX_TOKEN_LEN], ch;char *rwtab[6] = &#123;&quot;begin&quot;, &quot;if&quot;, &quot;then&quot;, &quot;while&quot;, &quot;do&quot;, &quot;end&quot;&#125;;int syn, p, m, n, sum, q;int temp_count = 0;struct &#123; char result[MAX_TOKEN_LEN]; char arg1[MAX_TOKEN_LEN]; char op[MAX_TOKEN_LEN]; char arg2[MAX_TOKEN_LEN];&#125; quad[MAX_QUAD];// 函数声明char* factor();char* expression();int parse_statements();char* term();int statement();int lrparser();char* new_temp();void scaner();int emit(const char* result, const char* arg1, const char* op, const char* arg2);void error(const char* msg);int main() &#123; int i; q = p = temp_count = 0; printf(&quot;\\nPlease input a string (end with &#x27;#&#x27;): &quot;); do &#123; scanf(&quot;%c&quot;, &amp;ch); prog[p++] = ch; &#125; while (ch != &#x27;#&#x27;); p = 0; scaner(); // 进行词法分析 lrparser(); // 语法分析并生成四元式 if (q &gt; MAX_QUAD) &#123; printf(&quot;Too long sentence!\\n&quot;); &#125; else &#123; for (i = 0; i &lt; q; i++) &#123; printf(&quot; %s = %s %s %s \\n&quot;, quad[i].result, quad[i].arg1, quad[i].op, quad[i].arg2); &#125; &#125; getch(); return 0;&#125;int lrparser() &#123; if (syn == 1) &#123; // &#x27;begin&#x27; token scaner(); parse_statements(); if (syn == 6) &#123; // &#x27;end&#x27; token scaner(); if (syn == 0) &#123; printf(&quot;Success!\\n&quot;); &#125; else &#123; error(&quot;Unexpected token after &#x27;end&#x27;&quot;); &#125; &#125; else &#123; error(&quot;Missing &#x27;end&#x27;!&quot;); &#125; &#125; else &#123; error(&quot;Missing &#x27;begin&#x27;!&quot;); &#125; return 0;&#125;int parse_statements() &#123; while (syn == 10) &#123; // identifier statement(); if (syn == 26) &#123; // &#x27;;&#x27; scaner(); &#125; else &#123; break; &#125; &#125; return 0;&#125;int statement() &#123; char tt[MAX_TOKEN_LEN], eplace[MAX_TOKEN_LEN]; if (syn == 10) &#123; // identifier strcpy(tt, token); scaner(); if (syn == 18) &#123; // &#x27;:=&#x27; scaner(); strcpy(eplace, expression()); emit(tt, eplace, &quot;&quot;, &quot;&quot;); &#125; else &#123; error(&quot;Missing &#x27;:=&#x27;!&quot;); &#125; &#125; return 0;&#125;char* expression() &#123; char* eplace = term(); while (syn == 13 || syn == 14) &#123; // &#x27;+&#x27; or &#x27;-&#x27; char op[MAX_TOKEN_LEN]; strcpy(op, (syn == 13) ? &quot;+&quot; : &quot;-&quot;); scaner(); char* ep2 = term(); char* temp = new_temp(); emit(temp, eplace, op, ep2); eplace = temp; &#125; return eplace;&#125;char* term() &#123; char* eplace = factor(); while (syn == 15 || syn == 16) &#123; // &#x27;*&#x27; or &#x27;/&#x27; char op[MAX_TOKEN_LEN]; strcpy(op, (syn == 15) ? &quot;*&quot; : &quot;/&quot;); scaner(); char* ep2 = factor(); char* temp = new_temp(); emit(temp, eplace, op, ep2); eplace = temp; &#125; return eplace;&#125;char* factor() &#123; char* fplace = (char*)malloc(MAX_TOKEN_LEN); if (syn == 10) &#123; // identifier strcpy(fplace, token); scaner(); &#125; else if (syn == 11) &#123; // number sprintf(fplace, &quot;%d&quot;, sum); scaner(); &#125; else if (syn == 27) &#123; // &#x27;(&#x27; scaner(); fplace = expression(); if (syn == 28) &#123; // &#x27;)&#x27; scaner(); &#125; else &#123; error(&quot;Missing &#x27;)&#x27;!&quot;); &#125; &#125; else &#123; error(&quot;Syntax error in factor!&quot;); &#125; return fplace;&#125;char* new_temp() &#123; char* temp = (char*)malloc(MAX_TOKEN_LEN); sprintf(temp, &quot;t%d&quot;, ++temp_count); return temp;&#125;void scaner() &#123; sum = 0; memset(token, 0, sizeof(token)); // 清空 token m = 0; ch = prog[p++]; while (ch == &#x27; &#x27;) ch = prog[p++]; // 跳过空格 // 处理标识符或关键字 if ((ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27;) || (ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27;)) &#123; while ((ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27;) || (ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27;) || (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;)) &#123; token[m++] = ch; ch = prog[p++]; &#125; p--; syn = 10; // 默认是标识符 for (n = 0; n &lt; 6; n++) &#123; if (strcmp(token, rwtab[n]) == 0) &#123; syn = n + 1; // 如果是关键字 break; &#125; &#125; &#125; // 处理数字 else if (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123; while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123; sum = sum * 10 + ch - &#x27;0&#x27;; ch = prog[p++]; &#125; p--; syn = 11; // 数字 &#125; // 处理符号 else &#123; switch (ch) &#123; case &#x27;&lt;&#x27;: syn = (prog[p] == &#x27;=&#x27;) ? (p++, 22) : 20; break; case &#x27;&gt;&#x27;: syn = (prog[p] == &#x27;=&#x27;) ? (p++, 24) : 23; break; case &#x27;:&#x27;: syn = (prog[p] == &#x27;=&#x27;) ? (p++, 18) : 17; break; case &#x27;+&#x27;: syn = 13; break; case &#x27;-&#x27;: syn = 14; break; case &#x27;*&#x27;: syn = 15; break; case &#x27;/&#x27;: syn = 16; break; case &#x27;(&#x27;: syn = 27; break; case &#x27;)&#x27;: syn = 28; break; case &#x27;=&#x27;: syn = 25; break; case &#x27;;&#x27;: syn = 26; break; case &#x27;#&#x27;: syn = 0; break; default: syn = -1; break; // 未知符号 &#125; &#125;&#125;int emit(const char* result, const char* arg1, const char* op, const char* arg2) &#123; strcpy(quad[q].result, result); strcpy(quad[q].arg1, arg1); strcpy(quad[q].op, op); strcpy(quad[q].arg2, arg2); q++; return 0;&#125;void error(const char* msg) &#123; printf(&quot;Error: %s\\n&quot;, msg); getch(); exit(1);&#125; 点击显示/隐藏 这个程序实现了一个简化的四元式生成器，用来分析一个简化的程序并生成中间代码（四元式），通过语法分析器识别程序中的赋值语句和表达式，并为其生成相应的四元式。四元式是一种表示表达式计算的中间形式，通常用于编译器的代码生成阶段。 1. 程序整体流程 程序从输入读取一个以 # 结尾的字符串作为代码，通过词法分析和语法分析解析输入，生成相应的四元式。 解析的输入代码必须以 begin 开头，以 end 结束，中间可以包含赋值语句和基本的算术表达式。 在解析过程中，每遇到一个赋值语句或算术表达式，程序会生成四元式，并存储在 quad 数组中。 程序最后输出所有生成的四元式，展示中间代码的形式。 2. 运行过程分析 主函数 main 程序开始时，提示用户输入字符串，用户输入的字符串保存在 prog 数组中，最后必须以 # 结尾，表示输入的结束。 scaner() 函数进行词法分析，提取输入中的标识符、数字、运算符等信息。 lrparser() 函数进行语法分析，并在过程中生成四元式。如果输入符合语法规则，则生成的四元式保存在 quad 数组中。 q 是四元式的计数器，若生成的四元式超过了预设的最大数目 MAX_QUAD，程序会报错。 语法分析器 lrparser 语法分析器的工作流程如下： 检查输入是否以 begin 关键字开头。如果不是，则报错 &quot;Missing &#39;begin&#39;!&quot;。 解析后续的语句，调用 parse_statements() 处理多个语句。 语句处理完毕后，检查输入是否以 end 关键字结束。如果不是，则报错 &quot;Missing &#39;end&#39;!&quot;。 解析完毕并且没有错误后，程序输出 &quot;Success!&quot;，表示语法分析通过。 处理语句 parse_statements 和 statement parse_statements： 处理多个赋值语句，每个语句必须由标识符和赋值操作组成，并以 ; 结尾。 每遇到标识符（syn == 10），调用 statement() 处理单条语句。 语句处理后，若遇到分号 ;，继续处理下一个语句。 statement： 处理单条赋值语句，要求格式为 标识符 := 表达式。 首先，读取标识符并存储在 tt 中。 然后，匹配赋值操作符 :=，若匹配成功，则调用 expression() 处理右侧的表达式，并生成四元式。 四元式的形式是 tt = eplace，即将表达式 eplace 的值赋给左侧的标识符 tt。 表达式处理 expression 和 term expression： 处理一个加减运算的表达式，返回表示该表达式值的临时变量（t1, t2, 等）。 解析表达式的过程是递归的。首先调用 term() 处理一个乘除运算的项。 如果表达式包含加减运算符（+ 或 -），则解析右侧的项，并为每次的运算生成一个临时变量存储结果。 每次遇到 + 或 - 操作时，都会生成相应的四元式，形式为 temp = eplace op ep2，其中 temp 是新的临时变量，eplace 和 ep2 是操作数，op 是操作符。 term： 处理乘除运算的项，与 expression() 类似，但处理的是乘法和除法。 它首先调用 factor() 处理基本因子，然后检查是否有乘除运算符（* 或 /）。如果有，则生成四元式。 因子处理 factor factor() 处理表达式的最小单位（即因子），因子可以是： 标识符：返回标识符本身作为值。 数字：将数字转换为字符串，并返回该值。 括号中的表达式：递归调用 expression() 处理括号内的完整表达式，并返回其值。 若因子解析出错，比如缺少闭合的右括号 )，则程序会调用 error() 报错。 3. 四元式生成 emit 和临时变量 new_temp emit()：每当生成一个新的运算时，emit() 函数会创建一个四元式并存储在 quad 数组中。四元式的格式为 (result, arg1, op, arg2)，其中： result 是运算结果的临时变量或目标变量。 arg1 和 arg2 是操作数。 op 是运算符（如 +, -, *, /）。 new_temp()：每当生成一个新的四元式时，程序需要生成一个新的临时变量来存储中间结果。new_temp() 函数根据 temp_count 创建新临时变量，格式为 t1, t2, 等。 4. 词法分析 scaner scaner() 函数从输入中逐字符读取，解析出标识符、关键字、数字、运算符等。每个词法单元（Token）用 syn 表示其类型，token 存储其值。 它通过状态机的方式，分别处理不同类型的输入： 标识符和关键字：首先判断是否是字母开头的标识符，并检查是否为保留字（如 begin、end）。 数字：连续读取数字字符并转换为整数。 运算符和分隔符：识别如 +, -, *, := 等符号，更新 syn 为相应的词法类别。 5. 难点部分解释 递归调用 expression() 和 term() 都是递归调用的，每当遇到加减法或乘除法时，程序会递归处理右侧的表达式或项。递归是表达式解析的常见方法，通过这种方式，可以自然地解析出带有嵌套运算的表达式。 四元式生成 四元式的生成是该程序的核心，每遇到一个表达式中的运算，程序会生成相应的四元式。生成四元式的过程通过 emit() 函数实现，且为了处理复杂的表达式，程序动态生成临时变量来存储中间结果。","raw":"---\ntitle: 编译原理实验\ndate: 2024-10-13 21:51:31\ntags: homework\n---\n\n\n\n### 1.词法分析\n\n```c\n#include <stdio.h>\n#include <string.h>\n#include <conio.h>  // getch()\n#include <stdlib.h>\n\nchar prog[80], token[32], ch;  // 扩大 token 的大小，防止溢出\nint syn, p, m, n, sum;\nchar *rwtab[6] = {\"begin\", \"if\", \"then\", \"while\", \"do\", \"end\"};  // 保留字表\n\nvoid scaner();\n\nint main() {\n    p = 0;\n    printf(\"\\nPlease input a string (end with '#'):\\n\");\n\n    // 读取输入直到#\n    do {\n        scanf(\"%c\", &ch);\n        prog[p++] = ch;\n    } while (ch != '#');\n\n    p = 0;\n    do {\n        scaner();  // 执行词法分析\n        switch (syn) {\n            case 11:\n                printf(\"( %-10d%5d )\\n\", sum, syn);\n                break;\n            case -1:\n                printf(\"You have input a wrong string\\n\");\n                getch();\n                exit(0);\n            default:\n                printf(\"( %-10s%5d )\\n\", token, syn);\n                break;\n        }\n    } while (syn != 0);  // 直到遇到终止符号 #\n\n    getch();\n}\n\n// 词法分析函数\nvoid scaner() {\n    sum = 0;\n    memset(token, 0, sizeof(token));  // 清空token数组\n    ch = prog[p++];\n    m = 0;\n\n    // 跳过空格和换行符\n    while ((ch == ' ') || (ch == '\\n')) {\n        ch = prog[p++];\n    }\n\n    // 处理标识符或保留字\n    if (((ch >= 'a') && (ch <= 'z')) || ((ch >= 'A') && (ch <= 'Z'))) {\n        while (((ch >= 'a') && (ch <= 'z')) || ((ch >= 'A') && (ch <= 'Z')) || ((ch >= '0') && (ch <= '9'))) {\n            token[m++] = ch;\n            ch = prog[p++];\n        }\n        p--;  // 回退一个字符\n        syn = 10;  // 标识符默认值\n\n        // 检查是否是保留字\n        for (n = 0; n < 6; n++) {\n            if (strcmp(token, rwtab[n]) == 0) {\n                syn = n + 1;  // 是保留字\n                break;\n            }\n        }\n    }\n        // 处理数字\n    else if ((ch >= '0') && (ch <= '9')) {\n        while ((ch >= '0') && (ch <= '9')) {\n            sum = sum * 10 + ch - '0';\n            ch = prog[p++];\n        }\n        p--;  // 回退一个字符\n        syn = 11;  // 数字\n    }\n        // 处理其他符号\n    else {\n        token[m++] = ch;\n        switch (ch) {\n            case '<':\n                ch = prog[p++];\n                if (ch == '=') {\n                    syn = 22;\n                    token[m++] = ch;\n                } else {\n                    syn = 20;\n                    p--;\n                }\n                break;\n            case '>':\n                ch = prog[p++];\n                if (ch == '=') {\n                    syn = 24;\n                    token[m++] = ch;\n                } else {\n                    syn = 23;\n                    p--;\n                }\n                break;\n            case '+':\n                ch = prog[p++];\n                if (ch == '+') {\n                    syn = 17;\n                    token[m++] = ch;\n                } else {\n                    syn = 13;\n                    p--;\n                }\n                break;\n            case '-':\n                ch = prog[p++];\n                if (ch == '-') {\n                    syn = 29;\n                    token[m++] = ch;\n                } else {\n                    syn = 14;\n                    p--;\n                }\n                break;\n            case '!':\n                ch = prog[p++];\n                if (ch == '=') {\n                    syn = 21;\n                    token[m++] = ch;\n                } else {\n                    syn = 31;\n                    p--;\n                }\n                break;\n            case '=':\n                ch = prog[p++];\n                if (ch == '=') {\n                    syn = 25;\n                    token[m++] = ch;\n                } else {\n                    syn = 18;\n                    p--;\n                }\n                break;\n            case '*': syn = 15; break;\n            case '/': syn = 16; break;\n            case '(': syn = 27; break;\n            case ')': syn = 28; break;\n            case '{': syn = 5; break;\n            case '}': syn = 6; break;\n            case ';': syn = 26; break;\n            case '\\\"': syn = 30; break;\n            case '#': syn = 0; break;\n            case ':': syn = 17; break;\n            default: syn = -1; break;\n        }\n    }\n    token[m] = '\\0';  // 结束token字符串\n}\n\n```\n\n\n<details> \n<summary>点击显示/隐藏</summary>\n<p>这段代码是一个简单的词法分析器（Lexical Analyzer），用于解析输入字符串并将其拆分为词法单元（Token），如标识符、数字、保留字和操作符等。词法分析器是编译器前端的一部分，它读取源代码，将其分解为有意义的基本元素，供后续的语法分析阶段使用。</p>\n<h3>程序的结构概述</h3>\n<ul>\n<li><strong>全局变量</strong>：<ul>\n<li><code>prog[80]</code>: 用来存储输入的程序字符序列，最多可容纳80个字符。</li>\n<li><code>token[32]</code>: 存储当前识别的词法单元（Token），最大长度为32个字符。</li>\n<li><code>ch</code>: 用来存储当前读取的字符。</li>\n<li><code>syn</code>: 用来表示当前识别的词法单元的类型（如保留字、标识符、操作符等）。</li>\n<li><code>p</code>: 指向 <code>prog</code> 中当前读取字符的位置。</li>\n<li><code>m</code>: 指向 <code>token</code> 中存储字符的位置。</li>\n<li><code>n</code>: 辅助变量，用于遍历保留字表。</li>\n<li><code>sum</code>: 用于处理数字时存储数值。</li>\n<li><code>rwtab[6]</code>: 保留字表，包含6个保留字：<code>begin</code>, <code>if</code>, <code>then</code>, <code>while</code>, <code>do</code>, <code>end</code>。</li>\n</ul>\n</li>\n</ul>\n<h3>主要函数</h3>\n<ol>\n<li><p><strong><code>main</code> 函数</strong>：</p>\n<ul>\n<li>程序从 <code>main</code> 函数开始，首先读取用户输入的字符串并存储在 <code>prog</code> 数组中，输入以 <code>#</code> 结束。</li>\n<li>然后，调用 <code>scaner</code> 函数进行词法分析。<code>scaner</code> 函数会不断返回词法单元，直到遇到 <code>#</code> 为止。</li>\n<li>根据 <code>syn</code> 的值，决定如何输出词法单元，分别处理数字、保留字、标识符、符号以及错误情况。</li>\n</ul>\n</li>\n<li><p><strong><code>scaner</code> 函数（词法分析的核心部分）</strong>：</p>\n<ul>\n<li><strong>步骤 1：跳过空白字符</strong>。从 <code>prog</code> 中读取字符，忽略空格和换行符。</li>\n<li><strong>步骤 2：识别标识符或保留字</strong>。如果字符是字母，进入标识符或保留字识别逻辑。持续读取字母或数字字符，直到遇到非字母或非数字字符。然后检查是否是保留字，如果是，设置相应的 <code>syn</code> 值（1-6），否则 <code>syn</code> 设为 10（标识符）。</li>\n<li><strong>步骤 3：识别数字</strong>。如果字符是数字，进入数字识别逻辑，构造数值并存储在 <code>sum</code> 中，最后将 <code>syn</code> 设为 11。</li>\n<li><strong>步骤 4：识别符号</strong>。如果是操作符或其他符号（如 <code>+</code>、<code>-</code>、<code>&lt;</code>、<code>&gt;</code> 等），根据规则构造相应的词法单元，给出对应的 <code>syn</code> 值。部分符号（如 <code>&lt;=</code>、<code>&gt;=</code>）需要多读取一个字符进行判断。</li>\n<li><strong>步骤 5：结束标记</strong>。如果遇到 <code>#</code>，将 <code>syn</code> 设为 0，表示结束。</li>\n<li><strong>步骤 6：错误处理</strong>。如果遇到无法识别的字符，将 <code>syn</code> 设为 -1，并在 <code>main</code> 函数中输出错误信息。</li>\n</ul>\n</li>\n</ol>\n<h3>词法单元类型 (<code>syn</code>) 对应表：</h3>\n<ul>\n<li>保留字（<code>begin</code>, <code>if</code>, <code>then</code>, <code>while</code>, <code>do</code>, <code>end</code>）：1-6</li>\n<li>标识符：10</li>\n<li>数字：11</li>\n<li>操作符和符号：<ul>\n<li><code>&lt;</code>：20, <code>&lt;=</code>：22</li>\n<li><code>&gt;</code>：23, <code>&gt;=</code>：24</li>\n<li><code>=</code>：18, <code>==</code>：25</li>\n<li><code>!</code>：31, <code>!=</code>：21</li>\n<li><code>+</code>：13, <code>++</code>：17</li>\n<li><code>-</code>：14, <code>--</code>：29</li>\n<li><code>*</code>：15</li>\n<li><code>/</code>：16</li>\n<li><code>(</code>：27, <code>)</code>：28</li>\n<li><code>{</code>：5, <code>}</code>：6</li>\n<li><code>;</code>：26</li>\n<li><code>#</code>：0 （结束标记）</li>\n</ul>\n</li>\n<li>错误字符：<code>syn = -1</code></li>\n</ul>\n<h3>程序运行过程：</h3>\n<ol>\n<li><p><strong>输入阶段</strong>：</p>\n<ul>\n<li>用户输入一段以 <code>#</code> 结束的字符串，程序读取并存储在 <code>prog</code> 数组中。</li>\n</ul>\n</li>\n<li><p><strong>词法分析阶段</strong>：</p>\n<ul>\n<li>程序调用 <code>scaner</code> 函数，逐个扫描字符并识别出相应的词法单元。</li>\n<li><code>scaner</code> 会判断当前字符属于哪种类型：保留字、标识符、数字或符号，并赋值 <code>syn</code> 作为识别标志。</li>\n<li>程序输出对应的词法单元和 <code>syn</code> 值，直到遇到 <code>#</code> 为止。</li>\n</ul>\n</li>\n<li><p><strong>输出阶段</strong>：</p>\n<ul>\n<li>若为标识符或保留字，程序会输出标识符或保留字的字符串和对应的 <code>syn</code> 值。</li>\n<li>若为数字，程序会输出数值和 <code>syn = 11</code>。</li>\n<li>若遇到错误输入，程序会提示用户输入了错误的字符串，并终止运行。</li>\n</ul>\n</li>\n</ol>\n<h3>总结：</h3>\n<p>这个程序实现了一个简单的词法分析器，能够处理保留字、标识符、数字和常见的操作符。对于初学者而言，它提供了一个理解编译器前端词法分析功能的基础框架，后续可以通过增加更多的保留字、符号或扩展错误处理来进一步完善。</p>\n<h3>主要函数</h3>\n<ol>\n<li><p><strong><code>main</code> 函数</strong>：</p>\n<ul>\n<li>程序从 <code>main</code> 函数开始，首先读取用户输入的字符串并存储在 <code>prog</code> 数组中，输入以 <code>#</code> 结束。</li>\n<li>然后，调用 <code>scaner</code> 函数进行词法分析。<code>scaner</code> 函数会不断返回词法单元，直到遇到 <code>#</code> 为止。</li>\n<li>根据 <code>syn</code> 的值，决定如何输出词法单元，分别处理数字、保留字、标识符、符号以及错误情况。</li>\n</ul>\n</li>\n<li><p><strong><code>scaner</code> 函数（词法分析的核心部分）</strong>：</p>\n<ul>\n<li><strong>步骤 1：跳过空白字符</strong>。从 <code>prog</code> 中读取字符，忽略空格和换行符。</li>\n<li><strong>步骤 2：识别标识符或保留字</strong>。如果字符是字母，进入标识符或保留字识别逻辑。持续读取字母或数字字符，直到遇到非字母或非数字字符。然后检查是否是保留字，如果是，设置相应的 <code>syn</code> 值（1-6），否则 <code>syn</code> 设为 10（标识符）。</li>\n<li><strong>步骤 3：识别数字</strong>。如果字符是数字，进入数字识别逻辑，构造数值并存储在 <code>sum</code> 中，最后将 <code>syn</code> 设为 11。</li>\n<li><strong>步骤 4：识别符号</strong>。如果是操作符或其他符号（如 <code>+</code>、<code>-</code>、<code>&lt;</code>、<code>&gt;</code> 等），根据规则构造相应的词法单元，给出对应的 <code>syn</code> 值。部分符号（如 <code>&lt;=</code>、<code>&gt;=</code>）需要多读取一个字符进行判断。</li>\n<li><strong>步骤 5：结束标记</strong>。如果遇到 <code>#</code>，将 <code>syn</code> 设为 0，表示结束。</li>\n<li><strong>步骤 6：错误处理</strong>。如果遇到无法识别的字符，将 <code>syn</code> 设为 -1，并在 <code>main</code> 函数中输出错误信息。</li>\n</ul>\n</li>\n</ol>\n<h3>词法单元类型 (<code>syn</code>) 对应表：</h3>\n<ul>\n<li>保留字（<code>begin</code>, <code>if</code>, <code>then</code>, <code>while</code>, <code>do</code>, <code>end</code>）：1-6</li>\n<li>标识符：10</li>\n<li>数字：11</li>\n<li>操作符和符号：<ul>\n<li><code>&lt;</code>：20, <code>&lt;=</code>：22</li>\n<li><code>&gt;</code>：23, <code>&gt;=</code>：24</li>\n<li><code>=</code>：18, <code>==</code>：25</li>\n<li><code>!</code>：31, <code>!=</code>：21</li>\n<li><code>+</code>：13, <code>++</code>：17</li>\n<li><code>-</code>：14, <code>--</code>：29</li>\n<li><code>*</code>：15</li>\n<li><code>/</code>：16</li>\n<li><code>(</code>：27, <code>)</code>：28</li>\n<li><code>{</code>：5, <code>}</code>：6</li>\n<li><code>;</code>：26</li>\n<li><code>#</code>：0 （结束标记）</li>\n</ul>\n</li>\n<li>错误字符：<code>syn = -1</code></li>\n</ul>\n<h3>程序运行过程：</h3>\n<ol>\n<li><p><strong>输入阶段</strong>：</p>\n<ul>\n<li>用户输入一段以 <code>#</code> 结束的字符串，程序读取并存储在 <code>prog</code> 数组中。</li>\n</ul>\n</li>\n<li><p><strong>词法分析阶段</strong>：</p>\n<ul>\n<li>程序调用 <code>scaner</code> 函数，逐个扫描字符并识别出相应的词法单元。</li>\n<li><code>scaner</code> 会判断当前字符属于哪种类型：保留字、标识符、数字或符号，并赋值 <code>syn</code> 作为识别标志。</li>\n<li>程序输出对应的词法单元和 <code>syn</code> 值，直到遇到 <code>#</code> 为止。</li>\n</ul>\n</li>\n<li><p><strong>输出阶段</strong>：</p>\n<ul>\n<li>若为标识符或保留字，程序会输出标识符或保留字的字符串和对应的 <code>syn</code> 值。</li>\n<li>若为数字，程序会输出数值和 <code>syn = 11</code>。</li>\n<li>若遇到错误输入，程序会提示用户输入了错误的字符串，并终止运行。</li>\n</ul>\n</li>\n</ol>\n<h3>总结：</h3>\n<p>这个程序实现了一个简单的词法分析器，能够处理保留字、标识符、数字和常见的操作符。对于初学者而言，它提供了一个理解编译器前端词法分析功能的基础框架，后续可以通过增加更多的保留字、符号或扩展错误处理来进一步完善。</p>\n<h3>1. <code>memset(token, 0, sizeof(token));  // 清空token数组</code></h3>\n<p><code>memset</code> 是 C 标准库中的函数，用于将内存中的某一块区域全部填充为某个值。在这行代码中：</p>\n<ul>\n<li><strong><code>token</code></strong> 是一个字符数组，用来存储当前正在分析的词法单元（Token）。</li>\n<li><strong><code>sizeof(token)</code></strong> 表示 <code>token</code> 数组的大小，即 32 字节。</li>\n<li><strong><code>memset(token, 0, sizeof(token))</code></strong> 将 <code>token</code> 数组的所有元素设置为 0，也就是将整个数组清空。</li>\n</ul>\n<p>在词法分析中，每次读取到新的词法单元时，需要重置 <code>token</code>，以确保不受之前词法单元的影响。</p>\n<h3>2. <code>p--;  // 回退一个字符</code></h3>\n<p>在词法分析过程中，程序会不断从 <code>prog</code> 数组中读取字符，<code>p</code> 是当前字符的指针（数组下标）。当 <code>scaner</code> 函数识别出一个完整的标识符、数字或符号时，通常会多读取了一个不属于该词法单元的字符（如空格、符号等），这时就需要将指针回退一个字符。</p>\n<p><strong>作用</strong>：</p>\n<ul>\n<li>在识别标识符、数字等连续字符的词法单元时，<code>p--;</code> 确保不会跳过或漏掉字符。通过回退，可以让下次词法分析继续处理下一个未分析的字符。</li>\n</ul>\n<p>例如：</p>\n<ul>\n<li>假设输入为 <code>&quot;abc &quot;</code>，程序在读取 <code>&quot;abc&quot;</code> 时，会额外读取一个空格。因此需要回退一个字符，以便后续继续分析。</li>\n</ul>\n<h3>3. <code>strcmp(token, rwtab[n])  // 比较 token 和 rwtab[n]</code></h3>\n<p><code>strcmp</code> 是 C 标准库中的字符串比较函数。它用来比较两个字符串的内容是否相同。</p>\n<ul>\n<li><strong><code>token</code></strong> 是存储当前识别的词法单元的字符数组。</li>\n<li><strong><code>rwtab[n]</code></strong> 是保留字表中的一个字符串，如 <code>&quot;begin&quot;</code>, <code>&quot;if&quot;</code> 等。</li>\n<li><strong><code>strcmp(token, rwtab[n])</code></strong> 会比较 <code>token</code> 和 <code>rwtab[n]</code> 是否相等。<ul>\n<li>如果相等，返回 0，说明当前 <code>token</code> 是保留字；</li>\n<li>如果不相等，返回非 0 值，说明 <code>token</code> 不是当前比较的保留字。</li>\n</ul>\n</li>\n</ul>\n<p>通过遍历 <code>rwtab</code> 数组中的保留字列表，可以判断当前 <code>token</code> 是否为保留字。</p>\n<h3>4. <code>token[m] = &#39;\\0&#39;;  // 结束token字符串</code></h3>\n<p>C 语言中的字符串以 <code>\\0</code>（空字符）作为结束标志。这一行代码的作用是将 <code>token</code> 数组的最后一位设置为 <code>\\0</code>，从而将它标记为一个合法的 C 字符串。</p>\n<ul>\n<li><strong>为什么要这样做？</strong><ul>\n<li>在 C 语言中，字符串是以字符数组的形式表示的，并且字符串的结尾必须用 <code>\\0</code> 来表示，否则该字符数组无法作为字符串使用。</li>\n<li><code>\\0</code> 确保 <code>token</code> 在后续操作（例如 <code>strcmp</code>）中可以正确处理和比较。</li>\n</ul>\n</li>\n</ul>\n<p><strong>总结</strong>：  </p>\n<ul>\n<li><strong><code>memset</code></strong>：清空 <code>token</code>，以防残留数据影响词法分析。</li>\n<li><strong><code>p--</code></strong>：回退一个字符，确保下次分析从正确位置开始。</li>\n<li><strong><code>strcmp</code></strong>：比较 <code>token</code> 是否与保留字表中的某个保留字相同。</li>\n<li><strong><code>token[m] = &#39;\\0</code></strong>：将 <code>token</code> 标记为一个以 <code>\\0</code> 结尾的合法 C 字符串，确保后续字符串操作可以正确进行。</li>\n</ul></details>\n\n\n### 2. 语法分析\n\n```c\n#include <conio.h>\n#include <stdio.h>\n#include <string.h>\n\nchar prog[100], token[8], ch;\nchar *rwtab[6] = {\"begin\", \"if\", \"then\", \"while\", \"do\", \"end\"};\nint syn, p, m, n, sum, kk;\n\n// 函数声明\nvoid scaner();\nint lrparser();\nint yucu();\nint statement();\nint expression();\nint term();\nint factor();\n\nint main() {\n    p = kk = 0;\n    printf(\"\\nPlease input a string (end with '#'): \\n\");\n\n    // 读入程序字符\n    do {\n        scanf(\"%c\", &ch);\n        prog[p++] = ch;\n    } while (ch != '#');\n\n    p = 0;\n    scaner(); // 读取第一个单词符号\n    lrparser(); // 进行语法分析\n    getch();\n    return 0;\n}\n\n// LR语法分析器\nint lrparser() {\n    if (syn == 1) { // 'begin'\n        scaner();       // 读下一个单词符号\n        yucu();         // 调用语句序列处理\n        if (syn == 6) { // 'end'\n            scaner();\n            if (syn == 0) { // 成功\n                printf(\"Success!\\n\");\n            }\n        } else {\n            printf(\"Error: Expected 'end'!\\n\");\n        }\n    } else {\n        printf(\"Error: Expected 'begin'!\\n\");\n    }\n    return 0;\n}\n\n// 处理语句序列\nint yucu() {\n    statement();   // 调用语句处理\n    while (syn == 26) { // ';'\n        scaner();   // 读下一个单词符号\n        if (syn != 6) { // 如果不是'end'，继续处理下一个语句\n            statement();\n        }\n    }\n    return 0;\n}\n\n// 处理单条语句\nint statement() {\n    if (syn == 10) { // 标识符\n        scaner(); // 读下一个单词符号\n        if (syn == 18) { // ':='\n            scaner(); // 读下一个单词符号\n            expression(); // 处理表达式\n        } else {\n            printf(\"Error: Expected ':='\\n\");\n            kk = 1;\n        }\n    } else {\n        printf(\"Error: Invalid statement!\\n\");\n        kk = 1;\n    }\n    return 0;\n}\n\n// 处理表达式\nint expression() {\n    term(); // 处理项\n    while (syn == 13 || syn == 14) { // '+'或'-'\n        scaner(); // 读下一个单词符号\n        term();   // 处理项\n    }\n    return 0;\n}\n\n// 处理项\nint term() {\n    factor(); // 处理因子\n    while (syn == 15 || syn == 16) { // '*'或'/'\n        scaner(); // 读下一个单词符号\n        factor(); // 处理因子\n    }\n    return 0;\n}\n\n// 处理因子\nint factor() {\n    if (syn == 10 || syn == 11) { // 标识符或数字\n        scaner(); // 读下一个单词符号\n    } else if (syn == 27) { // '('\n        scaner();\n        expression(); // 处理表达式\n        if (syn == 28) { // ')'\n            scaner(); // 读下一个单词符号\n        } else {\n            printf(\"Error: Expected ')'\\n\");\n            kk = 1;\n        }\n    } else {\n        printf(\"Error: Invalid factor!\\n\");\n        kk = 1;\n    }\n    return 0;\n}\n\n// 词法分析器\nvoid scaner() {\n    sum = 0;\n    memset(token, 0, sizeof(token)); // 清空token\n    m = 0;\n    ch = prog[p++];\n\n    while (ch == ' ') ch = prog[p++]; // 跳过空格\n\n    if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {\n        // 处理标识符\n        while ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9')) {\n            token[m++] = ch;\n            ch = prog[p++];\n        }\n        p--; // 回退\n        syn = 10; // 默认是标识符\n        for (n = 0; n < 6; n++) {\n            if (strcmp(token, rwtab[n]) == 0) {\n                syn = n + 1; // 是保留字\n                break;\n            }\n        }\n    } else if (ch >= '0' && ch <= '9') {\n        // 处理数字\n        while (ch >= '0' && ch <= '9') {\n            sum = sum * 10 + ch - '0';\n            ch = prog[p++];\n        }\n        p--; // 回退\n        syn = 11; // 数字\n    } else {\n        // 处理运算符和分隔符\n        switch (ch) {\n            case '<': ch = prog[p++]; syn = (ch == '=') ? 22 : (ch == '>') ? 21 : 20; break;\n            case '>': ch = prog[p++]; syn = (ch == '=') ? 24 : 23; break;\n            case ':': ch = prog[p++]; syn = (ch == '=') ? 18 : 17; break;\n            case '+': syn = 13; break;\n            case '-': syn = 14; break;\n            case '*': syn = 15; break;\n            case '/': syn = 16; break;\n            case '(': syn = 27; break;\n            case ')': syn = 28; break;\n            case '=': syn = 25; break;\n            case ';': syn = 26; break;\n            case '#': syn = 0; break;\n            default: syn = -1; break;\n        }\n    }\n}\n\n```\n\n<details>\n<summary>点击显示/隐藏</summary>\n<p>这个程序实现了一个简单的 <strong>LR语法分析器</strong>，用来分析包含保留字、标识符、数字和基本算术表达式的小型程序。语法分析器通过词法分析（<code>scaner</code> 函数）解析输入的字符流，并基于一定的语法规则逐步匹配输入内容，检测输入是否符合语言定义的语法结构。</p>\n<p>下面我将详细解释程序的功能和运行过程：</p>\n<h3>1. <strong>运行过程概述</strong>：</h3>\n<ul>\n<li>程序首先读入一个以 <code>#</code> 结尾的字符串，该字符串表示一个简化的程序。</li>\n<li>程序通过词法分析（<code>scaner</code> 函数）将输入字符流解析成词法单元（Token），词法单元可以是标识符、保留字、数字或符号。</li>\n<li>然后通过语法分析器（<code>lrparser</code> 函数），依据一个预定的语法规则，判断输入是否符合特定的语法。如果输入符合语法规则，输出 &quot;Success!&quot;，否则输出相应的错误信息。</li>\n</ul>\n<h3>2. <strong>主要函数介绍</strong>：</h3>\n<h4><strong>主函数 <code>main</code></strong></h4>\n<pre><code class=\"language-c\">int main() {\n    p = kk = 0;\n    printf(&quot;\\nPlease input a string (end with &#39;#&#39;): \\n&quot;);\n    do {\n        scanf(&quot;%c&quot;, &amp;ch);\n        prog[p++] = ch;\n    } while (ch != &#39;#&#39;);\n    p = 0;\n    scaner(); // 读取第一个单词符号\n    lrparser(); // 进行语法分析\n    getch();\n    return 0;\n}\n</code></pre>\n<ul>\n<li><strong><code>p</code></strong> 和 <strong><code>kk</code></strong> 初始化为 0，<code>p</code> 是指向当前字符的索引，<code>kk</code> 是错误标志变量。</li>\n<li>程序通过 <code>scanf</code> 一次读取一个字符，直到遇到 <code>#</code>。读入的字符保存在 <code>prog</code> 数组中。</li>\n<li>调用 <code>scaner()</code> 函数进行词法分析，从输入字符串中解析出第一个词法单元。</li>\n<li>调用 <code>lrparser()</code> 函数进行 LR 语法分析，分析输入的句子是否符合语法规则。</li>\n</ul>\n<h4><strong>LR 语法分析器 <code>lrparser</code></strong></h4>\n<pre><code class=\"language-c\">int lrparser() {\n    if (syn == 1) { // &#39;begin&#39;\n        scaner();       // 读下一个单词符号\n        yucu();         // 调用语句序列处理\n        if (syn == 6) { // &#39;end&#39;\n            scaner();\n            if (syn == 0) { // 成功\n                printf(&quot;Success!\\n&quot;);\n            }\n        } else {\n            printf(&quot;Error: Expected &#39;end&#39;!\\n&quot;);\n        }\n    } else {\n        printf(&quot;Error: Expected &#39;begin&#39;!\\n&quot;);\n    }\n    return 0;\n}\n</code></pre>\n<ul>\n<li><code>lrparser</code> 是语法分析器的核心。它判断输入的程序是否以 <code>begin</code> 开头，并调用 <code>yucu()</code> 函数处理语句序列。</li>\n<li>如果匹配到 <code>begin</code> 后，解析到 <code>end</code>，且 <code>end</code> 后没有其他多余的字符（即遇到 <code>#</code>），表示语法分析成功，输出 &quot;Success!&quot;。</li>\n<li>如果未能正确匹配到 <code>begin</code> 或 <code>end</code>，则输出相应的错误信息。</li>\n</ul>\n<h4><strong>处理语句序列 <code>yucu</code></strong></h4>\n<pre><code class=\"language-c\">int yucu() {\n    statement();   // 调用语句处理\n    while (syn == 26) { // &#39;;&#39;\n        scaner();   // 读下一个单词符号\n        if (syn != 6) { // 如果不是&#39;end&#39;，继续处理下一个语句\n            statement();\n        }\n    }\n    return 0;\n}\n</code></pre>\n<ul>\n<li><code>yucu</code> 负责处理一连串的语句。它首先调用 <code>statement()</code> 处理一条语句，然后检查是否有分号（<code>;</code>）分隔的多条语句。</li>\n<li>每当遇到分号时，继续处理下一条语句，直到遇到 <code>end</code> 或没有更多语句。</li>\n</ul>\n<h4><strong>处理单条语句 <code>statement</code></strong></h4>\n<pre><code class=\"language-c\">int statement() {\n    if (syn == 10) { // 标识符\n        scaner(); // 读下一个单词符号\n        if (syn == 18) { // &#39;:=&#39;\n            scaner(); // 读下一个单词符号\n            expression(); // 处理表达式\n        } else {\n            printf(&quot;Error: Expected &#39;:=&#39;\\n&quot;);\n            kk = 1;\n        }\n    } else {\n        printf(&quot;Error: Invalid statement!\\n&quot;);\n        kk = 1;\n    }\n    return 0;\n}\n</code></pre>\n<ul>\n<li><code>statement</code> 负责处理单个语句。它要求语句必须是 <strong>标识符（syn = 10）</strong>，并且接着是赋值运算符 <code>:=</code>（syn = 18）。</li>\n<li>如果语句格式正确，则调用 <code>expression()</code> 处理右侧的表达式。</li>\n<li>如果语法不正确，会输出相应的错误信息，并设置错误标志 <code>kk</code>。</li>\n</ul>\n<h4><strong>处理表达式 <code>expression</code></strong></h4>\n<pre><code class=\"language-c\">int expression() {\n    term(); // 处理项\n    while (syn == 13 || syn == 14) { // &#39;+&#39;或&#39;-&#39;\n        scaner(); // 读下一个单词符号\n        term();   // 处理项\n    }\n    return 0;\n}\n</code></pre>\n<ul>\n<li><code>expression</code> 负责处理一个由 <strong>项（term）</strong> 组成的表达式。项之间可以由 <code>+</code> 或 <code>-</code> 连接。</li>\n<li>它首先调用 <code>term()</code> 处理一个项，然后检查是否有 <code>+</code> 或 <code>-</code>，如果有则继续处理下一个项。</li>\n</ul>\n<h4><strong>处理项 <code>term</code></strong></h4>\n<pre><code class=\"language-c\">int term() {\n    factor(); // 处理因子\n    while (syn == 15 || syn == 16) { // &#39;*&#39;或&#39;/&#39;\n        scaner(); // 读下一个单词符号\n        factor(); // 处理因子\n    }\n    return 0;\n}\n</code></pre>\n<ul>\n<li><code>term</code> 处理一个由 <strong>因子（factor）</strong> 组成的项，项之间可以由 <code>*</code> 或 <code>/</code> 连接。</li>\n<li>它首先调用 <code>factor()</code> 处理一个因子，然后检查是否有 <code>*</code> 或 <code>/</code>，如果有则继续处理下一个因子。</li>\n</ul>\n<h4><strong>处理因子 <code>factor</code></strong></h4>\n<pre><code class=\"language-c\">int factor() {\n    if (syn == 10 || syn == 11) { // 标识符或数字\n        scaner(); // 读下一个单词符号\n    } else if (syn == 27) { // &#39;(&#39;\n        scaner();\n        expression(); // 处理表达式\n        if (syn == 28) { // &#39;)&#39;\n            scaner(); // 读下一个单词符号\n        } else {\n            printf(&quot;Error: Expected &#39;)&#39;\\n&quot;);\n            kk = 1;\n        }\n    } else {\n        printf(&quot;Error: Invalid factor!\\n&quot;);\n        kk = 1;\n    }\n    return 0;\n}\n</code></pre>\n<ul>\n<li><code>factor</code> 处理一个因子，因子可以是 <strong>标识符、数字</strong> 或 <strong>带括号的表达式</strong>。</li>\n<li>如果遇到 <code>(</code>，则递归调用 <code>expression()</code> 处理括号内的表达式，并要求最后必须遇到 <code>)</code>。</li>\n<li>如果遇到的不是标识符、数字或有效括号表达式，输出错误信息。</li>\n</ul>\n<h3>3. <strong>词法分析器 <code>scaner</code></strong></h3>\n<pre><code class=\"language-c\">void scaner() {\n    sum = 0;\n    memset(token, 0, sizeof(token)); // 清空token\n    m = 0;\n    ch = prog[p++];\n    while (ch == &#39; &#39;) ch = prog[p++]; // 跳过空格\n    if ((ch &gt;= &#39;a&#39; &amp;&amp; ch &lt;= &#39;z&#39;) || (ch &gt;= &#39;A&#39; &amp;&amp; ch &lt;= &#39;Z&#39;)) {\n        // 处理标识符\n        while ((ch &gt;= &#39;a&#39; &amp;&amp; ch &lt;= &#39;z&#39;) || (ch &gt;= &#39;A&#39; &amp;&amp; ch &lt;= &#39;Z&#39;) || (ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;)) {\n            token[m++] = ch;\n            ch = prog[p++];\n        }\n        p--; // 回退\n        syn = 10; // 默认是标识符\n        for (n = 0; n &lt; 6; n++) {\n            if (strcmp(token, rwtab[n]) == 0) {\n                syn = n + 1; // 是保留字\n                break;\n            }\n        }\n    } else if (ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;) {\n        // 处理数字\n        while (ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;) {\n            sum = sum * 10 + ch - &#39;0&#39;;\n            ch = prog[p++];\n        }\n        p--; // 回退\n        syn = 11; // 数字\n    } else {\n        // 处理运算符和分隔符\n        switch (ch) {\n            case &#39;&lt;&#39;: ch = prog[p++]; syn = (ch == &#39;=&#39;) ? 22 : (ch == &#39;&gt;&#39;) ? 21 : 20; break;\n            case &#39;&gt;&#39;: ch = prog[p++]; syn = (ch\n == &#39;=&#39;) ? 24 : 23; break;\n        case &#39;:&#39;: ch = prog[p++]; syn = (ch == &#39;=&#39;) ? 18 : 17;break;\n            case &#39;+&#39;: syn = 13; break;\n            case &#39;-&#39;: syn = 14; break;\n            case &#39;*&#39;: syn = 15; break;\n            case &#39;/&#39;: syn = 16; break;\n            case &#39;(&#39;: syn = 27; break;\n            case &#39;)&#39;: syn = 28; break;\n            case &#39;=&#39;: syn = 25; break;\n            case &#39;;&#39;: syn = 26; break;\n            case &#39;#&#39;: syn = 0; break;\n            default: syn = -1; break;\n        }\n    }\n}</code></pre><ul>\n<li><code>scaner()</code> 函数是词法分析器，用来从输入中读取下一个词法单元并根据类型给 <code>syn</code> 赋值。</li>\n<li>它会处理空格，跳过空格后继续分析单词。</li>\n<li><strong>标识符</strong>：由字母和数字组成，默认 <code>syn = 10</code>，并检查是否为保留字（如 <code>begin</code>、<code>if</code> 等）。</li>\n<li><strong>数字</strong>：连续的数字序列，<code>syn = 11</code>。</li>\n<li><strong>运算符和符号</strong>：通过 <code>switch</code> 语句处理常见的运算符和分隔符（如 <code>+</code>, <code>-</code>, <code>*</code>, <code>:</code>, <code>#</code> 等）。</li>\n</ul>\n<h3>4. <strong>难点解释</strong>：</h3>\n<ul>\n<li><strong>词法分析中的回退 <code>p--</code></strong>：在处理标识符或数字时，会多读入一个字符（可能是下一个单词的开始），因此需要将指针 <code>p</code> 回退一个，以便下次分析能正确从未处理的字符开始。</li>\n<li><strong>语法分析中的递归调用</strong>：语法分析器通过递归调用（如 <code>expression</code> 调用 <code>term</code>，<code>term</code> 调用 <code>factor</code>）来处理更复杂的语法结构。递归调用是匹配嵌套语法（如括号中的表达式）的常用方式。</li>\n</ul>\n<h3>总结：</h3>\n<ul>\n<li>这个程序通过词法分析将输入分割成词法单元，再通过语法分析判断词法单元是否符合预定的语法规则。</li>\n<li>语法分析器采用递归下降法处理保留字、赋值语句、算术表达式等简单语法结构。</li>\n<li>输入若符合语法规则，程序输出 <code>Success!</code>，否则输出错误信息。</li>\n</ul></details>\n\n### 3.语义分析\n\n```c\n\n#include <conio.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n\n#define MAX_PROG_LEN 100\n#define MAX_TOKEN_LEN 8\n#define MAX_QUAD 20\n\nchar prog[MAX_PROG_LEN], token[MAX_TOKEN_LEN], ch;\nchar *rwtab[6] = {\"begin\", \"if\", \"then\", \"while\", \"do\", \"end\"};\nint syn, p, m, n, sum, q;\nint temp_count = 0;\n\nstruct {\n    char result[MAX_TOKEN_LEN];\n    char arg1[MAX_TOKEN_LEN];\n    char op[MAX_TOKEN_LEN];\n    char arg2[MAX_TOKEN_LEN];\n} quad[MAX_QUAD];\n\n// 函数声明\nchar* factor();\nchar* expression();\nint parse_statements();\nchar* term();\nint statement();\nint lrparser();\nchar* new_temp();\nvoid scaner();\nint emit(const char* result, const char* arg1, const char* op, const char* arg2);\nvoid error(const char* msg);\n\nint main() {\n    int i;\n    q = p = temp_count = 0;\n\n    printf(\"\\nPlease input a string (end with '#'): \");\n    do {\n        scanf(\"%c\", &ch);\n        prog[p++] = ch;\n    } while (ch != '#');\n\n    p = 0;\n    scaner(); // 进行词法分析\n    lrparser(); // 语法分析并生成四元式\n\n    if (q > MAX_QUAD) {\n        printf(\"Too long sentence!\\n\");\n    } else {\n        for (i = 0; i < q; i++) {\n            printf(\" %s = %s %s %s \\n\", quad[i].result, quad[i].arg1, quad[i].op, quad[i].arg2);\n        }\n    }\n\n    getch();\n    return 0;\n}\n\nint lrparser() {\n    if (syn == 1) { // 'begin' token\n        scaner();\n        parse_statements();\n        if (syn == 6) { // 'end' token\n            scaner();\n            if (syn == 0) {\n                printf(\"Success!\\n\");\n            } else {\n                error(\"Unexpected token after 'end'\");\n            }\n        } else {\n            error(\"Missing 'end'!\");\n        }\n    } else {\n        error(\"Missing 'begin'!\");\n    }\n    return 0;\n}\n\nint parse_statements() {\n    while (syn == 10) { // identifier\n        statement();\n        if (syn == 26) { // ';'\n            scaner();\n        } else {\n            break;\n        }\n    }\n    return 0;\n}\n\nint statement() {\n    char tt[MAX_TOKEN_LEN], eplace[MAX_TOKEN_LEN];\n    if (syn == 10) { // identifier\n        strcpy(tt, token);\n        scaner();\n        if (syn == 18) { // ':='\n            scaner();\n            strcpy(eplace, expression());\n            emit(tt, eplace, \"\", \"\");\n        } else {\n            error(\"Missing ':='!\");\n        }\n    }\n    return 0;\n}\n\nchar* expression() {\n    char* eplace = term();\n    while (syn == 13 || syn == 14) { // '+' or '-'\n        char op[MAX_TOKEN_LEN];\n        strcpy(op, (syn == 13) ? \"+\" : \"-\");\n        scaner();\n        char* ep2 = term();\n        char* temp = new_temp();\n        emit(temp, eplace, op, ep2);\n        eplace = temp;\n    }\n    return eplace;\n}\n\nchar* term() {\n    char* eplace = factor();\n    while (syn == 15 || syn == 16) { // '*' or '/'\n        char op[MAX_TOKEN_LEN];\n        strcpy(op, (syn == 15) ? \"*\" : \"/\");\n        scaner();\n        char* ep2 = factor();\n        char* temp = new_temp();\n        emit(temp, eplace, op, ep2);\n        eplace = temp;\n    }\n    return eplace;\n}\n\nchar* factor() {\n    char* fplace = (char*)malloc(MAX_TOKEN_LEN);\n    if (syn == 10) { // identifier\n        strcpy(fplace, token);\n        scaner();\n    } else if (syn == 11) { // number\n        sprintf(fplace, \"%d\", sum);\n        scaner();\n    } else if (syn == 27) { // '('\n        scaner();\n        fplace = expression();\n        if (syn == 28) { // ')'\n            scaner();\n        } else {\n            error(\"Missing ')'!\");\n        }\n    } else {\n        error(\"Syntax error in factor!\");\n    }\n    return fplace;\n}\n\nchar* new_temp() {\n    char* temp = (char*)malloc(MAX_TOKEN_LEN);\n    sprintf(temp, \"t%d\", ++temp_count);\n    return temp;\n}\n\nvoid scaner() {\n    sum = 0;\n    memset(token, 0, sizeof(token)); // 清空 token\n    m = 0;\n    ch = prog[p++];\n\n    while (ch == ' ') ch = prog[p++]; // 跳过空格\n\n    // 处理标识符或关键字\n    if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {\n        while ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9')) {\n            token[m++] = ch;\n            ch = prog[p++];\n        }\n        p--;\n        syn = 10; // 默认是标识符\n        for (n = 0; n < 6; n++) {\n            if (strcmp(token, rwtab[n]) == 0) {\n                syn = n + 1; // 如果是关键字\n                break;\n            }\n        }\n    }\n        // 处理数字\n    else if (ch >= '0' && ch <= '9') {\n        while (ch >= '0' && ch <= '9') {\n            sum = sum * 10 + ch - '0';\n            ch = prog[p++];\n        }\n        p--;\n        syn = 11; // 数字\n    }\n        // 处理符号\n    else {\n        switch (ch) {\n            case '<': syn = (prog[p] == '=') ? (p++, 22) : 20; break;\n            case '>': syn = (prog[p] == '=') ? (p++, 24) : 23; break;\n            case ':': syn = (prog[p] == '=') ? (p++, 18) : 17; break;\n            case '+': syn = 13; break;\n            case '-': syn = 14; break;\n            case '*': syn = 15; break;\n            case '/': syn = 16; break;\n            case '(': syn = 27; break;\n            case ')': syn = 28; break;\n            case '=': syn = 25; break;\n            case ';': syn = 26; break;\n            case '#': syn = 0; break;\n            default: syn = -1; break; // 未知符号\n        }\n    }\n}\n\nint emit(const char* result, const char* arg1, const char* op, const char* arg2) {\n    strcpy(quad[q].result, result);\n    strcpy(quad[q].arg1, arg1);\n    strcpy(quad[q].op, op);\n    strcpy(quad[q].arg2, arg2);\n    q++;\n    return 0;\n}\n\nvoid error(const char* msg) {\n    printf(\"Error: %s\\n\", msg);\n    getch();\n    exit(1);\n}\n\n\n```\n\n\n<details> <summary>点击显示/隐藏</summary>\n<p>这个程序实现了一个简化的四元式生成器，用来分析一个简化的程序并生成中间代码（四元式），通过语法分析器识别程序中的赋值语句和表达式，并为其生成相应的四元式。四元式是一种表示表达式计算的中间形式，通常用于编译器的代码生成阶段。</p>\n<h3>1. <strong>程序整体流程</strong></h3>\n<ul>\n<li>程序从输入读取一个以 <code>#</code> 结尾的字符串作为代码，通过词法分析和语法分析解析输入，生成相应的四元式。</li>\n<li>解析的输入代码必须以 <code>begin</code> 开头，以 <code>end</code> 结束，中间可以包含赋值语句和基本的算术表达式。</li>\n<li>在解析过程中，每遇到一个赋值语句或算术表达式，程序会生成四元式，并存储在 <code>quad</code> 数组中。</li>\n<li>程序最后输出所有生成的四元式，展示中间代码的形式。</li>\n</ul>\n<h3>2. <strong>运行过程分析</strong></h3>\n<h4><strong>主函数 <code>main</code></strong></h4>\n<ul>\n<li>程序开始时，提示用户输入字符串，用户输入的字符串保存在 <code>prog</code> 数组中，最后必须以 <code>#</code> 结尾，表示输入的结束。</li>\n<li><code>scaner()</code> 函数进行词法分析，提取输入中的标识符、数字、运算符等信息。</li>\n<li><code>lrparser()</code> 函数进行语法分析，并在过程中生成四元式。如果输入符合语法规则，则生成的四元式保存在 <code>quad</code> 数组中。</li>\n<li><code>q</code> 是四元式的计数器，若生成的四元式超过了预设的最大数目 <code>MAX_QUAD</code>，程序会报错。</li>\n</ul>\n<h4><strong>语法分析器 <code>lrparser</code></strong></h4>\n<ul>\n<li>语法分析器的工作流程如下：<ol>\n<li>检查输入是否以 <code>begin</code> 关键字开头。如果不是，则报错 &quot;Missing &#39;begin&#39;!&quot;。</li>\n<li>解析后续的语句，调用 <code>parse_statements()</code> 处理多个语句。</li>\n<li>语句处理完毕后，检查输入是否以 <code>end</code> 关键字结束。如果不是，则报错 &quot;Missing &#39;end&#39;!&quot;。</li>\n<li>解析完毕并且没有错误后，程序输出 &quot;Success!&quot;，表示语法分析通过。</li>\n</ol>\n</li>\n</ul>\n<h4><strong>处理语句 <code>parse_statements</code> 和 <code>statement</code></strong></h4>\n<ul>\n<li><p><strong><code>parse_statements</code></strong>：</p>\n<ul>\n<li>处理多个赋值语句，每个语句必须由标识符和赋值操作组成，并以 <code>;</code> 结尾。</li>\n<li>每遇到标识符（<code>syn == 10</code>），调用 <code>statement()</code> 处理单条语句。</li>\n<li>语句处理后，若遇到分号 <code>;</code>，继续处理下一个语句。</li>\n</ul>\n</li>\n<li><p><strong><code>statement</code></strong>：</p>\n<ul>\n<li>处理单条赋值语句，要求格式为 <code>标识符 := 表达式</code>。</li>\n<li>首先，读取标识符并存储在 <code>tt</code> 中。</li>\n<li>然后，匹配赋值操作符 <code>:=</code>，若匹配成功，则调用 <code>expression()</code> 处理右侧的表达式，并生成四元式。</li>\n<li>四元式的形式是 <code>tt = eplace</code>，即将表达式 <code>eplace</code> 的值赋给左侧的标识符 <code>tt</code>。</li>\n</ul>\n</li>\n</ul>\n<h4><strong>表达式处理 <code>expression</code> 和 <code>term</code></strong></h4>\n<ul>\n<li><p><strong><code>expression</code></strong>：</p>\n<ul>\n<li>处理一个加减运算的表达式，返回表示该表达式值的临时变量（<code>t1</code>, <code>t2</code>, 等）。</li>\n<li>解析表达式的过程是递归的。首先调用 <code>term()</code> 处理一个乘除运算的项。</li>\n<li>如果表达式包含加减运算符（<code>+</code> 或 <code>-</code>），则解析右侧的项，并为每次的运算生成一个临时变量存储结果。</li>\n<li>每次遇到 <code>+</code> 或 <code>-</code> 操作时，都会生成相应的四元式，形式为 <code>temp = eplace op ep2</code>，其中 <code>temp</code> 是新的临时变量，<code>eplace</code> 和 <code>ep2</code> 是操作数，<code>op</code> 是操作符。</li>\n</ul>\n</li>\n<li><p><strong><code>term</code></strong>：</p>\n<ul>\n<li>处理乘除运算的项，与 <code>expression()</code> 类似，但处理的是乘法和除法。</li>\n<li>它首先调用 <code>factor()</code> 处理基本因子，然后检查是否有乘除运算符（<code>*</code> 或 <code>/</code>）。如果有，则生成四元式。</li>\n</ul>\n</li>\n</ul>\n<h4><strong>因子处理 <code>factor</code></strong></h4>\n<ul>\n<li><code>factor()</code> 处理表达式的最小单位（即因子），因子可以是：<ol>\n<li><strong>标识符</strong>：返回标识符本身作为值。</li>\n<li><strong>数字</strong>：将数字转换为字符串，并返回该值。</li>\n<li><strong>括号中的表达式</strong>：递归调用 <code>expression()</code> 处理括号内的完整表达式，并返回其值。</li>\n</ol>\n<ul>\n<li>若因子解析出错，比如缺少闭合的右括号 <code>)</code>，则程序会调用 <code>error()</code> 报错。</li>\n</ul>\n</li>\n</ul>\n<h3>3. <strong>四元式生成 <code>emit</code> 和临时变量 <code>new_temp</code></strong></h3>\n<ul>\n<li><p><strong><code>emit()</code></strong>：每当生成一个新的运算时，<code>emit()</code> 函数会创建一个四元式并存储在 <code>quad</code> 数组中。四元式的格式为 <code>(result, arg1, op, arg2)</code>，其中：</p>\n<ul>\n<li><code>result</code> 是运算结果的临时变量或目标变量。</li>\n<li><code>arg1</code> 和 <code>arg2</code> 是操作数。</li>\n<li><code>op</code> 是运算符（如 <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>）。</li>\n</ul>\n</li>\n<li><p><strong><code>new_temp()</code></strong>：每当生成一个新的四元式时，程序需要生成一个新的临时变量来存储中间结果。<code>new_temp()</code> 函数根据 <code>temp_count</code> 创建新临时变量，格式为 <code>t1</code>, <code>t2</code>, 等。</p>\n</li>\n</ul>\n<h3>4. <strong>词法分析 <code>scaner</code></strong></h3>\n<ul>\n<li><code>scaner()</code> 函数从输入中逐字符读取，解析出标识符、关键字、数字、运算符等。每个词法单元（Token）用 <code>syn</code> 表示其类型，<code>token</code> 存储其值。</li>\n<li>它通过状态机的方式，分别处理不同类型的输入：<ol>\n<li><strong>标识符和关键字</strong>：首先判断是否是字母开头的标识符，并检查是否为保留字（如 <code>begin</code>、<code>end</code>）。</li>\n<li><strong>数字</strong>：连续读取数字字符并转换为整数。</li>\n<li><strong>运算符和分隔符</strong>：识别如 <code>+</code>, <code>-</code>, <code>*</code>, <code>:=</code> 等符号，更新 <code>syn</code> 为相应的词法类别。</li>\n</ol>\n</li>\n</ul>\n<h3>5. <strong>难点部分解释</strong></h3>\n<h4><strong>递归调用</strong></h4>\n<ul>\n<li><strong><code>expression()</code> 和 <code>term()</code></strong> 都是递归调用的，每当遇到加减法或乘除法时，程序会递归处理右侧的表达式或项。递归是表达式解析的常见方法，通过这种方式，可以自然地解析出带有嵌套运算的表达式。</li>\n</ul>\n<h4><strong>四元式生成</strong></h4>\n<ul>\n<li>四元式的生成是该程序的核心，每遇到一个表达式中的运算，程序会生成相应的四元式。生成四元式的过程通过 <code>emit()</code> 函数实现，且为了处理复杂的表达式，程序动态生成临时变量来存储中间结果。</li>\n</ul>\n</details>\n","comments":true,"categories":[],"tags":[{"name":"homework","slug":"homework","permalink":"http://jinmajue.site/tags/homework/"}]},{"title":"常用正则表达式","date":"2024-09-09T07:15:54.000Z","path":"2024/09/09/常用正则表达式/","text":"🍔正则火车车次1/^[GCDZTSPKXLY1-9]\\d&#123;1,4&#125;$/ 手机机身码(IMEI)1/^\\d&#123;15,17&#125;$/ 必须带端口号的网址(或ip)1/^((ht|f)tps?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+:\\d&#123;1,5&#125;\\/?$/ 网址(URL)1/^(((ht|f)tps?):\\/\\/)?([^!@#$%^&amp;*?.\\s-]([^!@#$%^&amp;*?.\\s]&#123;0,63&#125;[^!@#$%^&amp;*?.\\s])?\\.)+[a-z]&#123;2,6&#125;\\/?/ 统一社会信用代码1/^[0-9A-HJ-NPQRTUWXY]&#123;2&#125;\\d&#123;6&#125;[0-9A-HJ-NPQRTUWXY]&#123;10&#125;$/ 统一社会信用代码(宽松匹配)(15位&#x2F;18位&#x2F;20位数字&#x2F;字母)1/^(([0-9A-Za-z]&#123;15&#125;)|([0-9A-Za-z]&#123;18&#125;)|([0-9A-Za-z]&#123;20&#125;))$/ 迅雷链接1/^thunderx?:\\/\\/[a-zA-Z\\d]+=$/ ed2k链接(宽松匹配)1/^ed2k:\\/\\/\\|file\\|.+\\|\\/$/ 磁力链接(宽松匹配)1/^magnet:\\?xt=urn:btih:[0-9a-fA-F]&#123;40,&#125;.*$/ 子网掩码(不包含 0.0.0.0)1/^(254|252|248|240|224|192|128)\\.0\\.0\\.0|255\\.(254|252|248|240|224|192|128|0)\\.0\\.0|255\\.255\\.(254|252|248|240|224|192|128|0)\\.0|255\\.255\\.255\\.(255|254|252|248|240|224|192|128|0)$/ linux”隐藏文件”路径1/^\\/(?:[^/]+\\/)*\\.[^/]*/ linux文件夹路径1/^\\/(?:[^/]+\\/)*$/ linux文件路径1/^\\/(?:[^/]+\\/)*[^/]+$/ window”文件夹”路径1/^[a-zA-Z]:\\\\(?:\\w+\\\\?)*$/ window下”文件”路径1/^[a-zA-Z]:\\\\(?:\\w+\\\\)*\\w+\\.\\w+$/ 股票代码(A股)1/^(s[hz]|S[HZ])(000[\\d]&#123;3&#125;|002[\\d]&#123;3&#125;|300[\\d]&#123;3&#125;|600[\\d]&#123;3&#125;|60[\\d]&#123;4&#125;)$/ 大于等于0, 小于等于150, 支持小数位出现5, 如145.5, 用于判断考卷分数1/^150$|^(?:\\d|[1-9]\\d|1[0-4]\\d)(?:\\.5)?$/ html注释1/&lt;!--[\\s\\S]*?--&gt;/g md5格式(32位)1/^[a-fA-F0-9]&#123;32&#125;$/ GUID&#x2F;UUID1/^[a-f\\d]&#123;4&#125;(?:[a-f\\d]&#123;4&#125;-)&#123;4&#125;[a-f\\d]&#123;12&#125;$/i 版本号(version)格式必须为X.Y.Z1/^\\d+(?:\\.\\d+)&#123;2&#125;$/ 视频(video)链接地址（视频格式可按需增删）1/^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i 图片(image)链接地址（图片格式可按需增删）1/^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i 24小时制时间（HH:mm:ss）1/^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/ 12小时制时间（hh:mm:ss）1/^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/ base64格式1/^\\s*data:(?:[a-z]+\\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?:;base64)?,([a-z0-9!$&amp;&#x27;,()*+;=\\-._~:@/?%\\s]*?)\\s*$/i 数字&#x2F;货币金额（支持负数、千分位分隔符）1/^-?\\d&#123;1,3&#125;(,\\d&#123;3&#125;)*(\\.\\d&#123;1,2&#125;)?$/ 银行卡号（10到30位, 覆盖对公&#x2F;私账户, 参考微信支付）1/^[1-9]\\d&#123;9,29&#125;$/ 中文姓名1/^(?:[\\u4e00-\\u9fa5·]&#123;2,16&#125;)$/ 英文姓名1/(^[a-zA-Z][a-zA-Z\\s]&#123;0,20&#125;[a-zA-Z]$)/ 车牌号(新能源)1/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]&#123;4&#125;)|([0-9]&#123;5&#125;[DF]))$/ 车牌号(非新能源)1/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9]&#123;4&#125;[A-HJ-NP-Z0-9挂学警港澳]$/ 车牌号(新能源+非新能源)1/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9]&#123;4,5&#125;[A-HJ-NP-Z0-9挂学警港澳]$/ 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段1/^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[01256789]))\\d&#123;8&#125;$/ 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可1/^(?:(?:\\+|00)86)?1[3-9]\\d&#123;9&#125;$/ 手机号(mobile phone)中国(最宽松), 只要是1开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条1/^(?:(?:\\+|00)86)?1\\d&#123;10&#125;$/ 日期(宽松)1/^\\d&#123;1,4&#125;(-)(1[0-2]|0?[1-9])\\1(0?[1-9]|[1-2]\\d|30|31)$/ 日期(严谨, 支持闰年判断)1/^(([0-9]&#123;3&#125;[1-9]|[0-9]&#123;2&#125;[1-9][0-9]&#123;1&#125;|[0-9]&#123;1&#125;[1-9][0-9]&#123;2&#125;|[1-9][0-9]&#123;3&#125;)-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]&#123;2&#125;)(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)$/ 中国省1/^浙江|上海|北京|天津|重庆|黑龙江|吉林|辽宁|内蒙古|河北|新疆|甘肃|青海|陕西|宁夏|河南|山东|山西|安徽|湖北|湖南|江苏|四川|贵州|云南|广西|西藏|江西|广东|福建|台湾|海南|香港|澳门$/ 可以被moment转化成功的时间 YYYYMMDD HH:mm:ss1/^\\d&#123;4&#125;([/:-\\S])(1[0-2]|0?[1-9])\\1(0?[1-9]|[1-2]\\d|30|31) (?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/ email(邮箱)1/^(([^&lt;&gt;()[\\]\\\\.,;:\\s@&quot;]+(\\.[^&lt;&gt;()[\\]\\\\.,;:\\s@&quot;]+)*)|(&quot;.+&quot;))@((\\[[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]&#123;2,&#125;))$/ 座机(tel phone)电话(国内),如: 0341-860912341/^(?:(?:\\d&#123;3&#125;-)?\\d&#123;8&#125;|^(?:\\d&#123;4&#125;-)?\\d&#123;7,8&#125;)(?:-\\d+)?$/ 身份证号(1代,15位数字)1/^[1-9]\\d&#123;7&#125;(?:0\\d|10|11|12)(?:0[1-9]|[1-2][\\d]|30|31)\\d&#123;3&#125;$/ 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X1/^[1-9]\\d&#123;5&#125;(?:18|19|20)\\d&#123;2&#125;(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\\d|30|31)\\d&#123;3&#125;[\\dXx]$/ 身份证号, 支持1&#x2F;2代(15位&#x2F;18位数字)1/^\\d&#123;6&#125;((((((19|20)\\d&#123;2&#125;)(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|(((19|20)\\d&#123;2&#125;)(0[13578]|1[02])31)|((19|20)\\d&#123;2&#125;)02(0[1-9]|1\\d|2[0-8])|((((19|20)([13579][26]|[2468][048]|0[48]))|(2000))0229))\\d&#123;3&#125;)|((((\\d&#123;2&#125;)(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|((\\d&#123;2&#125;)(0[13578]|1[02])31)|((\\d&#123;2&#125;)02(0[1-9]|1\\d|2[0-8]))|(([13579][26]|[2468][048]|0[048])0229))\\d&#123;2&#125;))(\\d|X|x)$/ 护照（包含香港、澳门）1/(^[EeKkGgDdSsPpHh]\\d&#123;8&#125;$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d&#123;7&#125;$)/ 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线组合1/^[a-zA-Z]\\w&#123;4,15&#125;$/ 中文&#x2F;汉字1/^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/ 小数(支持科学计数)1/^[+-]?(\\d+([.]\\d*)?([eE][+-]?\\d+)?|[.]\\d+([eE][+-]?\\d+)?)$/ 只包含数字1/^\\d+$/ html标签(宽松匹配)1/&lt;(\\w+)[^&gt;]*&gt;(.*?&lt;\\/\\1&gt;)?/ 匹配中文汉字和中文标点1/[\\u4e00-\\u9fa5|\\u3002|\\uff1f|\\uff01|\\uff0c|\\u3001|\\uff1b|\\uff1a|\\u201c|\\u201d|\\u2018|\\u2019|\\uff08|\\uff09|\\u300a|\\u300b|\\u3008|\\u3009|\\u3010|\\u3011|\\u300e|\\u300f|\\u300c|\\u300d|\\ufe43|\\ufe44|\\u3014|\\u3015|\\u2026|\\u2014|\\uff5e|\\ufe4f|\\uffe5]/ qq号格式正确1/^[1-9][0-9]&#123;4,10&#125;$/ 数字和字母组成1/^[A-Za-z0-9]+$/ 英文字母1/^[a-zA-Z]+$/ 小写英文字母组成1/^[a-z]+$/ 大写英文字母1/^[A-Z]+$/ 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符1/^\\S*(?=\\S&#123;6,&#125;)(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&amp;*? ])\\S*$/ 用户名校验，4到16位（字母，数字，下划线，减号）1/^[\\w-]&#123;4,16&#125;$/ ip-v4[:端口]1/^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(?::(?:[0-9]|[1-9][0-9]&#123;1,3&#125;|[1-5][0-9]&#123;4&#125;|6[0-4][0-9]&#123;3&#125;|65[0-4][0-9]&#123;2&#125;|655[0-2][0-9]|6553[0-5]))?$/ ip-v6[:端口]1/(^(?:(?:(?:[0-9A-Fa-f]&#123;1,4&#125;:)&#123;7&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;:[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;5&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)?[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;4&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,2&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;3&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,3&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;2&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,4&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;((\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b)\\.)&#123;3&#125;(\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,5&#125;:((\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b)\\.)&#123;3&#125;(\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b))|(::([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,5&#125;((\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b)\\.)&#123;3&#125;(\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b))|([0-9A-Fa-f]&#123;1,4&#125;::([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,5&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(::([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,6&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;1,7&#125;:))$)|(^\\[(?:(?:(?:[0-9A-Fa-f]&#123;1,4&#125;:)&#123;7&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;:[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;5&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)?[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;4&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,2&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;3&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,3&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;2&#125;:([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,4&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;((\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b)\\.)&#123;3&#125;(\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,5&#125;:((\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b)\\.)&#123;3&#125;(\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b))|(::([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,5&#125;((\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b)\\.)&#123;3&#125;(\\b((25[0-5])|(1\\d&#123;2&#125;)|(2[0-4]\\d)|(\\d&#123;1,2&#125;))\\b))|([0-9A-Fa-f]&#123;1,4&#125;::([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,5&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(::([0-9A-Fa-f]&#123;1,4&#125;:)&#123;0,6&#125;[0-9A-Fa-f]&#123;1,4&#125;)|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;1,7&#125;:))\\](?::(?:[0-9]|[1-9][0-9]&#123;1,3&#125;|[1-5][0-9]&#123;4&#125;|6[0-4][0-9]&#123;3&#125;|65[0-4][0-9]&#123;2&#125;|655[0-2][0-9]|6553[0-5]))?$)/i 16进制颜色1/^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;|[a-fA-F0-9]&#123;8&#125;|[a-fA-F0-9]&#123;4&#125;)$/ 微信号(wx)，6至20位，以字母开头，字母，数字，减号，下划线1/^[a-zA-Z][-_a-zA-Z0-9]&#123;5,19&#125;$/ 邮政编码(中国)1/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d&#123;4&#125;$/ 中文和数字1/^((?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])|(\\d))+$/ 不能包含字母1/^[^A-Za-z]*$/ java包名1/^([a-zA-Z_]\\w*)+([.][a-zA-Z_]\\w*)+$/ mac地址1/^(([a-f0-9][0,2,4,6,8,a,c,e]:([a-f0-9]&#123;2&#125;:)&#123;4&#125;)|([a-f0-9][0,2,4,6,8,a,c,e]-([a-f0-9]&#123;2&#125;-)&#123;4&#125;))[a-f0-9]&#123;2&#125;$/i 匹配连续重复的字符1/(.)\\1+/ 数字和英文字母组成，并且同时含有数字和英文字母1/^(?=.*[a-zA-Z])(?=.*\\d).+$/ 香港身份证1/^[a-zA-Z]\\d&#123;6&#125;\\([\\dA]\\)$/ 澳门身份证1/^[1|5|7]\\d&#123;6&#125;\\(\\d\\)$/ 台湾身份证1/^[a-zA-Z][0-9]&#123;9&#125;$/ 大写字母，小写字母，数字，特殊符号 @#$%^&amp;*~()-+&#x3D;&#96; 中任意3项密码1/^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_!@#$%^&amp;*`~()-+=]+$)(?![a-z0-9]+$)(?![a-z\\W_!@#$%^&amp;*`~()-+=]+$)(?![0-9\\W_!@#$%^&amp;*`~()-+=]+$)[a-zA-Z0-9\\W_!@#$%^&amp;*`~()-+=]/ ASCII码表中的全部的特殊字符1/[\\x21-\\x2F\\x3A-\\x40\\x5B-\\x60\\x7B-\\x7E]+/ 正整数，不包含01/^\\+?[1-9]\\d*$/ 负整数，不包含01/^-[1-9]\\d*$/ 整数1/^(?:0|(?:-?[1-9]\\d*))$/ 浮点数1/^(-?[1-9]\\d*\\.\\d+|-?0\\.\\d*[1-9]\\d*|0\\.0+)$/ 浮点数(严格)1/^(-?[1-9]\\d*\\.\\d+|-?0\\.\\d*[1-9])$/ email(支持中文邮箱)1/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/ 域名(非网址, 不包含协议)1/^([0-9a-zA-Z-]&#123;1,&#125;\\.)+([a-zA-Z]&#123;2,&#125;)$/ 军官&#x2F;士兵证1/^[\\u4E00-\\u9FA5](字第)([0-9a-zA-Z]&#123;4,8&#125;)(号?)$/ 户口薄1/(^\\d&#123;15&#125;$)|(^\\d&#123;18&#125;$)|(^\\d&#123;17&#125;(\\d|X|x)$)/","raw":"---\ntitle: 常用正则表达式\ndate: 2024-09-09 15:15:54\ntags:\n---\n\n## 🍔正则\n\n### 火车车次\n```javascript\n/^[GCDZTSPKXLY1-9]\\d{1,4}$/\n```\n\n### 手机机身码(IMEI)\n```javascript\n/^\\d{15,17}$/\n```\n\n### 必须带端口号的网址(或ip)\n```javascript\n/^((ht|f)tps?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+:\\d{1,5}\\/?$/\n```\n\n### 网址(URL)\n```javascript\n/^(((ht|f)tps?):\\/\\/)?([^!@#$%^&*?.\\s-]([^!@#$%^&*?.\\s]{0,63}[^!@#$%^&*?.\\s])?\\.)+[a-z]{2,6}\\/?/\n```\n\n### 统一社会信用代码\n```javascript\n/^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$/\n```\n\n### 统一社会信用代码(宽松匹配)(15位/18位/20位数字/字母)\n```javascript\n/^(([0-9A-Za-z]{15})|([0-9A-Za-z]{18})|([0-9A-Za-z]{20}))$/\n```\n\n### 迅雷链接\n```javascript\n/^thunderx?:\\/\\/[a-zA-Z\\d]+=$/\n```\n\n### ed2k链接(宽松匹配)\n```javascript\n/^ed2k:\\/\\/\\|file\\|.+\\|\\/$/\n```\n\n### 磁力链接(宽松匹配)\n```javascript\n/^magnet:\\?xt=urn:btih:[0-9a-fA-F]{40,}.*$/\n```\n\n### 子网掩码(不包含 0.0.0.0)\n```javascript\n/^(254|252|248|240|224|192|128)\\.0\\.0\\.0|255\\.(254|252|248|240|224|192|128|0)\\.0\\.0|255\\.255\\.(254|252|248|240|224|192|128|0)\\.0|255\\.255\\.255\\.(255|254|252|248|240|224|192|128|0)$/\n```\n\n### linux\"隐藏文件\"路径\n```javascript\n/^\\/(?:[^/]+\\/)*\\.[^/]*/\n```\n\n### linux文件夹路径\n```javascript\n/^\\/(?:[^/]+\\/)*$/\n```\n\n### linux文件路径\n```javascript\n/^\\/(?:[^/]+\\/)*[^/]+$/\n```\n\n### window\"文件夹\"路径\n```javascript\n/^[a-zA-Z]:\\\\(?:\\w+\\\\?)*$/\n```\n\n### window下\"文件\"路径\n```javascript\n/^[a-zA-Z]:\\\\(?:\\w+\\\\)*\\w+\\.\\w+$/\n```\n\n### 股票代码(A股)\n```javascript\n/^(s[hz]|S[HZ])(000[\\d]{3}|002[\\d]{3}|300[\\d]{3}|600[\\d]{3}|60[\\d]{4})$/\n```\n\n### 大于等于0, 小于等于150, 支持小数位出现5, 如145.5, 用于判断考卷分数\n```javascript\n/^150$|^(?:\\d|[1-9]\\d|1[0-4]\\d)(?:\\.5)?$/\n```\n\n### html注释\n```javascript\n/<!--[\\s\\S]*?-->/g\n```\n\n### md5格式(32位)\n```javascript\n/^[a-fA-F0-9]{32}$/\n```\n\n### GUID/UUID\n```javascript\n/^[a-f\\d]{4}(?:[a-f\\d]{4}-){4}[a-f\\d]{12}$/i\n```\n\n### 版本号(version)格式必须为X.Y.Z\n```javascript\n/^\\d+(?:\\.\\d+){2}$/\n```\n\n### 视频(video)链接地址（视频格式可按需增删）\n```javascript\n/^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i\n```\n\n### 图片(image)链接地址（图片格式可按需增删）\n```javascript\n/^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i\n```\n\n### 24小时制时间（HH:mm:ss）\n```javascript\n/^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/\n```\n\n### 12小时制时间（hh:mm:ss）\n```javascript\n/^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/\n```\n\n### base64格式\n```javascript\n/^\\s*data:(?:[a-z]+\\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?:;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*?)\\s*$/i\n```\n\n### 数字/货币金额（支持负数、千分位分隔符）\n```javascript\n/^-?\\d{1,3}(,\\d{3})*(\\.\\d{1,2})?$/\n```\n\n### 银行卡号（10到30位, 覆盖对公/私账户, 参考[微信支付](https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1)）\n```javascript\n/^[1-9]\\d{9,29}$/\n```\n\n### 中文姓名\n```javascript\n/^(?:[\\u4e00-\\u9fa5·]{2,16})$/\n```\n\n### 英文姓名\n```javascript\n/(^[a-zA-Z][a-zA-Z\\s]{0,20}[a-zA-Z]$)/\n```\n\n### 车牌号(新能源)\n```javascript\n/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))$/\n```\n\n### 车牌号(非新能源)\n```javascript\n/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]$/\n```\n\n### 车牌号(新能源+非新能源)\n```javascript\n/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9]{4,5}[A-HJ-NP-Z0-9挂学警港澳]$/\n```\n\n### 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段\n```javascript\n/^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[01256789]))\\d{8}$/\n```\n\n### 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可\n```javascript\n/^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/\n```\n\n### 手机号(mobile phone)中国(最宽松), 只要是1开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条\n```javascript\n/^(?:(?:\\+|00)86)?1\\d{10}$/\n```\n\n### 日期(宽松)\n```javascript\n/^\\d{1,4}(-)(1[0-2]|0?[1-9])\\1(0?[1-9]|[1-2]\\d|30|31)$/\n```\n\n### 日期(严谨, 支持闰年判断)\n```javascript\n/^(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)$/\n```\n\n### 中国省\n```javascript\n/^浙江|上海|北京|天津|重庆|黑龙江|吉林|辽宁|内蒙古|河北|新疆|甘肃|青海|陕西|宁夏|河南|山东|山西|安徽|湖北|湖南|江苏|四川|贵州|云南|广西|西藏|江西|广东|福建|台湾|海南|香港|澳门$/\n```\n\n### 可以被moment转化成功的时间 YYYYMMDD HH:mm:ss\n```javascript\n/^\\d{4}([/:-\\S])(1[0-2]|0?[1-9])\\1(0?[1-9]|[1-2]\\d|30|31) (?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/\n```\n\n### email(邮箱)\n```javascript\n/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n```\n\n### 座机(tel phone)电话(国内),如: 0341-86091234\n```javascript\n/^(?:(?:\\d{3}-)?\\d{8}|^(?:\\d{4}-)?\\d{7,8})(?:-\\d+)?$/\n```\n\n### 身份证号(1代,15位数字)\n```javascript\n/^[1-9]\\d{7}(?:0\\d|10|11|12)(?:0[1-9]|[1-2][\\d]|30|31)\\d{3}$/\n```\n\n### 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\n```javascript\n/^[1-9]\\d{5}(?:18|19|20)\\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\\d|30|31)\\d{3}[\\dXx]$/\n```\n\n### 身份证号, 支持1/2代(15位/18位数字)\n```javascript\n/^\\d{6}((((((19|20)\\d{2})(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|(((19|20)\\d{2})(0[13578]|1[02])31)|((19|20)\\d{2})02(0[1-9]|1\\d|2[0-8])|((((19|20)([13579][26]|[2468][048]|0[48]))|(2000))0229))\\d{3})|((((\\d{2})(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|((\\d{2})(0[13578]|1[02])31)|((\\d{2})02(0[1-9]|1\\d|2[0-8]))|(([13579][26]|[2468][048]|0[048])0229))\\d{2}))(\\d|X|x)$/\n```\n\n### 护照（包含香港、澳门）\n```javascript\n/(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/\n```\n\n### 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线组合\n```javascript\n/^[a-zA-Z]\\w{4,15}$/\n```\n\n### 中文/汉字\n```javascript\n/^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/\n```\n\n### 小数(支持科学计数)\n```javascript\n/^[+-]?(\\d+([.]\\d*)?([eE][+-]?\\d+)?|[.]\\d+([eE][+-]?\\d+)?)$/\n```\n\n### 只包含数字\n```javascript\n/^\\d+$/\n```\n\n### html标签(宽松匹配)\n```javascript\n/<(\\w+)[^>]*>(.*?<\\/\\1>)?/\n```\n\n### 匹配中文汉字和中文标点\n```javascript\n/[\\u4e00-\\u9fa5|\\u3002|\\uff1f|\\uff01|\\uff0c|\\u3001|\\uff1b|\\uff1a|\\u201c|\\u201d|\\u2018|\\u2019|\\uff08|\\uff09|\\u300a|\\u300b|\\u3008|\\u3009|\\u3010|\\u3011|\\u300e|\\u300f|\\u300c|\\u300d|\\ufe43|\\ufe44|\\u3014|\\u3015|\\u2026|\\u2014|\\uff5e|\\ufe4f|\\uffe5]/\n```\n\n### qq号格式正确\n```javascript\n/^[1-9][0-9]{4,10}$/\n```\n\n### 数字和字母组成\n```javascript\n/^[A-Za-z0-9]+$/\n```\n\n### 英文字母\n```javascript\n/^[a-zA-Z]+$/\n```\n\n### 小写英文字母组成\n```javascript\n/^[a-z]+$/\n```\n\n### 大写英文字母\n```javascript\n/^[A-Z]+$/\n```\n\n### 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n```javascript\n/^\\S*(?=\\S{6,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&*? ])\\S*$/\n```\n\n### 用户名校验，4到16位（字母，数字，下划线，减号）\n```javascript\n/^[\\w-]{4,16}$/\n```\n\n### ip-v4[:端口]\n```javascript\n/^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(?::(?:[0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?$/\n```\n\n### ip-v6[:端口]\n```javascript\n/(^(?:(?:(?:[0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$)|(^\\[(?:(?:(?:[0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))\\](?::(?:[0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?$)/i\n```\n\n### 16进制颜色\n```javascript\n/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3}|[a-fA-F0-9]{8}|[a-fA-F0-9]{4})$/\n```\n\n### 微信号(wx)，6至20位，以字母开头，字母，数字，减号，下划线\n```javascript\n/^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/\n```\n\n### 邮政编码(中国)\n```javascript\n/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/\n```\n\n### 中文和数字\n```javascript\n/^((?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])|(\\d))+$/\n```\n\n### 不能包含字母\n```javascript\n/^[^A-Za-z]*$/\n```\n\n### java包名\n```javascript\n/^([a-zA-Z_]\\w*)+([.][a-zA-Z_]\\w*)+$/\n```\n\n### mac地址\n```javascript\n/^(([a-f0-9][0,2,4,6,8,a,c,e]:([a-f0-9]{2}:){4})|([a-f0-9][0,2,4,6,8,a,c,e]-([a-f0-9]{2}-){4}))[a-f0-9]{2}$/i\n```\n\n### 匹配连续重复的字符\n```javascript\n/(.)\\1+/\n```\n\n### 数字和英文字母组成，并且同时含有数字和英文字母\n```javascript\n/^(?=.*[a-zA-Z])(?=.*\\d).+$/\n```\n\n### 香港身份证 \n```javascript\n/^[a-zA-Z]\\d{6}\\([\\dA]\\)$/\n```\n\n### 澳门身份证 \n```javascript\n/^[1|5|7]\\d{6}\\(\\d\\)$/\n```\n\n### 台湾身份证 \n```javascript\n/^[a-zA-Z][0-9]{9}$/\n```\n\n### 大写字母，小写字母，数字，特殊符号 `@#$%^&*`~()-+=` 中任意3项密码\n```javascript\n/^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_!@#$%^&*`~()-+=]+$)(?![a-z0-9]+$)(?![a-z\\W_!@#$%^&*`~()-+=]+$)(?![0-9\\W_!@#$%^&*`~()-+=]+$)[a-zA-Z0-9\\W_!@#$%^&*`~()-+=]/\n```\n\n### ASCII码表中的全部的特殊字符\n```javascript\n/[\\x21-\\x2F\\x3A-\\x40\\x5B-\\x60\\x7B-\\x7E]+/\n```\n\n### 正整数，不包含0\n```javascript\n/^\\+?[1-9]\\d*$/\n```\n\n### 负整数，不包含0\n```javascript\n/^-[1-9]\\d*$/\n```\n\n### 整数\n```javascript\n/^(?:0|(?:-?[1-9]\\d*))$/\n```\n\n### 浮点数\n```javascript\n/^(-?[1-9]\\d*\\.\\d+|-?0\\.\\d*[1-9]\\d*|0\\.0+)$/\n```\n\n### 浮点数(严格)\n```javascript\n/^(-?[1-9]\\d*\\.\\d+|-?0\\.\\d*[1-9])$/\n```\n\n### email(支持中文邮箱)\n```javascript\n/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\n```\n\n### 域名(非网址, 不包含协议)\n```javascript\n/^([0-9a-zA-Z-]{1,}\\.)+([a-zA-Z]{2,})$/\n```\n\n### 军官/士兵证\n```javascript\n/^[\\u4E00-\\u9FA5](字第)([0-9a-zA-Z]{4,8})(号?)$/\n```\n\n### 户口薄\n```javascript\n/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\n```\n","comments":true,"categories":[],"tags":[]},{"title":"《蛊真人》语录","date":"2024-09-05T01:24:16.000Z","path":"2024/09/05/《蛊真人》语录/","text":"《蛊真人》经典语录 简介：人是万物之灵，蛊是天地真精。 三观不正，魔头重生。 昔日旧梦，同名新作。 一个穿越者不断重生的故事。 一个养蛊、炼蛊、用蛊的奇特世界。 春秋蝉、月光蛊、酒虫、一气金光虫、青丝蛊、希望蛊…… 还有一个纵情纵横的绝世大魔头！ 下载 蛊真人小说 下载 人祖传 他心中一片平静。 辱骂于我何加焉？ 想骂就骂吧，骂了能怎样？ 心胸浅薄之人，常会因为咒骂而愤怒，因为夸赞而喜悦。 但其实这些都不过是旁人对你的看法罢了。因为旁人的看法，而活着的人，注定是可怜的人。 这个世界上，总会有一群“老”人。他们四处兜售着社会的经验，把他人的理想当做幻想，把他人的热情当做轻狂，把他人的坚持当做桀骜。他们常在教训后辈中，寻找自己的存在感和优越感 人们总是害怕孤独，总要贪恋热闹的人群，总不愿无所事事。 因为当他们面对孤独，往往就会面对痛苦。 但是一旦能直面这种痛苦，人就往往有了才华和勇气。所以。有句俗语――杰出者必孤独。 “我喜欢无足鸟，你知道为什么吗？ 他的笑容，着实有些渗人。 “为什么？” “因为它没有鸟足，只有翅膀。因此只能飞翔。当它落地之时，就意味着它的毁灭。” 孤注一掷，不飞则死！ 潮水只有击打在礁石上，才能碰触出美丽的浪花。人只有在不断的斗争中，才能感觉到生的光彩啊。 遵守规矩不算是本事，真正的本事是破坏规矩而享受利益，却不受惩罚。真正的大本事，是破坏旧秩序，建立新规矩，一直享受利益。 不过是些许风霜罢了。 我们既然意识到自己的渺小，那就更应该变得强大。我们本来就是渺小的，只是从无知变得有知，你感到痛苦，是因为你在成长。 人生匆匆百年，如梦幻泡影。人活在这个世界上是为了什么？无非是走上一遭见证精彩罢了。我虽然不想死，但却不畏惧死亡。我已走在路上，纵死不悔。 这世间没有绝境，只有对处境绝望的人。 解决问题的答案就在我们自己的手中，当审视内心时，便会发现奇迹伟力就在我身！ 发现自己，认识自己，靠自己 真正可靠的还是自己，真正成熟的人，永远不会依靠别人雪中送炭。 此生就愿成真月，出天山，戏云海，照古今，行走在黑暗的诸天之上。 但战斗之所以精彩，就是因为强大未必会胜利，弱小也不一定会倒下。 早岁已知世事艰，仍许飞鸿荡云间。 一路寒风身如絮，命海沉浮客独行。 千磨万击心铸铁，殚精竭虑铸一剑。 今朝剑指叠云处，炼蛊炼人还炼天！ 但凡会死亡的，都是平等的。无非是早死、晚死的些微区别罢了。 所谓的身份和阶级，高贵和低贱，都不过是一群等死的蠢货，所玩弄的虚假的把戏。这种把戏通过对比，让其中一部分的蠢货觉得自己活得挺好，挺不错。 事实上，那些自认为高贵，有身份的蠢货，都不过是自欺欺人罢了。那些自认为自己低贱卑下的蠢货，更是悲哀。王侯将相宁有种乎！万物生来就平等，何须低头向他人？ 不要期望他人对自己的亲爱，不要渴望世界对自己的善意，不要奢求命运的垂青，一切都要靠自己。 青山落日,秋月春风。当真是朝如青丝暮成雪,是非成败转头空。 但凡上当受骗的人，难道真的是因为他们蠢笨吗？ 不是，只是他们内心愿意去相信罢了。 俗话说，红颜祸水。 一位美人，不是那么好追求的。 只有单纯的人，才想着只用爱情和感动，就能征服一个美人。 其实远远不止这些。 女人的美丽，就是天然的嫁妆。 这笔嫁妆丰厚至极，是一大笔的财富。 谁不想获得这样的财富？ 但不是谁都有能力守护得住这样的财富。 如果有美人，愿意因为单纯的爱情，而将这笔财富交给另一半。那么就请幸运儿好好对待吧。 但事实上，这种情况太少太少。 如果有就请珍惜，如果没有，也不要奢望。 不要说“俗”。 因为这就是，现实 寒风扑面而来，少年忽的一笑：“不过是些许风霜罢了。” ——古月方源 “岂不闻天无绝人之路？只要我想走，路就在脚下！” ——古月方源 失败和耻辱会使人进步。没有失败，是淬炼不出一个成熟的男人的。 人们往往在了解什么是生命之前，已将自己的生命消磨了一半。—时间、爱情等等，莫不是如此。 一伸手，水晃月散。 这世间的人，亦常常如此。看到月影，就以为是真月。 殊不知，只是井中之月，眼中之月，心中之月罢了。 “此生就愿成真月，出天山，戏云海，照古今，行走在黑暗的诸天之上。”方源双目澄澈，瞳眸中倒映着锦绣青山。 真魔只忠于自己，在黑暗孤独朝圣，只走自己的路。 真魔可以去敬佩他人，但永不可能臣服于他人。 真魔皆是自己的君王，至高无上! “这个世界上，谈何对错？孰对孰错？只是每个人的道路不同罢了。” 人生如梦，朝露夕花，宛若泡影。 千古地仙随风逝，昔曰三王归青冢。 阳莽憾陨谁无败？卷土重来再称王。 天河一挂淘龙鱼，逆天独行顾八荒。 今曰暂且展翼去，明朝登仙笞凤凰 。 态度是心的面具 这个世界其实是灰色的。有时候黑的能转成白的，白的能转成黑的。有的黑的未必比白的阴险，有的白的可能罪孽更深。 人，本就是天地间的宝石。只是宝石璀璨与否，需要我们自己的雕琢。我们的每一次努力，每一次选择，都是一次雕琢。 每个人他生来就是孤独！ 人就像是一座座的浮冰孤岛，在命运的海洋中漂浮流荡。 人和人的相遇，就像是浮冰孤岛之间的相互碰撞，只要是碰撞，就必有影响。 有时候，浮冰孤岛相互粘在了一起，以“利益”、“亲情”、“友情”、“爱情”、“仇恨”之名。 但是最终，它们都将分开。孤独地走向毁灭。 这就是人生的真相。 当一个人惧怕的时候，他就成了奴隶。 人不是山石，也不是浪花，人是有思想的。往往胡思乱想，才最是可怕，最有力量！ 因为困难多壮志，不教红尘惑坚心，今身暂且栖草头，它日狂歌踏山河。 魔头披着佛陀的外衣，行走在光明之下。 滴水之恩涌泉相报，星火之仇燎原往复！ 朝如青丝暮成雪，是非成败转头空 既然老天不偏爱我，师傅不宠爱我，旁人不看好我。我只有更爱我自己，我只有更看好我自己，我只有更依靠我自己。我只有更努力，我只有更冒险，我只有更奋发！只有这样，我才能有成就！但正道讲纲常，讲伦理，讲情义，讲资历，讲辈分。我这样的一个人，小人物，没有背景，没有天赋，没有资源，你说我拿什么来成功？” “走正道，我只能被剥削欺压，仰望你们这些公子，这些天才。我只能熬资历熬到我垂垂老矣，却成就微小。这就是正道啊……什么狗屁正道！” “只有成魔，摒弃伦理情义，抛弃世俗规矩，付出惨重代价，才能另辟蹊径，于荆棘当中，闯出一条属于自己的路来！所以，我就暗算了你，夺了你的血海真传，我就成魔了。哈哈，那就让我成魔吧！” 不理智的善良即是犯罪。 白雪尽皑皑，天地我独行。独行无牵挂，孤影任去来。 天若有情天亦老，大道无情至公。每一个存在都有问鼎的机会，就看如何把握，如何争锋！ 这个世界上，没有人生来就是一辈子的配角。也没有人。会是永恒的主角。 万物相争，优胜劣汰。 一味的发挥自己的优势，本就是人生的一大谎言。 千万不要低估旁人的智慧，往往只有蠢才才会认为别人愚蠢。 我以前希望长生不老，但现在却渐渐厌烦了这个想法。生活变得越来越无聊，有时候路的终点并不重要。重要的是走路的过程，以及走路时候的心态。” 他面无表情，不管走多少步，逆流河永远流淌在他的脚下，仿佛是绝大的命运的嘲笑。 但是他仍旧走着。 他从前世五百年走来，不知要走到什么时候。 但他知道，自己要去往何方。 似乎……没有人能阻止他。 至少……如今的逆流中，已经无人可阻。 人啊，走在自己的人生路上，就不要怕肮脏！踩着白骨和血肉，一步步走向辉煌！人啊，走在自己的人生路上，就不要怕悲伤！踏着汗水和泪水，一步步行向光芒！人啊！走在自己的人生路上，就不要怕仿徨！循着信念和理想，一步步走出迷惘！人啊！走在自己的人生路上，就注定要漂泊流浪！无需愤恨你没有知己，因为你还有自己！去吧，走向巅峰，踏向属于自己的天堂。 “有利可图的正义，才能广为传播，才有实际遵循的可能。这样的正义，才是坚实稳定的。太高尚的正义，反而有些虚假，得不到广泛施行效仿，只会让正义显得孱弱不堪。” 面对困境，就把心交给希望 魔不魔，正不正，天地自有凤九歌。走不走，留不留，死生皆在我心头。 甘于弱小，而不自发努力，只想向强者乞讨的人，根本就不值得同情。 在狂热顽皮的爱情面前,思想和智慧都只能退避三舍。 孤独是最深邃的黑暗 “这就是人的可悲之处啊。”方源趺坐着，看着门外傻傻站着的漠颜，心中感慨，“有的时候，阻止人行动的，往往不是物质上的难题，而是心灵的枷锁。” 烂耀眼的王位下，铺设的是万千白骨。 人生匆匆百年，不过一场豪赌。 人在寻找成功的过程中，往往变得面目全非。 石人啊，为了表达你的爱情，你不再硬气，放下固执，丢掉尊严，甚至舍弃了自信。但是我看到的，却是个丑陋不堪的石人啊。你起来，我不会接受你对我的爱，我还有更重要的事情要去做呢。 方源道:“我走魔道，就从未怕得罪人。只要自身不断地强大，复仇算什么?十个人复仇，我就是杀十个人，百个人复仇，我就杀百人。若全世界复仇，我就杀了全世界!如果我被人复仇成功，那就证明我不够强，不够努力，懈怠了修行，死了也活该!” 仙路阻且长，相逢于天涯。 岁月忽已晚，情仇已绵长。 君思仙尽头，我思君安危。 生死两茫茫，为君梦还乡。 如果这世间单纯的仇恨、憎恶、咒骂有用，那还需要力量做什么？” 他的威名让四海凛然，让人谈之色变。 理解他的人敬佩他尊崇他爱戴他，恨他的人咬牙切齿，施展各种手段，却只能让他越来越强。 他走在自己的路上，孤独包裹着他，冷漠的眸子能洞悉一切虚伪。 对于批判否决，他嗤笑不屑。对于虚夸阿谀，他冷笑不语。 他耐得住寂寞，甚至享受寂寞。 他不是走向成功，那么就是走向毁灭。 他是一个勇士，他走在黑暗中独自朝圣，一路披荆斩棘，不管是什么都不能阻挡他。神挡杀神，佛挡杀佛！ 踏上真正高位的人，哪一个双手不沾着血，踏着尸骨？资本家的资金原始积累，都是血腥的。任何的政治家都是肮脏的。所谓的慈善家，都是拿金钱换取社会名望的。 只是成功者，大多矫饰遮掩了过往的不堪。被成功者的自传骗住的人才是蠢材 男儿当世，自当如此，不受世俗拘束。纵横无忌，看谁不顺眼就杀谁。心恶时屠戮万物，心善时福泽苍生。天下皆随我心而动，主宰一切，将所有敢于反抗自己的敌人踩在脚下。这才是大自在，大畅快的人生啊！ 孤独是最深邃的黑暗，而亲情的光只是一种假象。 在这自然中，万物都在抗争，都在生存，并不是仅仅只有人而已。这个天地，就是用生和死来演 绎精彩的大舞台啊！ 可惜人们总是害怕孤独，总要贪恋热闹的人群，总不愿无所事事。因为当他们面对孤独，往往就会面对痛苦。但是一旦能直面这种痛苦，人就往往有了才华和勇气。所以。有句俗语――杰出者必孤独。“这就是孤独的滋味啊，每每品味，都更加坚定我追求魔道之决心！” 有些东西，往往只有失去了，才能看得明白。 永生缥缈非我求，长生无为老愧羞。 界壁消散乱世起，宿命一去竞自由。 鹰击长空鲸霸海，不试怎知龙与蚯? 凡夫俗子岂识我，非到末路不甘休! 一双两好缠绵久，万转千回缱绻多。细细的，慢慢的，经年累月，把岁月汇聚在一起，有曲折，有翻搓，有纠缠。搓草绳，不就是人生经历 《蛊真人》 “我们都是小人，都想走出平凡的深渊。” “你怎么没有罪。你的弱小就是罪啊!”话音刚落，方源便射出落魄印。 月如霜满夜,刀光尤冷寒。严冬不肃杀,何以见阳春! 居高临下，目光洞穿繁芜世事。或抽丝剥茧，或一针见血。我自居高笑傲，冷看世间之人如颗颗棋子，遵循着各自的规矩，按部就班地行进。 未来的路，会很精彩呢 雄山漫道真如铁，如今迈步从头越。 险就一身乾坤精，我心依旧望苍天。 遇到困境，就将心交给希望。 态度是心的面具在寻找成功的过程中，人往往会变得面目全非，而人最大的失败，就是失去自我。 “山延万里渊九重，蟠居井底鳅鳝蚌。今朝奋髯云乍起，矫首上凌飞太清。” 自己蛊见人祖意兴阑珊，笑道：“人祖啊，你应该高兴才是。你要知道，发现自己，认识自己，是人生的第一件大事。自己才是世间最可靠的 世间不如意之事，十之八九啊。 人的一生之精彩，在于自己追逐梦想的过程。不必苛求旁人的不失望或者喜欢。 走自己的路，让旁人失望和不喜欢去吧！ 弱肉强食，适者生存，本来就是这世间的本质。 历经五十四次劫，劫云仍旧漫遮天。 胸中魂光压众生，拳里剑气纵北原。 时来时去四百载，无死何能生新颜? 弃此残躯换清风，卷席苍穹复光年! 歌声寥落，英雄落魄，难挡命途多舛。 折剑沉沙，千古兴亡，不尽天河滚荡。 忧愁… 幽夜漫漫魂梦长，问何处安乡？ 物换心移几春秋。唯天意苍茫。 忽然他轻笑出声：“想我堂堂一代魔头巨擘，何时畏首畏尾，如此瞻前顾后？只要有一线希望，就该勇于出手。只要有滔天的利益。就该奋不顾身。富贵险中求，什么稳中求胜，慢慢积累？我就是要一步登天！”“没错，就这个方案了！失败就死无葬身之地。成功就如蛟龙升天，对今后大计更为有利。呵呵呵，哈哈哈，人生匆匆百年。不过一场豪赌！” 而且，我从不相信什么诚信。所谓的信誉，都是狗屁，不过是利益小，打动不了内心罢了。” 忠诚自己，是对他人的背叛。 忠诚他人，是对自己的背叛。 只要我想，以我的魔道巨擘的手段，整个青茅山都可以玩弄于股掌之间，不过他们也配？ 人的一生之精彩，在于自己追逐梦想的过程。不必苛求旁人的不失望或者喜欢。 长凡不凡， 武庸不庸 永生飘渺非我求， 长生无为老愧羞 界壁消散乱世起，宿命一去竞自由。 鹰击长空鲸霸海，不试怎知龙与蚯。 凡夫俗子岂识我， 非到末路不甘休 醉一回 梦一场 宿命之歌响四方 赌一回 狂一场 宿命之光照八荒 拼一回 赴一场 宿命之战携手闯 战到日月都无光 未散场 梦里轻烟天外客， 夜夜梦中唤心魂。 纵是百年无缘分， 解脱俗尘梦纯真。 红尘漩涡不由己，何朝散发弄扁舟？乘风破浪三万里，方是我辈魔道人！ 所谓的美色，到头来，也不过是黄土一捧而已。 尘归尘，土归土。 美丽的少女，在天地中，不过和鲜花一样。或是被路边的脚步践踏，或是时间到了枯萎老去，成为丑陋的肥料滋润土地。 没有永生，再美好的东西也是镜花水月啊。存在的价值，不过是刹那的芳华罢了。 “这一切的一切都是宿命。” “我们每一个人，每一个生命，乃至每一块山石，每一滴水，每一团火，既然在这个世间存在，就必有存在的意义和价值。善恶也是如此，没有善，哪里来的恶？没有恶，又何必谈善？” 不论哪个世界上，总有一群弱者，乞讨强者的施舍，死皮赖脸又不知分寸。好像帮助他们才是强者的风范，不帮助他们就是不对的事情。 魔不魔，正不正，天地自有凤九歌。 走不走，留不留，死生皆在我心头。 魔道正道，这两种阵营，两种身份，都不能拘束我凤九歌! 是走还是留，对于我凤九歌而言，走了就是我心之死，留下才是我心之生。 凡事依凭本心。 我就是我。 我就是凤九歌。 一直都是! 所谓团结，不过是因为彼此弱小。 人脉这种东西，在地球上的确需要。毕竟人和人之间，在本身力量上是不会有质的区别。但这世界是能修行的世界，从根本上就不一样。 人脉不过是力量的附属品，只要自身强大，人脉就会攀附而来。 但凡追求人脉关系，必是有求于 他人。 甚至不需要人脉――只要自身强大无比，什么东西都可信手拈来，不给就抢杀，还需要什么人脉关系? “你说：小时候，你想成为顶天立地的人物，就像是正道的那些传奇人物那样。少年时，觉得成为一族族长也不错。青年时，能够成为家老就感觉很棒了。中年后，被家族流放，现其实能养得活自己，养得起身上的蛊虫，就能让自己满意。” “我不会这样，让梦想随着年龄而萎缩。” “这个世界太大，而我们都是","raw":"---\ntitle: 《蛊真人》语录\ndate: 2024-09-05 09:24:16\ntags: fiction \n---\n\n# 《蛊真人》经典语录\n\n> 简介：人是万物之灵，蛊是天地真精。 三观不正，魔头重生。 昔日旧梦，同名新作。 一个穿越者不断重生的故事。 一个养蛊、炼蛊、用蛊的奇特世界。 春秋蝉、月光蛊、酒虫、一气金光虫、青丝蛊、希望蛊…… 还有一个纵情纵横的绝世大魔头！\n\n[下载 蛊真人小说](/downloads/蛊真人.epub)\n\n[下载 人祖传](/downloads/《人祖传》横版精排带目录版.pdf)\n\n01.\n他心中一片平静。 辱骂于我何加焉？ 想骂就骂吧，骂了能怎样？ 心胸浅薄之人，常会因为咒骂而愤怒，因为夸赞而喜悦。 但其实这些都不过是旁人对你的看法罢了。因为旁人的看法，而活着的人，注定是可怜的人。\n\n02.\n这个世界上，总会有一群“老”人。他们四处兜售着社会的经验，把他人的理想当做幻想，把他人的热情当做轻狂，把他人的坚持当做桀骜。他们常在教训后辈中，寻找自己的存在感和优越感\n\n03.\n人们总是害怕孤独，总要贪恋热闹的人群，总不愿无所事事。 因为当他们面对孤独，往往就会面对痛苦。 但是一旦能直面这种痛苦，人就往往有了才华和勇气。所以。有句俗语――杰出者必孤独。\n\n04.\n“我喜欢无足鸟，你知道为什么吗？ 他的笑容，着实有些渗人。 “为什么？” “因为它没有鸟足，只有翅膀。因此只能飞翔。当它落地之时，就意味着它的毁灭。” 孤注一掷，不飞则死！\n\n05.\n潮水只有击打在礁石上，才能碰触出美丽的浪花。人只有在不断的斗争中，才能感觉到生的光彩啊。\n\n06.\n遵守规矩不算是本事，真正的本事是破坏规矩而享受利益，却不受惩罚。真正的大本事，是破坏旧秩序，建立新规矩，一直享受利益。\n\n07.\n不过是些许风霜罢了。\n\n08.\n我们既然意识到自己的渺小，那就更应该变得强大。我们本来就是渺小的，只是从无知变得有知，你感到痛苦，是因为你在成长。\n\n09.\n人生匆匆百年，如梦幻泡影。人活在这个世界上是为了什么？无非是走上一遭见证精彩罢了。我虽然不想死，但却不畏惧死亡。我已走在路上，纵死不悔。\n\n10.\n这世间没有绝境，只有对处境绝望的人。 解决问题的答案就在我们自己的手中，当审视内心时，便会发现奇迹伟力就在我身！ 发现自己，认识自己，靠自己\n\n11.\n真正可靠的还是自己，真正成熟的人，永远不会依靠别人雪中送炭。\n\n12.\n此生就愿成真月，出天山，戏云海，照古今，行走在黑暗的诸天之上。\n\n13.\n但战斗之所以精彩，就是因为强大未必会胜利，弱小也不一定会倒下。\n\n14.\n早岁已知世事艰，仍许飞鸿荡云间。 一路寒风身如絮，命海沉浮客独行。 千磨万击心铸铁，殚精竭虑铸一剑。 今朝剑指叠云处，炼蛊炼人还炼天！\n\n15.\n但凡会死亡的，都是平等的。无非是早死、晚死的些微区别罢了。 所谓的身份和阶级，高贵和低贱，都不过是一群等死的蠢货，所玩弄的虚假的把戏。这种把戏通过对比，让其中一部分的蠢货觉得自己活得挺好，挺不错。 事实上，那些自认为高贵，有身份的蠢货，都不过是自欺欺人罢了。那些自认为自己低贱卑下的蠢货，更是悲哀。王侯将相宁有种乎！万物生来就平等，何须低头向他人？\n\n16.\n不要期望他人对自己的亲爱，不要渴望世界对自己的善意，不要奢求命运的垂青，一切都要靠自己。\n\n17.\n青山落日,秋月春风。当真是朝如青丝暮成雪,是非成败转头空。\n\n18.\n但凡上当受骗的人，难道真的是因为他们蠢笨吗？ 不是，只是他们内心愿意去相信罢了。\n\n19.\n俗话说，红颜祸水。 一位美人，不是那么好追求的。 只有单纯的人，才想着只用爱情和感动，就能征服一个美人。 其实远远不止这些。 女人的美丽，就是天然的嫁妆。 这笔嫁妆丰厚至极，是一大笔的财富。 谁不想获得这样的财富？ 但不是谁都有能力守护得住这样的财富。 如果有美人，愿意因为单纯的爱情，而将这笔财富交给另一半。那么就请幸运儿好好对待吧。 但事实上，这种情况太少太少。 如果有就请珍惜，如果没有，也不要奢望。 不要说“俗”。 因为这就是，现实\n\n20.\n寒风扑面而来，少年忽的一笑：“不过是些许风霜罢了。” ——古月方源\n\n21.\n“岂不闻天无绝人之路？只要我想走，路就在脚下！” ——古月方源\n\n22.\n失败和耻辱会使人进步。没有失败，是淬炼不出一个成熟的男人的。\n\n23.\n人们往往在了解什么是生命之前，已将自己的生命消磨了一半。---时间、爱情等等，莫不是如此。\n\n24.\n一伸手，水晃月散。 这世间的人，亦常常如此。看到月影，就以为是真月。 殊不知，只是井中之月，眼中之月，心中之月罢了。 “此生就愿成真月，出天山，戏云海，照古今，行走在黑暗的诸天之上。”方源双目澄澈，瞳眸中倒映着锦绣青山。\n\n25.\n真魔只忠于自己，在黑暗孤独朝圣，只走自己的路。 真魔可以去敬佩他人，但永不可能臣服于他人。 真魔皆是自己的君王，至高无上!\n\n26.\n“这个世界上，谈何对错？孰对孰错？只是每个人的道路不同罢了。”\n\n27.\n人生如梦，朝露夕花，宛若泡影。\n\n28.\n千古地仙随风逝，昔曰三王归青冢。 阳莽憾陨谁无败？卷土重来再称王。 天河一挂淘龙鱼，逆天独行顾八荒。 今曰暂且展翼去，明朝登仙笞凤凰 。\n\n29.\n态度是心的面具\n\n30.\n这个世界其实是灰色的。有时候黑的能转成白的，白的能转成黑的。有的黑的未必比白的阴险，有的白的可能罪孽更深。\n\n31.\n人，本就是天地间的宝石。只是宝石璀璨与否，需要我们自己的雕琢。我们的每一次努力，每一次选择，都是一次雕琢。\n\n32.\n每个人他生来就是孤独！ 人就像是一座座的浮冰孤岛，在命运的海洋中漂浮流荡。 人和人的相遇，就像是浮冰孤岛之间的相互碰撞，只要是碰撞，就必有影响。 有时候，浮冰孤岛相互粘在了一起，以“利益”、“亲情”、“友情”、“爱情”、“仇恨”之名。 但是最终，它们都将分开。孤独地走向毁灭。 这就是人生的真相。\n\n33.\n当一个人惧怕的时候，他就成了奴隶。\n\n34.\n人不是山石，也不是浪花，人是有思想的。往往胡思乱想，才最是可怕，最有力量！\n\n35.\n因为困难多壮志，不教红尘惑坚心，今身暂且栖草头，它日狂歌踏山河。\n\n36.\n魔头披着佛陀的外衣，行走在光明之下。\n\n37.\n滴水之恩涌泉相报，星火之仇燎原往复！\n\n38.\n朝如青丝暮成雪，是非成败转头空\n\n39.\n既然老天不偏爱我，师傅不宠爱我，旁人不看好我。我只有更爱我自己，我只有更看好我自己，我只有更依靠我自己。我只有更努力，我只有更冒险，我只有更奋发！只有这样，我才能有成就！但正道讲纲常，讲伦理，讲情义，讲资历，讲辈分。我这样的一个人，小人物，没有背景，没有天赋，没有资源，你说我拿什么来成功？” “走正道，我只能被剥削欺压，仰望你们这些公子，这些天才。我只能熬资历熬到我垂垂老矣，却成就微小。这就是正道啊……什么狗屁正道！” “只有成魔，摒弃伦理情义，抛弃世俗规矩，付出惨重代价，才能另辟蹊径，于荆棘当中，闯出一条属于自己的路来！所以，我就暗算了你，夺了你的血海真传，我就成魔了。哈哈，那就让我成魔吧！”\n\n40.\n不理智的善良即是犯罪。\n\n41.\n白雪尽皑皑，天地我独行。独行无牵挂，孤影任去来。\n\n42.\n天若有情天亦老，大道无情至公。每一个存在都有问鼎的机会，就看如何把握，如何争锋！ 这个世界上，没有人生来就是一辈子的配角。也没有人。会是永恒的主角。 万物相争，优胜劣汰。\n\n43.\n一味的发挥自己的优势，本就是人生的一大谎言。\n\n44.\n千万不要低估旁人的智慧，往往只有蠢才才会认为别人愚蠢。\n\n45.\n我以前希望长生不老，但现在却渐渐厌烦了这个想法。生活变得越来越无聊，有时候路的终点并不重要。重要的是走路的过程，以及走路时候的心态。”\n\n46.\n他面无表情，不管走多少步，逆流河永远流淌在他的脚下，仿佛是绝大的命运的嘲笑。 但是他仍旧走着。 他从前世五百年走来，不知要走到什么时候。 但他知道，自己要去往何方。 似乎……没有人能阻止他。 至少……如今的逆流中，已经无人可阻。\n\n47.\n人啊，走在自己的人生路上，就不要怕肮脏！踩着白骨和血肉，一步步走向辉煌！人啊，走在自己的人生路上，就不要怕悲伤！踏着汗水和泪水，一步步行向光芒！人啊！走在自己的人生路上，就不要怕仿徨！循着信念和理想，一步步走出迷惘！人啊！走在自己的人生路上，就注定要漂泊流浪！无需愤恨你没有知己，因为你还有自己！去吧，走向巅峰，踏向属于自己的天堂。\n\n48.\n“有利可图的正义，才能广为传播，才有实际遵循的可能。这样的正义，才是坚实稳定的。太高尚的正义，反而有些虚假，得不到广泛施行效仿，只会让正义显得孱弱不堪。”\n\n49.\n面对困境，就把心交给希望\n\n50.\n魔不魔，正不正，天地自有凤九歌。走不走，留不留，死生皆在我心头。\n\n51.\n甘于弱小，而不自发努力，只想向强者乞讨的人，根本就不值得同情。\n\n52.\n在狂热顽皮的爱情面前,思想和智慧都只能退避三舍。\n\n53.\n孤独是最深邃的黑暗\n\n54.\n“这就是人的可悲之处啊。”方源趺坐着，看着门外傻傻站着的漠颜，心中感慨，“有的时候，阻止人行动的，往往不是物质上的难题，而是心灵的枷锁。”\n\n55.\n烂耀眼的王位下，铺设的是万千白骨。\n\n56.\n人生匆匆百年，不过一场豪赌。\n\n57.\n人在寻找成功的过程中，往往变得面目全非。\n\n58.\n石人啊，为了表达你的爱情，你不再硬气，放下固执，丢掉尊严，甚至舍弃了自信。但是我看到的，却是个丑陋不堪的石人啊。你起来，我不会接受你对我的爱，我还有更重要的事情要去做呢。\n\n59.\n方源道:“我走魔道，就从未怕得罪人。只要自身不断地强大，复仇算什么?十个人复仇，我就是杀十个人，百个人复仇，我就杀百人。若全世界复仇，我就杀了全世界!如果我被人复仇成功，那就证明我不够强，不够努力，懈怠了修行，死了也活该!”\n\n60.\n仙路阻且长，相逢于天涯。 岁月忽已晚，情仇已绵长。 君思仙尽头，我思君安危。 生死两茫茫，为君梦还乡。\n\n61.\n如果这世间单纯的仇恨、憎恶、咒骂有用，那还需要力量做什么？”\n\n62.\n他的威名让四海凛然，让人谈之色变。 理解他的人敬佩他尊崇他爱戴他，恨他的人咬牙切齿，施展各种手段，却只能让他越来越强。 他走在自己的路上，孤独包裹着他，冷漠的眸子能洞悉一切虚伪。 对于批判否决，他嗤笑不屑。对于虚夸阿谀，他冷笑不语。 他耐得住寂寞，甚至享受寂寞。 他不是走向成功，那么就是走向毁灭。 他是一个勇士，他走在黑暗中独自朝圣，一路披荆斩棘，不管是什么都不能阻挡他。神挡杀神，佛挡杀佛！\n\n63.\n踏上真正高位的人，哪一个双手不沾着血，踏着尸骨？资本家的资金原始积累，都是血腥的。任何的政治家都是肮脏的。所谓的慈善家，都是拿金钱换取社会名望的。 只是成功者，大多矫饰遮掩了过往的不堪。被成功者的自传骗住的人才是蠢材\n\n64.\n男儿当世，自当如此，不受世俗拘束。纵横无忌，看谁不顺眼就杀谁。心恶时屠戮万物，心善时福泽苍生。天下皆随我心而动，主宰一切，将所有敢于反抗自己的敌人踩在脚下。这才是大自在，大畅快的人生啊！\n\n65.\n孤独是最深邃的黑暗，而亲情的光只是一种假象。\n\n66.\n在这自然中，万物都在抗争，都在生存，并不是仅仅只有人而已。这个天地，就是用生和死来演 绎精彩的大舞台啊！\n\n67.\n可惜人们总是害怕孤独，总要贪恋热闹的人群，总不愿无所事事。因为当他们面对孤独，往往就会面对痛苦。但是一旦能直面这种痛苦，人就往往有了才华和勇气。所以。有句俗语――杰出者必孤独。“这就是孤独的滋味啊，每每品味，都更加坚定我追求魔道之决心！”\n\n68.\n有些东西，往往只有失去了，才能看得明白。\n\n69.\n永生缥缈非我求，长生无为老愧羞。 界壁消散乱世起，宿命一去竞自由。 鹰击长空鲸霸海，不试怎知龙与蚯? 凡夫俗子岂识我，非到末路不甘休!\n\n70.\n一双两好缠绵久，万转千回缱绻多。细细的，慢慢的，经年累月，把岁月汇聚在一起，有曲折，有翻搓，有纠缠。搓草绳，不就是人生经历 《蛊真人》\n\n71.\n“我们都是小人，都想走出平凡的深渊。”\n\n72.\n“你怎么没有罪。你的弱小就是罪啊!”话音刚落，方源便射出落魄印。\n\n73.\n月如霜满夜,刀光尤冷寒。严冬不肃杀,何以见阳春!\n\n74.\n居高临下，目光洞穿繁芜世事。或抽丝剥茧，或一针见血。我自居高笑傲，冷看世间之人如颗颗棋子，遵循着各自的规矩，按部就班地行进。\n\n75.\n未来的路，会很精彩呢\n\n76.\n雄山漫道真如铁，如今迈步从头越。 险就一身乾坤精，我心依旧望苍天。\n\n77.\n遇到困境，就将心交给希望。\n\n78.\n态度是心的面具在寻找成功的过程中，人往往会变得面目全非，而人最大的失败，就是失去自我。\n\n79.\n“山延万里渊九重，蟠居井底鳅鳝蚌。今朝奋髯云乍起，矫首上凌飞太清。”\n\n80.\n自己蛊见人祖意兴阑珊，笑道：“人祖啊，你应该高兴才是。你要知道，发现自己，认识自己，是人生的第一件大事。自己才是世间最可靠的\n\n81.\n世间不如意之事，十之八九啊。\n\n82.\n人的一生之精彩，在于自己追逐梦想的过程。不必苛求旁人的不失望或者喜欢。 走自己的路，让旁人失望和不喜欢去吧！\n\n83.\n弱肉强食，适者生存，本来就是这世间的本质。\n\n84.\n历经五十四次劫，劫云仍旧漫遮天。 胸中魂光压众生，拳里剑气纵北原。 时来时去四百载，无死何能生新颜? 弃此残躯换清风，卷席苍穹复光年!\n\n85.\n歌声寥落，英雄落魄，难挡命途多舛。 折剑沉沙，千古兴亡，不尽天河滚荡。 忧愁... 幽夜漫漫魂梦长，问何处安乡？ 物换心移几春秋。唯天意苍茫。\n\n86.\n忽然他轻笑出声：“想我堂堂一代魔头巨擘，何时畏首畏尾，如此瞻前顾后？只要有一线希望，就该勇于出手。只要有滔天的利益。就该奋不顾身。富贵险中求，什么稳中求胜，慢慢积累？我就是要一步登天！”“没错，就这个方案了！失败就死无葬身之地。成功就如蛟龙升天，对今后大计更为有利。呵呵呵，哈哈哈，人生匆匆百年。不过一场豪赌！”\n\n87.\n而且，我从不相信什么诚信。所谓的信誉，都是狗屁，不过是利益小，打动不了内心罢了。”\n\n88.\n忠诚自己，是对他人的背叛。 忠诚他人，是对自己的背叛。\n\n89.\n只要我想，以我的魔道巨擘的手段，整个青茅山都可以玩弄于股掌之间，不过他们也配？\n\n90.\n人的一生之精彩，在于自己追逐梦想的过程。不必苛求旁人的不失望或者喜欢。\n\n91.\n长凡不凡， 武庸不庸　 永生飘渺非我求， 长生无为老愧羞　 界壁消散乱世起，宿命一去竞自由。　 鹰击长空鲸霸海，不试怎知龙与蚯。　 凡夫俗子岂识我， 非到末路不甘休\n\n92.\n醉一回 梦一场 宿命之歌响四方 赌一回 狂一场 宿命之光照八荒 拼一回 赴一场 宿命之战携手闯 战到日月都无光 未散场\n\n93.\n梦里轻烟天外客， 夜夜梦中唤心魂。 纵是百年无缘分， 解脱俗尘梦纯真。\n\n94.\n红尘漩涡不由己，何朝散发弄扁舟？乘风破浪三万里，方是我辈魔道人！\n\n95.\n所谓的美色，到头来，也不过是黄土一捧而已。 尘归尘，土归土。 美丽的少女，在天地中，不过和鲜花一样。或是被路边的脚步践踏，或是时间到了枯萎老去，成为丑陋的肥料滋润土地。 没有永生，再美好的东西也是镜花水月啊。存在的价值，不过是刹那的芳华罢了。\n\n96.\n“这一切的一切都是宿命。” “我们每一个人，每一个生命，乃至每一块山石，每一滴水，每一团火，既然在这个世间存在，就必有存在的意义和价值。善恶也是如此，没有善，哪里来的恶？没有恶，又何必谈善？”\n\n97.\n不论哪个世界上，总有一群弱者，乞讨强者的施舍，死皮赖脸又不知分寸。好像帮助他们才是强者的风范，不帮助他们就是不对的事情。\n\n98.\n魔不魔，正不正，天地自有凤九歌。 走不走，留不留，死生皆在我心头。 魔道正道，这两种阵营，两种身份，都不能拘束我凤九歌! 是走还是留，对于我凤九歌而言，走了就是我心之死，留下才是我心之生。 凡事依凭本心。 我就是我。 我就是凤九歌。 一直都是!\n\n99.\n所谓团结，不过是因为彼此弱小。 人脉这种东西，在地球上的确需要。毕竟人和人之间，在本身力量上是不会有质的区别。但这世界是能修行的世界，从根本上就不一样。 人脉不过是力量的附属品，只要自身强大，人脉就会攀附而来。 但凡追求人脉关系，必是有求于 他人。 甚至不需要人脉――只要自身强大无比，什么东西都可信手拈来，不给就抢杀，还需要什么人脉关系?\n\n100.\n“你说：小时候，你想成为顶天立地的人物，就像是正道的那些传奇人物那样。少年时，觉得成为一族族长也不错。青年时，能够成为家老就感觉很棒了。中年后，被家族流放，现其实能养得活自己，养得起身上的蛊虫，就能让自己满意。” “我不会这样，让梦想随着年龄而萎缩。” “这个世界太大，而我们都是\n","comments":true,"categories":[],"tags":[{"name":"fiction","slug":"fiction","permalink":"http://jinmajue.site/tags/fiction/"}]},{"title":"血型性格论","date":"2024-08-20T03:26:36.000Z","path":"2024/08/20/血型性格论/","text":"以下是四种血型性格特点的全面总结： A型血 性格特点：A型血的人通常具有高度责任感，善于组织和规划，注重细节。他们性格内敛，追求稳定和安全感，喜欢在熟悉的环境中工作和生活。因其谨慎性格，他们在决策时往往考虑周全，避免冒险。尽管外表温和，但内心可能承受较大压力。 社交倾向：A型血的人在社交中表现得有礼貌、体贴，擅长维持和谐的关系。他们重视他人的感受，通常愿意为他人付出，但有时会因为太过顾虑他人而忽视自己内心的需求，导致情感上的压抑。 B型血 性格特点：B型血的人个性活泼外向，富有创造力和冒险精神。他们不拘泥于规则，喜欢尝试新鲜事物，能够灵活应对变化。他们追求自由和独立，不喜欢被束缚，倾向于随心所欲地生活。尽管如此，他们在面对困难时往往表现出较强的适应能力。 社交倾向：在社交场合中，B型血的人通常表现得开朗、自信，容易结交新朋友。他们喜欢在轻松愉快的氛围中交流，但有时可能显得过于自我中心或不够考虑他人感受，这可能导致人际关系上的摩擦。 O型血 性格特点：O型血的人通常充满自信，目标明确，具有较强的领导才能。他们思维清晰，逻辑性强，擅长解决问题和制定计划。在行动上，他们果断且执行力强，喜欢掌控局面，追求成就和成功。他们对自己的要求较高，常常设定远大的目标并全力以赴。 社交倾向：O型血的人在社交中表现得大方、自信，容易吸引他人的注意力。他们喜欢成为团体中的领导者，并且善于调动他人的积极性。然而，由于他们的强势个性，有时可能会忽视他人的感受或意见，导致与他人产生冲突。 AB型血 性格特点：AB型血的人性格复杂，具有多重特质，既能冷静分析，又能表现出富有创意的一面。他们思维敏捷，情绪变化多样，常常表现出矛盾的特质，既有理性的一面，也有感性的一面。他们追求个人空间，但也希望与他人建立深刻的联系，往往在理性与感性之间寻找平衡。 社交倾向：AB型血的人在社交中灵活多变，能够迅速适应不同的社交场合。他们既能独立处理事务，又能融入群体，表现出双重性格特征。在与他人交往时，他们能够理解和包容不同的观点，但有时可能显得难以捉摸或情绪化，这可能影响他人对他们的信任感。 这些性格特点反映了不同血型的人在思维方式、行为习惯和社交倾向上的差异。虽然血型与性格之间的联系并非绝对，但这些总结提供了一种有趣的视角，帮助人们理解自己和他人的性格特点。","raw":"---\ntitle: 血型性格论\ndate: 2024-08-20 11:26:36\ntags: notes\n---\n\n以下是四种血型性格特点的全面总结：\n\n### A型血\n- **性格特点**：A型血的人通常具有高度责任感，善于组织和规划，注重细节。他们性格内敛，追求稳定和安全感，喜欢在熟悉的环境中工作和生活。因其谨慎性格，他们在决策时往往考虑周全，避免冒险。尽管外表温和，但内心可能承受较大压力。\n- **社交倾向**：A型血的人在社交中表现得有礼貌、体贴，擅长维持和谐的关系。他们重视他人的感受，通常愿意为他人付出，但有时会因为太过顾虑他人而忽视自己内心的需求，导致情感上的压抑。\n\n### B型血\n- **性格特点**：B型血的人个性活泼外向，富有创造力和冒险精神。他们不拘泥于规则，喜欢尝试新鲜事物，能够灵活应对变化。他们追求自由和独立，不喜欢被束缚，倾向于随心所欲地生活。尽管如此，他们在面对困难时往往表现出较强的适应能力。\n- **社交倾向**：在社交场合中，B型血的人通常表现得开朗、自信，容易结交新朋友。他们喜欢在轻松愉快的氛围中交流，但有时可能显得过于自我中心或不够考虑他人感受，这可能导致人际关系上的摩擦。\n\n### O型血\n- **性格特点**：O型血的人通常充满自信，目标明确，具有较强的领导才能。他们思维清晰，逻辑性强，擅长解决问题和制定计划。在行动上，他们果断且执行力强，喜欢掌控局面，追求成就和成功。他们对自己的要求较高，常常设定远大的目标并全力以赴。\n- **社交倾向**：O型血的人在社交中表现得大方、自信，容易吸引他人的注意力。他们喜欢成为团体中的领导者，并且善于调动他人的积极性。然而，由于他们的强势个性，有时可能会忽视他人的感受或意见，导致与他人产生冲突。\n\n### AB型血\n- **性格特点**：AB型血的人性格复杂，具有多重特质，既能冷静分析，又能表现出富有创意的一面。他们思维敏捷，情绪变化多样，常常表现出矛盾的特质，既有理性的一面，也有感性的一面。他们追求个人空间，但也希望与他人建立深刻的联系，往往在理性与感性之间寻找平衡。\n- **社交倾向**：AB型血的人在社交中灵活多变，能够迅速适应不同的社交场合。他们既能独立处理事务，又能融入群体，表现出双重性格特征。在与他人交往时，他们能够理解和包容不同的观点，但有时可能显得难以捉摸或情绪化，这可能影响他人对他们的信任感。\n\n这些性格特点反映了不同血型的人在思维方式、行为习惯和社交倾向上的差异。虽然血型与性格之间的联系并非绝对，但这些总结提供了一种有趣的视角，帮助人们理解自己和他人的性格特点。\n","comments":true,"categories":[],"tags":[{"name":"notes","slug":"notes","permalink":"http://jinmajue.site/tags/notes/"}]},{"title":"search in Google","date":"2024-08-19T14:05:57.000Z","path":"2024/08/19/search-in-Google/","text":"1. 使用引号进行精确匹配用法：在搜索词周围加上引号。 例子：&quot;人工智能发展&quot; 说明：这样 Google 只会返回包含完全匹配词组的结果。适合寻找具体的短语或文章标题。 2. 使用减号排除词用法：在不需要的词前加上减号。 例子：苹果 -手机 说明：这个搜索会返回关于“苹果”的结果，但会排除包含“手机”的结果。适用于你希望排除某些相关内容的情况。 3. 使用星号作为通配符用法：在搜索词中使用星号。 例子：最佳 * 学习工具 说明：星号（*）作为通配符，表示可以匹配任意词。这对于寻找包含变体或相关词组的信息很有用。 4. 使用“site:”限定特定网站用法：在搜索词前加上“site:”，然后是网站地址。 例子：site:example.com 搜索词 说明：这样可以限制搜索结果只来自指定的网站。适合查找某个特定网站上的信息。 5. 使用“filetype:”搜索特定格式文件用法：在搜索词后加上“filetype:”，然后是文件格式。 例子：filetype:pdf 经济学报告 说明：只返回指定格式的文件，例如 PDF、DOCX 等。非常适合寻找特定类型的文档。 6. 使用“OR”进行多选查询用法：用“OR”连接不同的搜索词。 例子：健康 OR 医疗 说明：此搜索会返回包含任一关键词的结果。如果你对两个相关主题都感兴趣，可以使用这个技巧。 7. 使用“intitle:”限定标题中的词用法：在搜索词前加上“intitle:”。 例子：intitle:科技 新闻 说明：只返回标题中包含指定词的网页。适用于寻找特定标题的文章或网页。 8. 使用“related:”寻找相关网站用法：在搜索词前加上“related:”。 例子：related:cnn.com 说明：找到与指定网站类似的其他网站。适合寻找与某个网站内容相似的资源。 9. 使用“define:”查找词汇定义用法：在搜索词前加上“define:”。 例子：define:人工智能 说明：快速获取某个词汇的定义。适合查找不熟悉的词汇或术语的含义。 10. 使用“cache:”查看缓存页面用法：在网址前加上“cache:”。 例子：cache:example.com 说明：查看某个网页的最新缓存版本。如果网站无法访问或内容被修改，可以查看之前的版本。 11. 使用“*”查找词组的变体用法：在词组中使用星号（*）。 例子：搜索*技巧 说明：星号表示任何词，这样可以找到包含“搜索”及其变体的所有结果。适合寻找相关主题的多样性。 12. 使用“time”限制时间范围用法：在 Google 搜索工具中选择时间范围，如“过去24小时”、“过去一周”等。 例子：在搜索结果页面中选择“工具”&gt;“任何时间”&gt;“过去24小时”。 说明：限制搜索结果的时间范围，可以帮助你找到最新的信息或按时间排序的结果。 这些技巧可以显著提高你的搜索效率，使你能够更快、更准确地找到需要的信息。根据你的需求，灵活运用这些技巧，可以帮助你更有效地使用 Google 搜索。","raw":"---\ntitle: search in Google\ndate: 2024-08-19 22:05:57\ntags: tips\n---\n\n### 1. 使用引号进行精确匹配\n\n**用法**：在搜索词周围加上引号。\n\n**例子**：`\"人工智能发展\"`\n\n**说明**：这样 Google 只会返回包含完全匹配词组的结果。适合寻找具体的短语或文章标题。\n\n### 2. 使用减号排除词\n\n**用法**：在不需要的词前加上减号。\n\n**例子**：`苹果 -手机`\n\n**说明**：这个搜索会返回关于“苹果”的结果，但会排除包含“手机”的结果。适用于你希望排除某些相关内容的情况。\n\n### 3. 使用星号作为通配符\n\n**用法**：在搜索词中使用星号。\n\n**例子**：`最佳 * 学习工具`\n\n**说明**：星号（*）作为通配符，表示可以匹配任意词。这对于寻找包含变体或相关词组的信息很有用。\n\n### 4. 使用“site:”限定特定网站\n\n**用法**：在搜索词前加上“site:”，然后是网站地址。\n\n**例子**：`site:example.com 搜索词`\n\n**说明**：这样可以限制搜索结果只来自指定的网站。适合查找某个特定网站上的信息。\n\n### 5. 使用“filetype:”搜索特定格式文件\n\n**用法**：在搜索词后加上“filetype:”，然后是文件格式。\n\n**例子**：`filetype:pdf 经济学报告`\n\n**说明**：只返回指定格式的文件，例如 PDF、DOCX 等。非常适合寻找特定类型的文档。\n\n### 6. 使用“OR”进行多选查询\n\n**用法**：用“OR”连接不同的搜索词。\n\n**例子**：`健康 OR 医疗`\n\n**说明**：此搜索会返回包含任一关键词的结果。如果你对两个相关主题都感兴趣，可以使用这个技巧。\n\n### 7. 使用“intitle:”限定标题中的词\n\n**用法**：在搜索词前加上“intitle:”。\n\n**例子**：`intitle:科技 新闻`\n\n**说明**：只返回标题中包含指定词的网页。适用于寻找特定标题的文章或网页。\n\n### 8. 使用“related:”寻找相关网站\n\n**用法**：在搜索词前加上“related:”。\n\n**例子**：`related:cnn.com`\n\n**说明**：找到与指定网站类似的其他网站。适合寻找与某个网站内容相似的资源。\n\n### 9. 使用“define:”查找词汇定义\n\n**用法**：在搜索词前加上“define:”。\n\n**例子**：`define:人工智能`\n\n**说明**：快速获取某个词汇的定义。适合查找不熟悉的词汇或术语的含义。\n\n### 10. 使用“cache:”查看缓存页面\n\n**用法**：在网址前加上“cache:”。\n\n**例子**：`cache:example.com`\n\n**说明**：查看某个网页的最新缓存版本。如果网站无法访问或内容被修改，可以查看之前的版本。\n\n### 11. 使用“*”查找词组的变体\n\n**用法**：在词组中使用星号（*）。\n\n**例子**：`搜索*技巧`\n\n**说明**：星号表示任何词，这样可以找到包含“搜索”及其变体的所有结果。适合寻找相关主题的多样性。\n\n### 12. 使用“time”限制时间范围\n\n**用法**：在 Google 搜索工具中选择时间范围，如“过去24小时”、“过去一周”等。\n\n**例子**：在搜索结果页面中选择“工具”>“任何时间”>“过去24小时”。\n\n**说明**：限制搜索结果的时间范围，可以帮助你找到最新的信息或按时间排序的结果。\n\n这些技巧可以显著提高你的搜索效率，使你能够更快、更准确地找到需要的信息。根据你的需求，灵活运用这些技巧，可以帮助你更有效地使用 Google 搜索。\n","comments":true,"categories":[],"tags":[{"name":"tips","slug":"tips","permalink":"http://jinmajue.site/tags/tips/"}]},{"title":"代码注释","date":"2024-08-14T09:28:41.000Z","path":"2024/08/14/代码注释/","text":"代码的神注释瓦瓦 十 * 十齱龠己 亅瓦車己 * 乙龍龠毋日丶 丶乙己毋毋丶 * 十龠馬鬼車瓦 己十瓦毋毋 * 鬼馬龠馬龠十 己己毋車毋瓦 * 毋龠龠龍龠鬼乙丶丶乙車乙毋鬼車己 * 乙龠龍龍鬼龍瓦 十瓦毋乙瓦龠瓦亅 * 馬齱龍馬鬼十丶日己己己毋車乙丶 * 己齱馬鬼車十十毋日乙己己乙乙 * 車馬齱齱日乙毋瓦己乙瓦日亅 * 亅車齺龖瓦乙車龖龍乙乙十 * 日龠龠十亅車龍毋十十 * 日毋己亅 己己十亅亅 * 丶己十十乙 丶丶丶丶丶 * 亅己十龍龖瓦 丶 丶 乙十 * 亅己十龠龖毋 丶丶 丶己鬼鬼瓦亅 * 十日十十日亅丶亅丶 丶十日毋鬼馬馬車乙 * 十日乙十亅亅亅丶 十乙己毋鬼鬼鬼龍齺馬乙 * 丶瓦己乙十十亅丶亅乙乙乙己毋鬼鬼鬼龍齱齺齺鬼十 * 乙乙十十十亅乙瓦瓦己日瓦毋鬼鬼龠齱齱龍龍齱齱毋丶 * 亅十十十十乙瓦車毋瓦瓦日車馬龠龍龍龍龍龍龠龠龠馬亅 * 十十十十己毋車瓦瓦瓦瓦鬼馬龠龍龠龠龍龠龠龠馬龠車 * 亅十十日毋瓦日日瓦鬼鬼鬼龠龠馬馬龠龍龍龠馬馬車 * 亅亅亅乙瓦瓦毋車車車馬龍龠鬼鬼馬龠龍龍龠馬馬鬼 * 丶丶乙亅亅乙車鬼鬼鬼毋車龍龍龠鬼馬馬龠龍齱齱龍馬鬼 * 亅己十十己十日鬼鬼車瓦毋龠龍龠馬馬龠龠龠齱齺齺齱龠鬼 * 亅乙乙乙十車馬車毋馬齱齱龍龠龠龠馬龠龍齱龍龠龠鬼瓦 * 丶毋龠鬼車瓦車馬龠龍龠龠龍齱齱龠馬馬鬼毋日 * 十乙己日十 丶己鬼龍齱齺齱龍馬馬馬車毋己 * 丶十己乙亅丶 亅瓦馬龠龍龠龠馬毋瓦乙 * 丶十十乙亅十 亅己瓦車馬龠鬼車瓦乙 * 丶十乙十十丶 丶丶亅十瓦鬼車瓦己 * 丶亅亅丶 亅日瓦日 * 丶 */就不卖关子了，图片转字符可以上这个传送门，白底的话会按空格补全，否则都为字符。前面的传送门貌似出了点问题，下面再补上个新的传送门，也是很好用的，可以选择质量。这不，下面的两只doge和一头滑稽就是产自于它，have fun，快去制作专属的字符注释吧。再补上一个好玩的网站Ascii World，由于这网站的图形太多了，我就不贴上来了。/** * .,:,,, .::,,,::. * .::::,,;;, .,;;:,,....:i: * :i,.::::,;i:. ....,,:::::::::,.... .;i:,. ......;i. * :;..:::;::::i;,,:::;:,,,,,,,,,,..,.,,:::iri:. .,:irsr:,.;i. * ;;..,::::;;;;ri,,,. ..,,:;s1s1ssrr;,.;r, * :;. ,::;ii;:, . ................... .;iirri;;;,,;i, * ,i. .;ri:. ... ............................ .,,:;:,,,;i: * :s,.;r:... ....................................... .::;::s; * ,1r::. .............,,,.,,:,,........................,;iir; * ,s;........... ..::.,;:,,. ...............,;1s * :i,..,. .,:,,::,. .......... .......;1, * ir,....:rrssr;:, ,,.,::. .r5S9989398G95hr;. ....,.:s, * ;r,..,s9855513XHAG3i .,,,,,,,. ,S931,.,,.;s;s&amp;BHHA8s.,..,..:r: * :r;..rGGh, :SAG;;G@BS:.,,,,,,,,,.r83: hHH1sXMBHHHM3..,,,,.ir. * ,si,.1GS, sBMAAX&amp;MBMB5,,,,,,:,,.:&amp;8 3@HXHBMBHBBH#X,.,,,,,,rr * ;1:,,SH: .A@&amp;&amp;B#&amp;8H#BS,,,,,,,,,.,5XS, 3@MHABM&amp;59M#As..,,,,:,is, * .rr,,,;9&amp;1 hBHHBB&amp;8AMGr,,,,,,,,,,,:h&amp;&amp;9s; r9&amp;BMHBHMB9: . .,,,,;ri. * :1:....:5&amp;XSi;r8BMBHHA9r:,......,,,,:ii19GG88899XHHH&amp;GSr. ...,:rs. * ;s. .:sS8G8GG889hi. ....,,:;:,.:irssrriii:,. ...,,i1, * ;1, ..,....,,isssi;, .,,. ....,.i1, * ;h: i9HHBMBBHAX9: . ...,,,rs, * ,1i.. :A#MBBBBMHB##s ....,,,;si. * .r1,.. ,..;3BMBBBHBB#Bh. .. ....,,,,,i1; * :h;.. .,..;,1XBMMMMBXs,.,, .. :: ,. ....,,,,,,ss. * ih: .. .;;;, ;;:s58A3i,.. ,. ,.:,,. ...,,,,,:,s1, * .s1,.... .,;sh, ,iSAXs;. ,. ,,.i85 ...,,,,,,:i1; * .rh: ... rXG9XBBM#M#MHAX3hss13&amp;&amp;HHXr .....,,,,,,,ih; * .s5: ..... i598X&amp;&amp;A&amp;AAAAAA&amp;XG851r: ........,,,,:,,sh; * . ihr, ... . .. ........,,,,,;11:. * ,s1i. ... ..,,,..,,,.,,.,,.,.. ........,,.,,.;s5i. * .:s1r,...................... ..............;shs, * . .:shr:. .... ..............,ishs. * .,issr;,... ...........................,is1s;. * .,is1si;:,....................,:;ir1sr;, * ..:isssssrrii;::::::;;iirsssssr;:.. * .,::iiirsssssssssrri;;:. */ /** * ii. ;9ABH, * SA391, .r9GG35&amp;G * &amp;#ii13Gh; i3X31i;:,rB1 * iMs,:,i5895, .5G91:,:;:s1:8A * 33::::,,;5G5, ,58Si,,:::,sHX;iH1 * Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG * .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8 * :SB9s:,............................,,,.,,,SASh53h,1G. * .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX, * ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi * i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&amp;5.:X1 * 59;.....,. .,,,,,,,,,,,... .............,..:1;.:&amp;s * s8,..;53S5S3s. .,,,,,,,.,.. i15S5h1:.........,,,..,,:99 * 93.:39s:rSGB@A; ..,,,,..... .SG3hhh9G&amp;BGi..,,,,,,,,,,,,.,83 * G5.G8 9#@@@@@X. .,,,,,,..... iA9,.S&amp;B###@@Mr...,,,,,,,,..,.;Xh * Gs.X8 S@@@@@@@B:..,,,,,,,,,,. rA1 ,A@@@@@@@@@H:........,,,,,,.iX: * ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@@M; ....,,,,,,,,S8 * X3 iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@@Hs ...,,,,,,,:Gs * r8, ,,,...,,,,,,,,,,..... ,h8XABMMHX3r. .,,,,,,,.rX: * :9, . .:,..,:;;;::,.,,,,,.. .,,. ..,,,,,,.59 * .Si ,:.i8HBMMMMMB&amp;5,.... . .,,,,,.sMr * SS :: h@@@@@@@@@@#; . ... . ..,,,,iM5 * 91 . ;:.,1&amp;@@@@@@MXs. . .,,:,:&amp;S * hS .... .:;,,,i3MMS1;..,..... . . ... ..,:,.99 * ,8; ..... .,:,..,8Ms:;,,,... .,::.83 * s&amp;: .... .sS553B@@HX3s;,. .,;13h. .:::&amp;1 * SXr . ...;s3G99XA&amp;X88Shss11155hi. ,;:h&amp;, * iH8: . .. ,;iiii;,::,,,,,. .;irHA * ,8X5; . ....... ,;iihS8Gi * 1831, .,;irrrrrs&amp;@ * ;5A8r. .:;iiiiirrss1H * :X@H3s....... .,:;iii;iiiiirsrh * r#h:;,...,,.. .,,:;;;;;:::,... .:;;;;;;iiiirrss1 * ,M8 ..,....,.....,,::::::,,... . .,;;;iiiiiirss11h * 8B;.,,,,,,,.,..... . .. .:;;;;iirrsss111h * i@5,:::,,,,,,,,.... . . .:::;;;;;irrrss111111 * 9Bi,:,,,,...... ..r91;;;;;iirrsss1ss1111 *//** * .,, .,:;;iiiiiiiii;;:,,. .,, * rGB##HS,.;iirrrrriiiiiiiiiirrrrri;,s&amp;##MAS, * r5s;:r3AH5iiiii;;;;;;;;;;;;;;;;iiirXHGSsiih1, * .;i;;s91;;;;;;::::::::::::;;;;iS5;;;ii: * :rsriii;;r::::::::::::::::::::::;;,;;iiirsi, * .,iri;;::::;;;;;;::,,,,,,,,,,,,,..,,;;;;;;;;iiri,,. * ,9BM&amp;, .,:;;:,,,,,,,,,,,hXA8: ..,,,. * ,;&amp;@@#r:;;;;;::::,,. ,r,,,,,,,,,,iA@@@s,,:::;;;::,,. .;. * :ih1iii;;;;;::::;;;;;;;:,,,,,,,,,,;i55r;;;;;;;;;iiirrrr,.. * .ir;;iiiiiiiiii;;;;::::::,,,,,,,:::::,,:;;;iiiiiiiiiiiiri * iriiiiiiiiiiiiiiii;;;::::::::::::::::;;;iiiiiiiiiiiiiiiir; * ,riii;;;;;;;;;;;;;:::::::::::::::::::::::;;;;;;;;;;;;;;iiir. * iri;;;::::,,,,,,,,,,:::::::::::::::::::::::::,::,,::::;;iir: * .rii;;::::,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,::::;;iri * ,rii;;;::,,,,,,,,,,,,,:::::::::::,:::::,,,,,,,,,,,,,:::;;;iir. * ,rii;;i::,,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,,::i;;iir. * ,rii;;r::,,,,,,,,,,,,,:,:::::,:,:::::::,,,,,,,,,,,,,::;r;;iir. * .rii;;rr,:,,,,,,,,,,,,,,:::::::::::::::,,,,,,,,,,,,,:,si;;iri * ;rii;:1i,,,,,,,,,,,,,,,,,,:::::::::,,,,,,,,,,,,,,,:,ss:;iir: * .rii;;;5r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sh:;;iri * ;rii;:;51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.:hh:;;iir, * irii;::hSr,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,sSs:;;iir: * irii;;:iSSs:.,,,,,,,,,,,,,,,,,,,,,,,,,,,..:135;:;;iir: * ;rii;;:,r535r:...,,,,,,,,,,,,,,,,,,..,;sS35i,;;iirr: * :rrii;;:,;1S3Shs;:,............,:is533Ss:,;;;iiri, * .;rrii;;;:,;rhS393S55hh11hh5S3393Shr:,:;;;iirr: * .;rriii;;;::,:;is1h555555h1si;:,::;;;iirri:. * .:irrrii;;;;;:::,,,,,,,,:::;;;;iiirrr;, * .:irrrriiiiii;;;;;;;;iiiiiirrrr;,. * .,:;iirrrrrrrrrrrrrrrrri;:. * ..,:::;;;;:::,,. */ /** * ┌───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐ * │Esc│ │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│ ┌┐ ┌┐ ┌┐ * └───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘ └┘ └┘ └┘ * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐ * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│&amp; 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │ * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤ * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │&#123; [│&#125; ]│ | \\ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │ │ * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │ * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│&quot; &#x27;│ Enter │ │ 4 │ 5 │ 6 │ │ * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤ ┌───┐ ├───┼───┼───┼───┤ * │ Shift │ Z │ X │ C │ V │ B │ N │ M │&lt; ,│&gt; .│? /│ Shift │ │ ↑ │ │ 1 │ 2 │ 3 │ │ * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││ * │ Ctrl│ │Alt │ Space │ Alt│ │ │Ctrl│ │ ← │ ↓ │ → │ │ 0 │ . │←─┘│ * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘ *//** * _ooOoo_ * o8888888o * 88&quot; . &quot;88 * (| -_- |) * O\\ = /O * ____/`---&#x27;\\____ * . &#x27; \\\\| |// `. * / \\\\||| : |||// \\ * / _||||| -:- |||||- \\ * | | \\\\\\ - /// | | * | \\_| &#x27;&#x27;\\---/&#x27;&#x27; | | * \\ .-\\__ `-` ___/-. / * ___`. .&#x27; /--.--\\ `. . __ * .&quot;&quot; &#x27;&lt; `.___\\_&lt;|&gt;_/___.&#x27; &gt;&#x27;&quot;&quot;. * | | : `- \\`.;`\\ _ /`;.`/ - ` : | | * \\ \\ `-. \\_ __\\ /__ _/ .-` / / * ======`-.____`-.___\\_____/___.-`____.-&#x27;====== * `=---=&#x27; * * ............................................. * 佛祖保佑 永无BUG *//** * 佛曰: * 写字楼里写字间，写字间里程序员； * 程序人员写程序，又拿程序换酒钱。 * 酒醒只在网上坐，酒醉还来网下眠； * 酒醉酒醒日复日，网上网下年复年。 * 但愿老死电脑间，不愿鞠躬老板前； * 奔驰宝马贵者趣，公交自行程序员。 * 别人笑我忒疯癫，我笑自己命太贱； * 不见满街漂亮妹，哪个归得程序员？ *//** * _ooOoo_ * o8888888o * 88&quot; . &quot;88 * (| -_- |) * O\\ = /O * ___/`---&#x27;\\____ * . &#x27; \\\\| |// `. * / \\\\||| : |||// \\ * / _||||| -:- |||||- \\ * | | \\\\\\ - /// | | * | \\_| &#x27;&#x27;\\---/&#x27;&#x27; | | * \\ .-\\__ `-` ___/-. / * ___`. .&#x27; /--.--\\ `. . __ * .&quot;&quot; &#x27;&lt; `.___\\_&lt;|&gt;_/___.&#x27; &gt;&#x27;&quot;&quot;. * | | : `- \\`.;`\\ _ /`;.`/ - ` : | | * \\ \\ `-. \\_ __\\ /__ _/ .-` / / * ======`-.____`-.___\\_____/___.-`____.-&#x27;====== * `=---=&#x27; * ............................................. * 佛曰：bug泛滥，我已瘫痪！ *//** * * █████▒█ ██ ▄████▄ ██ ▄█▀ ██████╗ ██╗ ██╗ ██████╗ * ▓██ ▒ ██ ▓██▒▒██▀ ▀█ ██▄█▒ ██╔══██╗██║ ██║██╔════╝ * ▒████ ░▓██ ▒██░▒▓█ ▄ ▓███▄░ ██████╔╝██║ ██║██║ ███╗ * ░▓█▒ ░▓▓█ ░██░▒▓▓▄ ▄██▒▓██ █▄ ██╔══██╗██║ ██║██║ ██║ * ░▒█░ ▒▒█████▓ ▒ ▓███▀ ░▒██▒ █▄ ██████╔╝╚██████╔╝╚██████╔╝ * ▒ ░ ░▒▓▒ ▒ ▒ ░ ░▒ ▒ ░▒ ▒▒ ▓▒ ╚═════╝ ╚═════╝ ╚═════╝ * ░ ░░▒░ ░ ░ ░ ▒ ░ ░▒ ▒░ * ░ ░ ░░░ ░ ░ ░ ░ ░░ ░ * ░ ░ ░ ░ ░ *//** * .::::. * .::::::::. * ::::::::::: FUCK YOU * ..:::::::::::&#x27; * &#x27;::::::::::::&#x27; * .:::::::::: * &#x27;::::::::::::::.. * ..::::::::::::. * ``:::::::::::::::: * ::::``:::::::::&#x27; .:::. * ::::&#x27; &#x27;:::::&#x27; .::::::::. * .::::&#x27; :::: .:::::::&#x27;::::. * .:::&#x27; ::::: .:::::::::&#x27; &#x27;:::::. * .::&#x27; :::::.:::::::::&#x27; &#x27;:::::. * .::&#x27; ::::::::::::::&#x27; ``::::. * ...::: ::::::::::::&#x27; ``::. * ```` &#x27;:. &#x27;:::::::::&#x27; ::::.. * &#x27;.:::::&#x27; &#x27;:&#x27;````.. *//** * ┌─┐ ┌─┐ * ┌──┘ ┴───────┘ ┴──┐ * │ │ * │ ─── │ * │ ─┬┘ └┬─ │ * │ │ * │ ─┴─ │ * │ │ * └───┐ ┌───┘ * │ │ * │ │ * │ │ * │ └──────────────┐ * │ │ * │ ├─┐ * │ ┌─┘ * │ │ * └─┐ ┐ ┌───────┬──┐ ┌──┘ * │ ─┤ ─┤ │ ─┤ ─┤ * └──┴──┘ └──┴──┘ * 神兽保佑 * 代码无BUG! *//** * ┌─┐ ┌─┐ * ┌──┘ ┴───────┘ ┴──┐ * │ │ * │ ─── │ * │ &gt; &lt; │ * │ │ * │ ... ⌒ ... │ * │ │ * └───┐ ┌───┘ * │ │ * │ │ * │ │ * │ └──────────────┐ * │ │ * │ ├─┐ * │ ┌─┘ * │ │ * └─┐ ┐ ┌───────┬──┐ ┌──┘ * │ ─┤ ─┤ │ ─┤ ─┤ * └──┴──┘ └──┴──┘ * 神兽保佑 * 代码无BUG! *//** * ┌─┐ ┌─┐ + + * ┌──┘ ┴───────┘ ┴──┐++ * │ │ * │ ─── │++ + + + * ███████───███████ │+ * │ │+ * │ ─┴─ │ * │ │ * └───┐ ┌───┘ * │ │ * │ │ + + * │ │ * │ └──────────────┐ * │ │ * │ ├─┐ * │ ┌─┘ * │ │ * └─┐ ┐ ┌───────┬──┐ ┌──┘ + + + + * │ ─┤ ─┤ │ ─┤ ─┤ * └──┴──┘ └──┴──┘ + + + + * 神兽保佑 * 代码无BUG! *//** * ___====-_ _-====___ * _--^^^#####// \\\\#####^^^--_ * _-^##########// ( ) \\\\##########^-_ * -############// |\\^^/| \\\\############- * _/############// (@::@) \\\\############\\_ * /#############(( \\\\// ))#############\\ * -###############\\\\ (oo) //###############- * -#################\\\\ / VV \\ //#################- * -###################\\\\/ \\//###################- * _#/|##########/\\######( /\\ )######/\\##########|\\#_ * |/ |#/\\#/\\#/\\/ \\#/\\##\\ | | /##/\\#/ \\/\\#/\\#/\\#| \\| * ` |/ V V ` V \\#\\| | | |/#/ V &#x27; V V \\| &#x27; * ` ` ` ` / | | | | \\ &#x27; &#x27; &#x27; &#x27; * ( | | | | ) * __\\ | | | | /__ * (vvv(VVV)(VVV)vvv) * 神兽保佑 * 代码无BUG! *//** * * * __----~~~~~~~~~~~------___ * . . ~~//====...... __--~ ~~ * -. \\_|// |||\\\\ ~~~~~~::::... /~ * ___-==_ _-~o~ \\/ ||| \\\\ _/~~- * __---~~~.==~||\\=_ -_--~/_-~|- |\\\\ \\\\ _/~ * _-~~ .=~ | \\\\-_ &#x27;-~7 /- / || \\ / * .~ .~ | \\\\ -_ / /- / || \\ / * / ____ / | \\\\ ~-_/ /|- _/ .|| \\ / * |~~ ~~|--~~~~--_ \\ ~==-/ | \\~--===~~ .\\ * &#x27; ~-| /| |-~\\~~ __--~~ * |-~~-_/ | | ~\\_ _-~ /\\ * / \\ \\__ \\/~ \\__ * _--~ _/ | .-~~____--~-/ ~~==. * ((-&gt;/~ &#x27;.|||&#x27; -_| ~~-/ , . _|| * -_ ~\\ ~~---l__i__i__i--~~_/ * _-~-__ ~) \\--______________--~~ * //.-~~~-~_--~- |-------~~~~~~~~ * //.-~~~--\\ * 神兽保佑 * 代码无BUG! *//** _ * _._ _..._ .-&#x27;, _.._(`)) * &#x27;-. ` &#x27; /-._.-&#x27; &#x27;,/ * ) \\ &#x27;. * / _ _ | \\ * | a a / | * \\ .-. ; * &#x27;-(&#x27;&#x27; ).-&#x27; ,&#x27; ; * &#x27;-; | .&#x27; * \\ \\ / * | 7 .__ _.-\\ \\ * | | | ``/ /` / * /,_| | /,_/ / * /,_/ &#x27;`-&#x27; *//** ************************************************************** * * * .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-. * * | ______ | * * | .-&quot; &quot;-. | * * | / \\ | * * | _ | | _ | * * | ( \\ |, .-. .-. ,| / ) | * * | &gt; &quot;=._ | )(__/ \\__)( | _.=&quot; &lt; | * * | (_/&quot;=._&quot;=._ |/ /\\ \\| _.=&quot;_.=&quot;\\_) | * * | &quot;=._&quot;(_ ^^ _)&quot;_.=&quot; | * * | &quot;=\\__|IIIIII|__/=&quot; | * * | _.=&quot;| \\IIIIII/ |&quot;=._ | * * | _ _.=&quot;_.=&quot;\\ /&quot;=._&quot;=._ _ | * * | ( \\_.=&quot;_.=&quot; `--------` &quot;=._&quot;=._/ ) | * * | &gt; _.=&quot; &quot;=._ &lt; | * * | (_/ \\_) | * * | | * * &#x27;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=&#x27; * * * * LASCIATE OGNI SPERANZA, VOI CH&#x27;ENTRATE * ************************************************************** *//** * ,s555SB@@&amp; * :9H####@@@@@Xi * 1@@@@@@@@@@@@@@8 * ,8@@@@@@@@@B@@@@@@8 * :B@@@@X3hi8Bs;B@@@@@Ah, * ,8i r@@@B: 1S ,M@@@@@@#8; * 1AB35.i: X@@8 . SGhr ,A@@@@@@@@S * 1@h31MX8 18Hhh3i .i3r ,A@@@@@@@@@5 * ;@&amp;i,58r5 rGSS: :B@@@@@@@@@@A * 1#i . 9i hX. .: .5@@@@@@@@@@@1 * sG1, ,G53s. 9#Xi;hS5 3B@@@@@@@B1 * .h8h.,A@@@MXSs, #@H1: 3ssSSX@1 * s ,@@@@@@@@@@@@Xhi, r#@@X1s9M8 .GA981 * ,. rS8H#@@@@@@@@@@#HG51;. .h31i;9@r .8@@@@BS;i; * .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS * s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;, * :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B, * .hM@@@#@@#MX 51 r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8 * :3B@@@@@@@@@@@&amp;9@h :Gs .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@: * s&amp;HA#@@@@@@@@@@@@@@M89A;.8S. ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r * ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;. ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i * 5#@@#&amp;@@@@@@@@@@@@@@@@@@9 .39: ;@@@@@@@@@@@@@@@@@@@@@@@@@@@; * 9@@@X:MM@@@@@@@@@@@@@@@#; ;31. H@@@@@@@@@@@@@@@@@@@@@@@@@@: * SH#@B9.rM@@@@@@@@@@@@@B :. 3@@@@@@@@@@@@@@@@@@@@@@@@@@5 * ,:. 9@@@@@@@@@@@#HB5 .M@@@@@@@@@@@@@@@@@@@@@@@@@B * ,ssirhSM@&amp;1;i19911i,. s@@@@@@@@@@@@@@@@@@@@@@@@@@S * ,,,rHAri1h1rh&amp;@#353Sh: 8@@@@@@@@@@@@@@@@@@@@@@@@@#: * .A3hH@#5S553&amp;@@#h i:i9S #@@@@@@@@@@@@@@@@@@@@@@@@@A. * * * 又看源码，看你妹妹呀！ *//** *_______________#########_______________________ *______________############_____________________ *______________#############____________________ *_____________##__###########___________________ *____________###__######_#####__________________ *____________###_#######___####_________________ *___________###__##########_####________________ *__________####__###########_####_______________ *________#####___###########__#####_____________ *_______######___###_########___#####___________ *_______#####___###___########___######_________ *______######___###__###########___######_______ *_____######___####_##############__######______ *____#######__#####################_#######_____ *____#######__##############################____ *___#######__######_#################_#######___ *___#######__######_######_#########___######___ *___#######____##__######___######_____######___ *___#######________######____#####_____#####____ *____######________#####_____#####_____####_____ *_____#####________####______#####_____###______ *______#####______;###________###______#________ *________##_______####________####______________ *//** * ,%%%%%%%%, * ,%%/\\%%%%/\\%% * ,%%%\\c &quot;&quot; J/%%% * %. %%%%/ o o \\%%% * `%%. %%%% _ |%%% * `%% `%%%%(__Y__)%%&#x27; * // ;%%%%`\\-/%%%&#x27; * (( / `%%%%%%%&#x27; * \\\\ .&#x27; | * \\\\ / \\ | | * \\\\/ ) | | * \\ /_ | |__ * (___________))))))) 攻城湿 * * _ _ * __ _(_)_ _(_) __ _ _ __ * \\ \\ / / \\ \\ / / |/ _` |&#x27;_ \\ * \\ V /| |\\ V /| | (_| | | | | * \\_/ |_| \\_/ |_|\\__,_|_| |_| *//** * https://gold.xitu.io/ * １１１ １ * １１１ １１１１１１１１１１１１ １１１ * １１ １１１１１１１１１１１１ １１１１１ * １１ １１１ １１ １１１１１１１ * １１１１ １ １１１１１１１１１１１ １１１ １１１１ * １１１１１１ １１１１１１１１１１１ １１１１ １１１１１ * １１１１１１ １１ １１１１ １１１１１１ * １１ １１１１１１１１ １１ １１１１１１１１１１１１１１１１１１ * １１ １１１１１１１１１１１ １１１１１１１１１１１１１１１１１１１ * １１１１１１１１１ １１ １１ １１ １１ * １１１１１１１１１１１１１１１１１１ １１ * １１１１ １１１１１１１１１１１１ １１１１１１１１１１１１１１ * １１１１ １１ １１ １１１１１１１１１１１１１１ * １１ １１ １１ １１ １１１ １１ １１ １１１ * １１ １１ １１ １１ １１ １１１ １１ １１１ * １１ １１１ １１ １１ １１ １１１ １１ １１１ * １１１１ １１１ １１１１１１１１１ １１ １１１ １１ １１１１１１１ * １１１１１１ １１１１１１１１１１ １１１１１１１１１１１１１１１１１ * １１ １１１ １１１ １１１１１１１１１１１１１１１１１ *//** * https://www.zhihu.com| |/:::/__\\:::\\ \\:::\\____\\ * \\::/ \\:::\\ /:::/ /\\:::\\ /:::/ \\::/ /\\::/ |::::\\ /:::|____|\\:::\\ \\:::\\ \\::/ / * \\/____/ \\:::\\/:::/ / \\:::\\/:::/ / \\/____/ \\/____|:::::\\/:::/ / \\:::\\ \\:::\\ \\/____/ * \\::::::/ / \\::::::/ / |:::::::::/ / \\:::\\ \\:::\\ \\ * \\::::/ / \\::::/____/ |::|\\::::/ / \\:::\\ \\:::\\____\\ * /:::/ / \\:::\\ \\ |::| \\::/____/ \\:::\\ \\::/ / * /:::/ / \\:::\\ \\ |::| ~| \\:::\\ \\/____/ * /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ * /:::/ / \\:::\\____\\ \\::| | \\:::\\____\\ * \\::/ / \\::/ / \\:| | \\::/ / * \\/____/ \\/____/ \\|___| \\/____/ *//** * http://www.freebuf.com/ * _.._ ,------------. * ,&#x27; `. ( We want you! ) * / __) __` \\ `-,----------&#x27; * ( (`-`(-&#x27;) ) _.-&#x27; * /) \\ = / ( * /&#x27; |--&#x27; . \\ * ( ,---| `-.)__` * )( `-.,--&#x27; _`-. * &#x27;/,&#x27; ( Uu&quot;, * (_ , `/,-&#x27; ) * `.__, : `-&#x27;/ /`--&#x27; * | `--&#x27; | * ` `-._ / * \\ ( * /\\ . \\. freebuf * / |` \\ ,-\\ * / \\| .) / \\ * ( ,&#x27;|\\ ,&#x27; : * | \\,`.`--&quot;/ &#125; * `,&#x27; \\ |,&#x27; / * / &quot;-._ `-/ | * &quot;-. &quot;-.,&#x27;| ; * / _/[&quot;---&#x27;&quot;&quot;] * : / |&quot;- &#x27; * &#x27; | / * ` | *//** * https://campus.alibaba.com/ * `:::::::::::, * `::;:::::::;:::::::, ` * `::;;:::::::@@@@;:::::::` * ,:::::::::::::@ #@&#x27;:::::` * :::::::::::::::&#x27;@@ @;:::: * ::::::::::::&#x27;@@@@&#x27;``` .+:::` * ::::::::::;@@@#. ,:::, * .::::::::+@#@` :::: * :::::::+@@&#x27; :::: * `:::::&#x27;@@: `:::. * ,::::@@: ` :::: * ;::::::@ .:::; * :;:::::;@` ` :::; * :::::::::@` @ ;:::: * :::::::::#` @` ,:::: * :::::::::@` +@ @ .::::` * .::::::&#x27;@@` `@@&#x27; @ ::::, * :::::::++@@@@@@@@@@. ::::; * ;:::::::+, `..` ::::: * ,::::::::&#x27;, ::::: * :::::::::+, :::::` * :::::::::+@. ,::::.` `, * ::::::;;@+ .::;:: `; * :::::::@@ `:::;: `::`` * ::::::#@ ;:::: .::` * :::::;@ :::::` .;::` * :::::@ `:;::: `::::; * :::::# :::::. `,;::::: * :::::: ` ::::::,.,::::::::::. * ,::::::` .:: ::::::::::::::::;` * ;::::::::,````.,:::::, ::::::::::::::. * :::::::::::::::::: ` `::::::::::` * `::::::::::::, .:::. * `..` *//** * http://www.flvcd.com/ * .--, .--, * ( ( \\.---./ ) ) * &#x27;.__/o o\\__.&#x27; * &#123;= ^ =&#125; * &gt; - &lt; * / \\ * // \\\\ * //| . |\\\\ * &quot;&#x27;\\ /&#x27;&quot;_.-~^`&#x27;-. * \\ _ /--&#x27; ` * ___)( )(___ * (((__) (__))) 高山仰止,景行行止.虽不能至,心向往之。 *//** * 頂頂頂頂頂頂頂頂頂 頂頂頂頂頂頂頂頂頂 * 頂頂頂頂頂頂頂 頂頂 * 頂頂 頂頂頂頂頂頂頂頂頂頂頂 * 頂頂 頂頂頂頂頂頂頂頂頂頂頂 * 頂頂 頂頂 頂頂 * 頂頂 頂頂 頂頂頂 頂頂 * 頂頂 頂頂 頂頂頂 頂頂 * 頂頂 頂頂 頂頂頂 頂頂 * 頂頂 頂頂 頂頂頂 頂頂 * 頂頂 頂頂頂 * 頂頂 頂頂 頂頂 頂頂 * 頂頂頂頂 頂頂頂頂頂 頂頂頂頂頂 * 頂頂頂頂 頂頂頂頂 頂頂頂頂 *//** * ░░░░░░░░░░░░░░░░░░░░░░░░▄░░ * ░░░░░░░░░▐█░░░░░░░░░░░▄▀▒▌░ * ░░░░░░░░▐▀▒█░░░░░░░░▄▀▒▒▒▐ * ░░░░░░░▐▄▀▒▒▀▀▀▀▄▄▄▀▒▒▒▒▒▐ * ░░░░░▄▄▀▒░▒▒▒▒▒▒▒▒▒█▒▒▄█▒▐ * ░░░▄▀▒▒▒░░░▒▒▒░░░▒▒▒▀██▀▒▌ * ░░▐▒▒▒▄▄▒▒▒▒░░░▒▒▒▒▒▒▒▀▄▒▒ * ░░▌░░▌█▀▒▒▒▒▒▄▀█▄▒▒▒▒▒▒▒█▒▐ * ░▐░░░▒▒▒▒▒▒▒▒▌██▀▒▒░░░▒▒▒▀▄ * ░▌░▒▄██▄▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒ * ▀▒▀▐▄█▄█▌▄░▀▒▒░░░░░░░░░░▒▒▒ * 单身狗就这样默默地看着你，一句话也不说。 *//** * /88888888888888888888888888\\ * |88888888888888888888888888/ * |~~____~~~~~~~~~&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;| * / \\_________/&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\\ * / | \\ \\ * / | 88 88 \\ \\ * / | 88 88 \\ \\ * / / \\ | * / | ________ \\ | * \\ | \\______/ / | * /&quot;\\ \\ \\____________ / | * | |__________\\_ | | / / * /&quot;&quot;&quot;&quot;\\ \\_------&#x27; &#x27;-------/ -- * \\____/,___________\\ -------/ * ------* | \\ * || | \\ * || | ^ \\ * || | | \\ \\ * || | | \\ \\ * || | | \\ \\ * \\| / /&quot;&quot;&quot;\\/ / * ------------- | | / * |\\--_ \\____/___/ * | |\\-_ | * | | \\_ | * | | \\ | * | | \\_ | * | | ----___ | * | | \\----------| * / | | ----------&quot;&quot;\\ * /&quot;\\--&quot;--_| | | \\ * |_______/ \\______________/ ) * \\___/ *//** * d*##$. * zP&quot;&quot;&quot;&quot;&quot;$e. $&quot; $o * 4$ &#x27;$ $&quot; $ * &#x27;$ &#x27;$ J$ $F * &#x27;b $k $&gt; $ * $k $r J$ d$ * &#x27;$ $ $&quot; $~ * &#x27;$ &quot;$ &#x27;$E $ * $ $L $&quot; $F ... * $. 4B $ $$$*&quot;&quot;&quot;*b * &#x27;$ $. $$ $$ $F * &quot;$ R$ $F $&quot; $ * $k ?$ u* dF .$ * ^$. $$&quot; z$ u$$$$e * #$b $E.dW@e$&quot; ?$ * #$ .o$$# d$$$$c ?F * $ .d$$#&quot; . zo$&gt; #$r .uF * $L .u$*&quot; $&amp;$$$k .$$d$$F * $$&quot; &quot;&quot;^&quot;$$$P&quot;$P9$ * JP .o$$$$u:$P $$ * $ ..ue$&quot; &quot;&quot; $&quot; * d$ $F $ * $$ ....udE 4B * #$ &quot;&quot;&quot;&quot;` $r @$ * ^$L &#x27;$ $F * RN 4N $ * *$b d$ * $$k $F * $$b $F * $&quot;&quot; $F * &#x27;$ $ * $L $ * &#x27;$ $ * $ $ *//** * ,----------------, ,---------, * ,-----------------------, ,&quot; ,&quot;| * ,&quot; ,&quot;| ,&quot; ,&quot; | * +-----------------------+ | ,&quot; ,&quot; | * | .-----------------. | | +---------+ | * | | | | | | -==----&#x27;| | * | | I LOVE DOS! | | | | | | * | | Bad command or | | |/----|`---= | | * | | C:\\&gt;_ | | | ,/|==== ooo | ; * | | | | | // |(((( [33]| ,&quot; * | `-----------------&#x27; |,&quot; .;&#x27;| |(((( | ,&quot; * +-----------------------+ ;; | | |,&quot; * /_)______________(_/ //&#x27; | +---------+ * ___________________________/___ `, * / oooooooooooooooo .o. oooo /, \\,&quot;----------- * / ==ooooooooooooooo==.o. ooo= // ,`\\--&#123;)B ,&quot; * /_==__==========__==_ooo__ooo=_/&#x27; /___________,&quot; * *//** * .-~~~~~~~~~-._ _.-~~~~~~~~~-. * __.&#x27; ~. .~ `.__ * .&#x27;// \\./ \\\\`. * .&#x27;// | \\\\`. * .&#x27;// .-~&quot;&quot;&quot;&quot;&quot;&quot;&quot;~~~~-._ | _,-~~~~&quot;&quot;&quot;&quot;&quot;&quot;&quot;~-. \\\\`. * .&#x27;//.-&quot; `-. | .-&#x27; &quot;-.\\\\`. * .&#x27;//______.============-.. \\ | / ..-============.______\\\\`. * .&#x27;______________________________\\|/______________________________`. * *//** 无可奉告 一颗赛艇 * uJjYJYYLLv7r7vJJ5kqSFFFUUjJ7rrr7LLYLJLJ7 * JuJujuYLrvuEM@@@B@@@B@B@B@@@MG5Y7vLjYjJL * JYjYJvr7XM@BB8GOOE8ZEEO8GqM8OBBBMu77LLJ7 * LJLY7ru@@@BOZ8O8NXFFuSkSu25X0OFZ8MZJ;vLv * YvL7i5@BM8OGGqk22uvriiriii;r7LuSZXEMXrvr * vv7iU@BMNkF1uY7v7rr;iiii:i:i:ii7JEPNBPir * L7iL@BM8Xjuujvv77rr;ri;i;:iiiii:iLXFOBJ: * 7ri@B@MOFuUS2Y7L7777rii;:::::i:iirjPG@O: * 7:1B@BBOPjXXSJvrL7rr7iiii:i::::i;iv5MBB, * r:0@BBM8SFPX2Y77rri::iirri:::::iii75O@G. * 7:SB@BBGqXPk0122UJL::i::r:::i:i;i:v2@Bk. * ri:MB@BBEqEMGq2JLLL1u7.iX51u77LF27iSB@r, * ri,v@B@MB8@qqNEqN1u:5B8BOFE0S7ii7qMB@F:: * ii,J80Eq1MZkqPPX5YkPE@B@iXPE52j7:vBjE7:: * ii:7MSqkS0PvLv7rrii0@L.Z1iLr::ir:rO,vi:: * ii::EZXPSkquLvii:iF@N:.,BUi7ri,::UY;r::: * i::.2ONXqkPXS5FUUEOPP;..iSPXkjLYLLrr:::, * :::,iMXNP0NPLriiLGZ@BB1P87;JuL7r:7ri:::, * :::,.UGqNX0EZF2uUjUuULr:::,:7uuvv77::::. * ::::..5OXqXNJ50NSY;i:.,,,:i77Yvr;v;,,::. * :::,:.jOEPqPJiqBMMMO8NqP0SYLJriirv:.:,:. * ,:,,,.,Zq0P0X7vPFqF1ujLv7r:irrr7j7.,,::. * ,,,....0qk0080v75ujLLv7ri:i:rvj2J...,,,. * ......8@UXqZEMNvJjr;ii::,:::7uuv...,.,,. * .....B@BOvX88GMGk52vririiirJS1i.......,. * .JEMB@B@BMvL0MOMMMO8PE8GPqSk2L:......... * @B@@@B@M@B@L:7PGBOO8MOMOEP0Xri@B@Mk7,... * B@B@BBMBB@B@0::rJP8MO0uvvu7..,B@B@B@B@Z7 * MMBM@BBB@B@B@Br:i,..:Lur:....7@OMMBM@B@@ * 8OOMMMOMMMMBB@B:....,PZENNi..JBOZ8GMOOOO */ 1234/** * 这个公司没有年终奖的,兄弟别指望了,也别来了,我准备辞职了 * 另外这个项目有很多*Bug* 你坚持不了多久的,拜拜! */ 1234567891011121314151617181920212223242526272829303132333435363738394041/** * 1只羊 == one sheep * 2只羊 == two sheeps * 3只羊 == three sheeps * 4只羊 == four sheeps * 5只羊 == five sheeps * 6只羊 == six sheeps * 7只羊 == seven sheeps * 8只羊 == eight sheeps * 9只羊 == nine sheeps * 10只羊 == ten sheeps * 11只羊 == eleven sheeps * 12只羊 == twelve sheeps * 13只羊 == thirteen sheeps * 14只羊 == fourteen sheeps * 15只羊 == fifteen sheeps * 16只羊 == sixteen sheeps * 17只羊 == seventeen sheeps * 18只羊 == eighteen sheeps * 19只羊 == nineteen sheeps * 20只羊 == twenty sheeps * 21只羊 == twenty one sheeps * 22只羊 == twenty two sheeps * 23只羊 == twenty three sheeps * 24只羊 == twenty four sheeps * 25只羊 == twenty five sheeps * 26只羊 == twenty six sheeps * 27只羊 == twenty seven sheeps * 28只羊 == twenty eight sheeps * 29只羊 == twenty nine sheeps * 30只羊 == thirty sheeps * 现在瞌睡了吧，好了，不要再改下面的代码了，睡觉咯~~ *//** * You may think you know what the following code does. * But you dont. Trust me. * Fiddle with it, and youll spend many a sleepless * night cursing the moment you thought youd be clever * enough to &quot;optimize&quot; the code below. * Now close this file and go play with something else. */ 12345/** * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。 * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。 * 现在请关闭这个文件去玩点别的吧。 */ 1234/** * somedev1 - 6/7/02 Adding temporary tracking of Login screen * somedev2 - 5/22/07 Temporary my ass */ 1234/** * 一些修改1 - 2002/6/7 增加临时的跟踪登录界面 * 一些修改2 - 2007/5/22 我临时的犯傻 */ 1234567/** * 程序员1（于2010年6月7日）：在这个坑临时加入一些调料 * 程序员2（于2011年5月22日）：临你个屁啊 * 程序员3（于2012年7月23日）：楼上都是狗屎，鉴定完毕 * 程序员4（于2013年8月2日）：fuck 楼上，三年了，这坑还在！！！ * 程序员5（于2014年8月21日）：哈哈哈，这坑居然坑了这么多人，幸好我也不用填了，系统终止运行了，you&#x27;re died */ 12345678/** * For the brave souls who get this far: You are the chosen ones, * the valiant knights of programming who toil away, without rest, * fixing our most awful code. To you, true saviors, kings of men, * I say this: never gonna give you up, never gonna let you down, * never gonna run around and desert you. Never gonna make you cry, * never gonna say goodbye. Never gonna tell a lie and hurt you. */ 123456/** * 致终于来到这里的勇敢的人： * 你是被上帝选中的人，是英勇的、不敌辛苦的、不眠不休的来修改我们这最棘手的代码的编程骑士。 * 你，我们的救世主，人中之龙，我要对你说：永远不要放弃，永远不要对自己失望，永远不要逃走，辜负了自己， * 永远不要哭啼，永远不要说再见，永远不要说谎来伤害自己。 */ 12345678910/** * Dear maintainer: * * Once you are done trying to &#x27;optimize&#x27; this routine, * and have realized what a terrible mistake that was, * please increment the following counter as a warning * to the next guy: * * total_hours_wasted_here = 42 */ 12345678/** * 亲爱的维护者： * * 如果你尝试了对这段程序进行&#x27;优化&#x27; * 下面这个计数器的个数用来对后来人进行警告 * * 浪费在这里的总时间 = 42h */ 123456Exception up = new Exception(&quot;Something is really wrong.&quot;);throw up; //ha ha/** * When I wrote this, only God and I understood what I was doing * Now, God only knows */ 1234/*** 写这段代码的时候，只有上帝和我知道它是干嘛的* 现在，只有上帝知道*/ 1stop(); // Hammertime! 1// Autogenerated, do not edit. All changes will be undone. 12// sometimes I believe compiler ignores all my comments// 有时候我相信编译器忽略了我所有的注释 12345/** * I dedicate all this code, all my work, to my wife, Darlene, who will * have to support me and our three children and the dog once it gets * released into the public. */ 12// drunk, fix later// 有点晕了，以后再修改 12// Magic. Do not touch.// 麻鸡。勿动。 1#define TRUE FALSE// Happy debugging suckers 1// I&#x27;m sorry. 1return 1; # returns 1 123456/** * Always returns true. */public boolean isAvailable() &#123; return false;&#125; 12&lt;!-- Here be dragons --&gt;&lt;!-- 前方高能 --&gt; 12double penetration; // ouch// 自行了解，不方便解释 1/////////////////////////////////////// this is a well commented line 123456// To understand recursion, see the bottom of this fileAt the bottom of the file:// To understand recursion, see the top of this file// 想要明白递归须看文件末尾到了文末// 想要明白递归须看文件顶部 1/* Please work */ 12long long ago; /* in a galaxy far far away */// 很久很久以前 在一个遥远的银河中（出自星球大战） 1234// This code sucks, you know it and I know it. // Move on and call me an idiot later.// 你我都知道这代码很烂// 先不要骂我2B了，请先继续往下看 12// I am not sure why this works but it fixes the problem.// 虽然我不知道为什么这样管用，但它却是修复了问题 12// If this comment is removed the program will blow up// 如果删了此处注释程序就炸了 12// This function has been here since 1987. DON&#x27;T FXXKING TOUCH IT// 这函数1987年就这在了，别他娘动它 12// if i ever see this again i&#x27;m going to start bringing guns to work// 如果要是再让我看见这样的代码，也许我会带着一把枪来上班 1234// no comments for you// it was hard to write// so it should be hard to read// 难写的代码，肯定很难读。因此，我没有注释留给你。 12// I will give you two of my seventy-two virgins if you can fix this.// 要是你能修正这个问题的话，我会在我的七十二个处女中挑两个送你 123// I am not responsible of this code.// They made me write it, against my will.// 下面的代码，我不负责。因为是他们逼我写的，违背了我的意愿。 12/* You are not expected to understand this *//* 你绝不会明白的 */ 12// I have to find a better job// 看来我需要找份更好的工作了 123/** * 这个类是Object的子类 */ 1","raw":"---\ntitle: 代码注释\ndate: 2024-08-14 17:28:41\ntags: code\n---\n\n# 代码的神注释\n\n```java\n/**　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　\n *　　　　　　　　　瓦瓦　　　　　　　　　　　　十　　　　　　　　　　　　　\n *　　　　　　　　十齱龠己　　　　　　　　　亅瓦車己　　　　　　　　　　　　\n *　　　　　　　　乙龍龠毋日丶　　　　　　丶乙己毋毋丶　　　　　　　　　　　\n *　　　　　　　　十龠馬鬼車瓦　　　　　　己十瓦毋毋　　　　　　　　　　　　\n *　　　　　　　　　鬼馬龠馬龠十　　　　己己毋車毋瓦　　　　　　　　　　　　\n *　　　　　　　　　毋龠龠龍龠鬼乙丶丶乙車乙毋鬼車己　　　　　　　　　　　　\n *　　　　　　　　　乙龠龍龍鬼龍瓦　十瓦毋乙瓦龠瓦亅　　　　　　　　　　　　\n *　　　　　　　　　　馬齱龍馬鬼十丶日己己己毋車乙丶　　　　　　　　　　　　\n *　　　　　　　　　　己齱馬鬼車十十毋日乙己己乙乙　　　　　　　　　　　　　\n *　　　　　　　　　　　車馬齱齱日乙毋瓦己乙瓦日亅　　　　　　　　　　　　　\n *　　　　　　　　　　　亅車齺龖瓦乙車龖龍乙乙十　　　　　　　　　　　　　　\n *　　　　　　　　　　　　日龠龠十亅車龍毋十十　　　　　　　　　　　　　　　\n *　　　　　　　　　　　　日毋己亅　己己十亅亅　　　　　　　　　　　　　　　\n *　　　　　　　　　　　丶己十十乙　　丶丶丶丶丶　　　　　　　　　　　　　　\n *　　　　　　　　　　　亅己十龍龖瓦　　丶　丶　乙十　　　　　　　　　　　　\n *　　　　　　　　　　　亅己十龠龖毋　丶丶　　丶己鬼鬼瓦亅　　　　　　　　　\n *　　　　　　　　　　　十日十十日亅丶亅丶　丶十日毋鬼馬馬車乙　　　　　　　\n *　　　　　　　　　　　十日乙十亅亅亅丶　　十乙己毋鬼鬼鬼龍齺馬乙　　　　　\n *　　　　　　　　　　　丶瓦己乙十十亅丶亅乙乙乙己毋鬼鬼鬼龍齱齺齺鬼十　　　\n *　　　　　　　　　　　　乙乙十十十亅乙瓦瓦己日瓦毋鬼鬼龠齱齱龍龍齱齱毋丶　\n *　　　　　　　　　　　　亅十十十十乙瓦車毋瓦瓦日車馬龠龍龍龍龍龍龠龠龠馬亅\n *　　　　　　　　　　　　　十十十十己毋車瓦瓦瓦瓦鬼馬龠龍龠龠龍龠龠龠馬龠車\n *　　　　　　　　　　　　　　亅十十日毋瓦日日瓦鬼鬼鬼龠龠馬馬龠龍龍龠馬馬車\n *　　　　　　　　　　　　　　亅亅亅乙瓦瓦毋車車車馬龍龠鬼鬼馬龠龍龍龠馬馬鬼\n *　　　　　　　　　　　　丶丶乙亅亅乙車鬼鬼鬼毋車龍龍龠鬼馬馬龠龍齱齱龍馬鬼\n *　　　　　　　　　　　亅己十十己十日鬼鬼車瓦毋龠龍龠馬馬龠龠龠齱齺齺齱龠鬼\n *　　　　　　　　　　　　亅乙乙乙十車馬車毋馬齱齱龍龠龠龠馬龠龍齱龍龠龠鬼瓦\n *　　　　　　　　　　　　　　　　丶毋龠鬼車瓦車馬龠龍龠龠龍齱齱龠馬馬鬼毋日\n *　　　　　　　　　　　　　　　　十乙己日十　　丶己鬼龍齱齺齱龍馬馬馬車毋己\n *　　　　　　　　　　　　　　丶十己乙亅丶　　　　　　亅瓦馬龠龍龠龠馬毋瓦乙\n *　　　　　　　　　　　　　丶十十乙亅十　　　　　　　　亅己瓦車馬龠鬼車瓦乙\n *　　　　　　　　　　　　　丶十乙十十丶　　　　　　　　　丶丶亅十瓦鬼車瓦己\n *　　　　　　　　　　　　　　丶亅亅丶　　　　　　　　　　　　　　　亅日瓦日\n *　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　丶\n */\n就不卖关子了，图片转字符可以上这个传送门，白底的话会按空格补全，否则都为字符。\n\n前面的传送门貌似出了点问题，下面再补上个新的传送门，也是很好用的，可以选择质量。\n\n这不，下面的两只doge和一头滑稽就是产自于它，have fun，快去制作专属的字符注释吧。\n\n再补上一个好玩的网站Ascii World，由于这网站的图形太多了，我就不贴上来了。\n\n/**                                                                          \n *          .,:,,,                                        .::,,,::.          \n *        .::::,,;;,                                  .,;;:,,....:i:         \n *        :i,.::::,;i:.      ....,,:::::::::,....   .;i:,.  ......;i.        \n *        :;..:::;::::i;,,:::;:,,,,,,,,,,..,.,,:::iri:. .,:irsr:,.;i.        \n *        ;;..,::::;;;;ri,,,.                    ..,,:;s1s1ssrr;,.;r,        \n *        :;. ,::;ii;:,     . ...................     .;iirri;;;,,;i,        \n *        ,i. .;ri:.   ... ............................  .,,:;:,,,;i:        \n *        :s,.;r:... ....................................... .::;::s;        \n *        ,1r::. .............,,,.,,:,,........................,;iir;        \n *        ,s;...........     ..::.,;:,,.          ...............,;1s        \n *       :i,..,.              .,:,,::,.          .......... .......;1,       \n *      ir,....:rrssr;:,       ,,.,::.     .r5S9989398G95hr;. ....,.:s,      \n *     ;r,..,s9855513XHAG3i   .,,,,,,,.  ,S931,.,,.;s;s&BHHA8s.,..,..:r:     \n *    :r;..rGGh,  :SAG;;G@BS:.,,,,,,,,,.r83:      hHH1sXMBHHHM3..,,,,.ir.    \n *   ,si,.1GS,   sBMAAX&MBMB5,,,,,,:,,.:&8       3@HXHBMBHBBH#X,.,,,,,,rr    \n *   ;1:,,SH:   .A@&&B#&8H#BS,,,,,,,,,.,5XS,     3@MHABM&59M#As..,,,,:,is,   \n *  .rr,,,;9&1   hBHHBB&8AMGr,,,,,,,,,,,:h&&9s;   r9&BMHBHMB9:  . .,,,,;ri.  \n *  :1:....:5&XSi;r8BMBHHA9r:,......,,,,:ii19GG88899XHHH&GSr.      ...,:rs.  \n *  ;s.     .:sS8G8GG889hi.        ....,,:;:,.:irssrriii:,.        ...,,i1,  \n *  ;1,         ..,....,,isssi;,        .,,.                      ....,.i1,  \n *  ;h:               i9HHBMBBHAX9:         .                     ...,,,rs,  \n *  ,1i..            :A#MBBBBMHB##s                             ....,,,;si.  \n *  .r1,..        ,..;3BMBBBHBB#Bh.     ..                    ....,,,,,i1;   \n *   :h;..       .,..;,1XBMMMMBXs,.,, .. :: ,.               ....,,,,,,ss.   \n *    ih: ..    .;;;, ;;:s58A3i,..    ,. ,.:,,.             ...,,,,,:,s1,    \n *    .s1,....   .,;sh,  ,iSAXs;.    ,.  ,,.i85            ...,,,,,,:i1;     \n *     .rh: ...     rXG9XBBM#M#MHAX3hss13&&HHXr         .....,,,,,,,ih;      \n *      .s5: .....    i598X&&A&AAAAAA&XG851r:       ........,,,,:,,sh;       \n *      . ihr, ...  .         ..                    ........,,,,,;11:.       \n *         ,s1i. ...  ..,,,..,,,.,,.,,.,..       ........,,.,,.;s5i.         \n *          .:s1r,......................       ..............;shs,           \n *          . .:shr:.  ....                 ..............,ishs.             \n *              .,issr;,... ...........................,is1s;.               \n *                 .,is1si;:,....................,:;ir1sr;,                  \n *                    ..:isssssrrii;::::::;;iirsssssr;:..                    \n *                         .,::iiirsssssssssrri;;:.                      \n */                         \n\n\n/**\n *               ii.                                         ;9ABH,          \n *              SA391,                                    .r9GG35&G          \n *              &#ii13Gh;                               i3X31i;:,rB1         \n *              iMs,:,i5895,                         .5G91:,:;:s1:8A         \n *               33::::,,;5G5,                     ,58Si,,:::,sHX;iH1        \n *                Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG        \n *                .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8        \n *               :SB9s:,............................,,,.,,,SASh53h,1G.       \n *            .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX,       \n *          ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi       \n *        i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&5.:X1       \n *       59;.....,.     .,,,,,,,,,,,...        .............,..:1;.:&s       \n *      s8,..;53S5S3s.   .,,,,,,,.,..      i15S5h1:.........,,,..,,:99       \n *      93.:39s:rSGB@A;  ..,,,,.....    .SG3hhh9G&BGi..,,,,,,,,,,,,.,83      \n *      G5.G8  9#@@@@@X. .,,,,,,.....  iA9,.S&B###@@Mr...,,,,,,,,..,.;Xh     \n *      Gs.X8 S@@@@@@@B:..,,,,,,,,,,. rA1 ,A@@@@@@@@@H:........,,,,,,.iX:    \n *     ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@@M;    ....,,,,,,,,S8    \n *     X3    iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@@Hs       ...,,,,,,,:Gs   \n *    r8,        ,,,...,,,,,,,,,,.....  ,h8XABMMHX3r.          .,,,,,,,.rX:  \n *   :9, .    .:,..,:;;;::,.,,,,,..          .,,.               ..,,,,,,.59  \n *  .Si      ,:.i8HBMMMMMB&5,....                    .            .,,,,,.sMr\n *  SS       :: h@@@@@@@@@@#; .                     ...  .         ..,,,,iM5\n *  91  .    ;:.,1&@@@@@@MXs.                            .          .,,:,:&S\n *  hS ....  .:;,,,i3MMS1;..,..... .  .     ...                     ..,:,.99\n *  ,8; ..... .,:,..,8Ms:;,,,...                                     .,::.83\n *   s&: ....  .sS553B@@HX3s;,.    .,;13h.                            .:::&1\n *    SXr  .  ...;s3G99XA&X88Shss11155hi.                             ,;:h&,\n *     iH8:  . ..   ,;iiii;,::,,,,,.                                 .;irHA  \n *      ,8X5;   .     .......                                       ,;iihS8Gi\n *         1831,                                                 .,;irrrrrs&@\n *           ;5A8r.                                            .:;iiiiirrss1H\n *             :X@H3s.......                                .,:;iii;iiiiirsrh\n *              r#h:;,...,,.. .,,:;;;;;:::,...              .:;;;;;;iiiirrss1\n *             ,M8 ..,....,.....,,::::::,,...         .     .,;;;iiiiiirss11h\n *             8B;.,,,,,,,.,.....          .           ..   .:;;;;iirrsss111h\n *            i@5,:::,,,,,,,,.... .                   . .:::;;;;;irrrss111111\n *            9Bi,:,,,,......                        ..r91;;;;;iirrsss1ss1111\n */\n\n\n/**                                                                    \n *            .,,       .,:;;iiiiiiiii;;:,,.     .,,                   \n *          rGB##HS,.;iirrrrriiiiiiiiiirrrrri;,s&##MAS,                \n *         r5s;:r3AH5iiiii;;;;;;;;;;;;;;;;iiirXHGSsiih1,               \n *            .;i;;s91;;;;;;::::::::::::;;;;iS5;;;ii:                  \n *          :rsriii;;r::::::::::::::::::::::;;,;;iiirsi,               \n *       .,iri;;::::;;;;;;::,,,,,,,,,,,,,..,,;;;;;;;;iiri,,.           \n *    ,9BM&,            .,:;;:,,,,,,,,,,,hXA8:            ..,,,.       \n *   ,;&@@#r:;;;;;::::,,.   ,r,,,,,,,,,,iA@@@s,,:::;;;::,,.   .;.      \n *    :ih1iii;;;;;::::;;;;;;;:,,,,,,,,,,;i55r;;;;;;;;;iiirrrr,..       \n *   .ir;;iiiiiiiiii;;;;::::::,,,,,,,:::::,,:;;;iiiiiiiiiiiiri         \n *   iriiiiiiiiiiiiiiii;;;::::::::::::::::;;;iiiiiiiiiiiiiiiir;        \n *  ,riii;;;;;;;;;;;;;:::::::::::::::::::::::;;;;;;;;;;;;;;iiir.       \n *  iri;;;::::,,,,,,,,,,:::::::::::::::::::::::::,::,,::::;;iir:       \n * .rii;;::::,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,::::;;iri       \n * ,rii;;;::,,,,,,,,,,,,,:::::::::::,:::::,,,,,,,,,,,,,:::;;;iir.      \n * ,rii;;i::,,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,,::i;;iir.      \n * ,rii;;r::,,,,,,,,,,,,,:,:::::,:,:::::::,,,,,,,,,,,,,::;r;;iir.      \n * .rii;;rr,:,,,,,,,,,,,,,,:::::::::::::::,,,,,,,,,,,,,:,si;;iri       \n *  ;rii;:1i,,,,,,,,,,,,,,,,,,:::::::::,,,,,,,,,,,,,,,:,ss:;iir:       \n *  .rii;;;5r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sh:;;iri        \n *   ;rii;:;51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.:hh:;;iir,        \n *    irii;::hSr,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,sSs:;;iir:         \n *     irii;;:iSSs:.,,,,,,,,,,,,,,,,,,,,,,,,,,,..:135;:;;iir:          \n *      ;rii;;:,r535r:...,,,,,,,,,,,,,,,,,,..,;sS35i,;;iirr:           \n *       :rrii;;:,;1S3Shs;:,............,:is533Ss:,;;;iiri,            \n *        .;rrii;;;:,;rhS393S55hh11hh5S3393Shr:,:;;;iirr:              \n *          .;rriii;;;::,:;is1h555555h1si;:,::;;;iirri:.               \n *            .:irrrii;;;;;:::,,,,,,,,:::;;;;iiirrr;,                  \n *               .:irrrriiiiii;;;;;;;;iiiiiirrrr;,.                    \n *                  .,:;iirrrrrrrrrrrrrrrrri;:.                        \n *                        ..,:::;;;;:::,,.                             \n */                                                                     \n\n\n/**\n * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐\n * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐\n * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘\n * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐\n * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│& 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │\n * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤\n * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \\ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │\n * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │\n * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│\" '│ Enter  │               │ 4 │ 5 │ 6 │   │\n * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤\n * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │< ,│> .│? /│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │\n * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││\n * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│\n * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘\n */\n\n\n/**\n *                    _ooOoo_\n *                   o8888888o\n *                   88\" . \"88\n *                   (| -_- |)\n *                    O\\ = /O\n *                ____/`---'\\____\n *              .   ' \\\\| |// `.\n *               / \\\\||| : |||// \\\n *             / _||||| -:- |||||- \\\n *               | | \\\\\\ - /// | |\n *             | \\_| ''\\---/'' | |\n *              \\ .-\\__ `-` ___/-. /\n *           ___`. .' /--.--\\ `. . __\n *        .\"\" '< `.___\\_<|>_/___.' >'\"\".\n *       | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n *         \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n * ======`-.____`-.___\\_____/___.-`____.-'======\n *                    `=---='\n *\n * .............................................\n *          佛祖保佑             永无BUG\n */\n\n\n/**\n *  佛曰:\n *          写字楼里写字间，写字间里程序员；\n *          程序人员写程序，又拿程序换酒钱。\n *          酒醒只在网上坐，酒醉还来网下眠；\n *          酒醉酒醒日复日，网上网下年复年。\n *          但愿老死电脑间，不愿鞠躬老板前；\n *          奔驰宝马贵者趣，公交自行程序员。\n *          别人笑我忒疯癫，我笑自己命太贱；\n *          不见满街漂亮妹，哪个归得程序员？\n */\n\n\n/**\n * _ooOoo_\n * o8888888o\n * 88\" . \"88\n * (| -_- |)\n *  O\\ = /O\n * ___/`---'\\____\n * .   ' \\\\| |// `.\n * / \\\\||| : |||// \\\n * / _||||| -:- |||||- \\\n * | | \\\\\\ - /// | |\n * | \\_| ''\\---/'' | |\n * \\ .-\\__ `-` ___/-. /\n * ___`. .' /--.--\\ `. . __\n * .\"\" '< `.___\\_<|>_/___.' >'\"\".\n * | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n * \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n * ======`-.____`-.___\\_____/___.-`____.-'======\n * `=---='\n *          .............................................\n *           佛曰：bug泛滥，我已瘫痪！\n */\n\n\n/**\n *\n *   █████▒█    ██  ▄████▄   ██ ▄█▀       ██████╗ ██╗   ██╗ ██████╗\n * ▓██   ▒ ██  ▓██▒▒██▀ ▀█   ██▄█▒        ██╔══██╗██║   ██║██╔════╝\n * ▒████ ░▓██  ▒██░▒▓█    ▄ ▓███▄░        ██████╔╝██║   ██║██║  ███╗\n * ░▓█▒  ░▓▓█  ░██░▒▓▓▄ ▄██▒▓██ █▄        ██╔══██╗██║   ██║██║   ██║\n * ░▒█░   ▒▒█████▓ ▒ ▓███▀ ░▒██▒ █▄       ██████╔╝╚██████╔╝╚██████╔╝\n *  ▒ ░   ░▒▓▒ ▒ ▒ ░ ░▒ ▒  ░▒ ▒▒ ▓▒       ╚═════╝  ╚═════╝  ╚═════╝\n *  ░     ░░▒░ ░ ░   ░  ▒   ░ ░▒ ▒░\n *  ░ ░    ░░░ ░ ░ ░        ░ ░░ ░\n *           ░     ░ ░      ░  ░\n */\n\n\n/**\n *                    .::::.\n *                  .::::::::.\n *                 :::::::::::  FUCK YOU\n *             ..:::::::::::'\n *           '::::::::::::'\n *             .::::::::::\n *        '::::::::::::::..\n *             ..::::::::::::.\n *           ``::::::::::::::::\n *            ::::``:::::::::'        .:::.\n *           ::::'   ':::::'       .::::::::.\n *         .::::'      ::::     .:::::::'::::.\n *        .:::'       :::::  .:::::::::' ':::::.\n *       .::'        :::::.:::::::::'      ':::::.\n *      .::'         ::::::::::::::'         ``::::.\n *  ...:::           ::::::::::::'              ``::.\n * ```` ':.          ':::::::::'                  ::::..\n *                    '.:::::'                    ':'````..\n */\n\n\n/**\n *      ┌─┐       ┌─┐\n *   ┌──┘ ┴───────┘ ┴──┐\n *   │                 │\n *   │       ───       │\n *   │  ─┬┘       └┬─  │\n *   │                 │\n *   │       ─┴─       │\n *   │                 │\n *   └───┐         ┌───┘\n *       │         │\n *       │         │\n *       │         │\n *       │         └──────────────┐\n *       │                        │\n *       │                        ├─┐\n *       │                        ┌─┘\n *       │                        │\n *       └─┐  ┐  ┌───────┬──┐  ┌──┘\n *         │ ─┤ ─┤       │ ─┤ ─┤\n *         └──┴──┘       └──┴──┘\n *                神兽保佑\n *               代码无BUG!\n */\n\n\n/**\n *      ┌─┐       ┌─┐\n *   ┌──┘ ┴───────┘ ┴──┐\n *   │                 │\n *   │       ───       │\n *   │   >        <    │\n *   │                 │\n *   │   ...  ⌒  ...   │\n *   │                 │\n *   └───┐         ┌───┘\n *       │         │\n *       │         │\n *       │         │\n *       │         └──────────────┐\n *       │                        │\n *       │                        ├─┐\n *       │                        ┌─┘\n *       │                        │\n *       └─┐  ┐  ┌───────┬──┐  ┌──┘\n *         │ ─┤ ─┤       │ ─┤ ─┤\n *         └──┴──┘       └──┴──┘\n *                神兽保佑\n *               代码无BUG!\n */\n\n\n/**\n *      ┌─┐       ┌─┐ + +\n *   ┌──┘ ┴───────┘ ┴──┐++\n *   │                 │\n *   │       ───       │++ + + +\n *   ███████───███████ │+\n *   │                 │+\n *   │       ─┴─       │\n *   │                 │\n *   └───┐         ┌───┘\n *       │         │\n *       │         │   + +\n *       │         │\n *       │         └──────────────┐\n *       │                        │\n *       │                        ├─┐\n *       │                        ┌─┘\n *       │                        │\n *       └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +\n *         │ ─┤ ─┤       │ ─┤ ─┤\n *         └──┴──┘       └──┴──┘  + + + +\n *                神兽保佑\n *               代码无BUG!\n */\n\n\n/**\n *                  ___====-_  _-====___\n *            _--^^^#####//      \\\\#####^^^--_\n *         _-^##########// (    ) \\\\##########^-_\n *        -############//  |\\^^/|  \\\\############-\n *      _/############//   (@::@)   \\\\############\\_\n *     /#############((     \\\\//     ))#############\\\n *    -###############\\\\    (oo)    //###############-\n *   -#################\\\\  / VV \\  //#################-\n *  -###################\\\\/      \\//###################-\n * _#/|##########/\\######(   /\\   )######/\\##########|\\#_\n * |/ |#/\\#/\\#/\\/  \\#/\\##\\  |  |  /##/\\#/  \\/\\#/\\#/\\#| \\|\n * `  |/  V  V  `   V  \\#\\| |  | |/#/  V   '  V  V  \\|  '\n *    `   `  `      `   / | |  | | \\   '      '  '   '\n *                     (  | |  | |  )\n *                    __\\ | |  | | /__\n *                   (vvv(VVV)(VVV)vvv)                \n *                        神兽保佑\n *                       代码无BUG!\n */\n\n\n/**\n *\n *\n *                                                    __----~~~~~~~~~~~------___\n *                                   .  .   ~~//====......          __--~ ~~\n *                   -.            \\_|//     |||\\\\  ~~~~~~::::... /~\n *                ___-==_       _-~o~  \\/    |||  \\\\            _/~~-\n *        __---~~~.==~||\\=_    -_--~/_-~|-   |\\\\   \\\\        _/~\n *    _-~~     .=~    |  \\\\-_    '-~7  /-   /  ||    \\      /\n *  .~       .~       |   \\\\ -_    /  /-   /   ||      \\   /\n * /  ____  /         |     \\\\ ~-_/  /|- _/   .||       \\ /\n * |~~    ~~|--~~~~--_ \\     ~==-/   | \\~--===~~        .\\\n *          '         ~-|      /|    |-~\\~~       __--~~\n *                      |-~~-_/ |    |   ~\\_   _-~            /\\\n *                           /  \\     \\__   \\/~                \\__\n *                       _--~ _/ | .-~~____--~-/                  ~~==.\n *                      ((->/~   '.|||' -_|    ~~-/ ,              . _||\n *                                 -_     ~\\      ~~---l__i__i__i--~~_/\n *                                 _-~-__   ~)  \\--______________--~~\n *                               //.-~~~-~_--~- |-------~~~~~~~~\n *                                      //.-~~~--\\\n *                               神兽保佑\n *                              代码无BUG!\n */\n\n\n/**                              _\n *  _._ _..._ .-',     _.._(`))\n * '-. `     '  /-._.-'    ',/\n *    )         \\            '.\n *   / _    _    |             \\\n *  |  a    a    /              |\n *  \\   .-.                     ;\n *   '-('' ).-'       ,'       ;\n *      '-;           |      .'\n *         \\           \\    /\n *         | 7  .__  _.-\\   \\\n *         | |  |  ``/  /`  /\n *        /,_|  |   /,_/   /\n *           /,_/      '`-'\n */\n\n\n/**\n **************************************************************\n *                                                            *\n *   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *\n *    |                     ______                     |      *\n *    |                  .-\"      \"-.                  |      *\n *    |                 /            \\                 |      *\n *    |     _          |              |          _     |      *\n *    |    ( \\         |,  .-.  .-.  ,|         / )    |      *\n *    |     > \"=._     | )(__/  \\__)( |     _.=\" <     |      *\n *    |    (_/\"=._\"=._ |/     /\\     \\| _.=\"_.=\"\\_)    |      *\n *    |           \"=._\"(_     ^^     _)\"_.=\"           |      *\n *    |               \"=\\__|IIIIII|__/=\"               |      *\n *    |              _.=\"| \\IIIIII/ |\"=._              |      *\n *    |    _     _.=\"_.=\"\\          /\"=._\"=._     _    |      *\n *    |   ( \\_.=\"_.=\"     `--------`     \"=._\"=._/ )   |      *\n *    |    > _.=\"                            \"=._ <    |      *\n *    |   (_/                                    \\_)   |      *\n *    |                                                |      *\n *    '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='      *\n *                                                            *\n *           LASCIATE OGNI SPERANZA, VOI CH'ENTRATE           *\n **************************************************************\n */\n\n\n/**\n *                                         ,s555SB@@&                          \n *                                      :9H####@@@@@Xi                        \n *                                     1@@@@@@@@@@@@@@8                       \n *                                   ,8@@@@@@@@@B@@@@@@8                      \n *                                  :B@@@@X3hi8Bs;B@@@@@Ah,                   \n *             ,8i                  r@@@B:     1S ,M@@@@@@#8;                 \n *            1AB35.i:               X@@8 .   SGhr ,A@@@@@@@@S                \n *            1@h31MX8                18Hhh3i .i3r ,A@@@@@@@@@5               \n *            ;@&i,58r5                 rGSS:     :B@@@@@@@@@@A               \n *             1#i  . 9i                 hX.  .: .5@@@@@@@@@@@1               \n *              sG1,  ,G53s.              9#Xi;hS5 3B@@@@@@@B1                \n *               .h8h.,A@@@MXSs,           #@H1:    3ssSSX@1                  \n *               s ,@@@@@@@@@@@@Xhi,       r#@@X1s9M8    .GA981               \n *               ,. rS8H#@@@@@@@@@@#HG51;.  .h31i;9@r    .8@@@@BS;i;          \n *                .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS        \n *                s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&,      \n *              :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B,     \n *            .hM@@@#@@#MX 51  r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     \n *          :3B@@@@@@@@@@@&9@h :Gs   .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:    \n *      s&HA#@@@@@@@@@@@@@@M89A;.8S.       ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r    \n *   ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;.         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i    \n *  5#@@#&@@@@@@@@@@@@@@@@@@9  .39:          ;@@@@@@@@@@@@@@@@@@@@@@@@@@@;    \n *  9@@@X:MM@@@@@@@@@@@@@@@#;    ;31.         H@@@@@@@@@@@@@@@@@@@@@@@@@@:    \n *   SH#@B9.rM@@@@@@@@@@@@@B       :.         3@@@@@@@@@@@@@@@@@@@@@@@@@@5    \n *     ,:.   9@@@@@@@@@@@#HB5                 .M@@@@@@@@@@@@@@@@@@@@@@@@@B    \n *           ,ssirhSM@&1;i19911i,.             s@@@@@@@@@@@@@@@@@@@@@@@@@@S   \n *              ,,,rHAri1h1rh&@#353Sh:          8@@@@@@@@@@@@@@@@@@@@@@@@@#:  \n *            .A3hH@#5S553&@@#h   i:i9S          #@@@@@@@@@@@@@@@@@@@@@@@@@A.\n *\n *\n *    又看源码，看你妹妹呀！\n */\n\n\n/**\n *_______________#########_______________________\n *______________############_____________________\n *______________#############____________________\n *_____________##__###########___________________\n *____________###__######_#####__________________\n *____________###_#######___####_________________\n *___________###__##########_####________________\n *__________####__###########_####_______________\n *________#####___###########__#####_____________\n *_______######___###_########___#####___________\n *_______#####___###___########___######_________\n *______######___###__###########___######_______\n *_____######___####_##############__######______\n *____#######__#####################_#######_____\n *____#######__##############################____\n *___#######__######_#################_#######___\n *___#######__######_######_#########___######___\n *___#######____##__######___######_____######___\n *___#######________######____#####_____#####____\n *____######________#####_____#####_____####_____\n *_____#####________####______#####_____###______\n *______#####______;###________###______#________\n *________##_______####________####______________\n */\n\n\n/**\n *             ,%%%%%%%%,\n *           ,%%/\\%%%%/\\%%\n *          ,%%%\\c \"\" J/%%%\n * %.       %%%%/ o  o \\%%%\n * `%%.     %%%%    _  |%%%\n *  `%%     `%%%%(__Y__)%%'\n *  //       ;%%%%`\\-/%%%'\n * ((       /  `%%%%%%%'\n *  \\\\    .'          |\n *   \\\\  /       \\  | |\n *    \\\\/         ) | |\n *     \\         /_ | |__\n *     (___________))))))) 攻城湿\n *\n *        _       _\n * __   _(_)_   _(_) __ _ _ __\n * \\ \\ / / \\ \\ / / |/ _` |'_ \\\n *  \\ V /| |\\ V /| | (_| | | | |\n *   \\_/ |_| \\_/ |_|\\__,_|_| |_|\n */\n\n\n/**\n * https://gold.xitu.io/\n *　　　　１１１　　　　　　　　　　　　　　　　　　　　　　　　　１　　　　　　　　　　　\n *　　　　１１１　１１１１１１１１１１１１　　　　　　　　　　　１１１　　　　　　　　　　\n *　　　　１１　　１１１１１１１１１１１１　　　　　　　　　　１１１１１　　　　　　　　　\n *　　　　１１　　１１１　　　　　　　１１　　　　　　　　　１１１１１１１　　　　　　　　\n *　　１１１１　１　１１１１１１１１１１１　　　　　　　　　１１１　１１１１　　　　　　　\n *　　１１１１１１　１１１１１１１１１１１　　　　　　　１１１１　　　１１１１１　　　　　\n *　　１１１１１１　１１　　　　　　　　　　　　　　　１１１１　　　　　１１１１１１　　　\n *　　　　１１　　　１１１１１１１１　１１　　　　１１１１１１１１１１１１１１１１１１　　\n *　　　　１１　　　１１１１１１１１１１１　　　１１１１１１１１１１１１１１１１１１１　　\n *　　　　１１１１１１１１１　１１　　１１　　　　１１　　　　　　１１　　　　　　　　　　\n *　　１１１１１１１１１１１１１１１１１１　　　　　　　　　　　　１１　　　　　　　　　　\n *　　１１１１　　１１１１１１１１１１１１　　　　　　１１１１１１１１１１１１１１　　　　\n *　　１１１１　　１１　　　　１１　　　　　　　　　　１１１１１１１１１１１１１１　　　　\n *　　　　１１　　１１　１１　１１　　１１１　　　　　　１１　　　１１　　１１１　　　　　\n *　　　　１１　　１１　１１　１１　　１１　　　　　　　１１１　　１１　　１１１　　　　　\n *　　　　１１　１１１　１１　１１　　１１　　　　　　　　１１１　１１　１１１　　　　　　\n *　　１１１１　１１１　１１１１１１１１１　　　　　１１　１１１　１１　１１１１１１１　　\n *　　　１１１１１１　　１１１１１１１１１１　　　　１１１１１１１１１１１１１１１１１　　\n *　　　１１　１１１　　　　　　　　　１１１　　　　１１１１１１１１１１１１１１１１１　　\n */\n\n\n/**\n * https://www.zhihu.com/\n *           _____                    _____                    _____                    _____          \n *          /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\         \n *         /::\\____\\                /::\\    \\                /::\\    \\                /::\\    \\        \n *        /:::/    /                \\:::\\    \\              /::::\\    \\              /::::\\    \\       \n *       /:::/    /                  \\:::\\    \\            /::::::\\    \\            /::::::\\    \\      \n *      /:::/    /                    \\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\     \n *     /:::/____/                      \\:::\\    \\        /:::/__\\:::\\    \\        /:::/__\\:::\\    \\    \n *    /::::\\    \\                      /::::\\    \\      /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\   \n *   /::::::\\    \\   _____    ____    /::::::\\    \\    /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\  \n *  /:::/\\:::\\    \\ /\\    \\  /\\   \\  /:::/\\:::\\    \\  /:::/\\:::\\   \\:::\\____\\  /:::/\\:::\\   \\:::\\    \\\n * /:::/  \\:::\\    /::\\____\\/::\\   \\/:::/  \\:::\\____\\/:::/  \\:::\\   \\:::|    |/:::/__\\:::\\   \\:::\\____\\\n * \\::/    \\:::\\  /:::/    /\\:::\\  /:::/    \\::/    /\\::/   |::::\\  /:::|____|\\:::\\   \\:::\\   \\::/    /\n *  \\/____/ \\:::\\/:::/    /  \\:::\\/:::/    / \\/____/  \\/____|:::::\\/:::/    /  \\:::\\   \\:::\\   \\/____/\n *           \\::::::/    /    \\::::::/    /                 |:::::::::/    /    \\:::\\   \\:::\\    \\     \n *            \\::::/    /      \\::::/____/                  |::|\\::::/    /      \\:::\\   \\:::\\____\\    \n *            /:::/    /        \\:::\\    \\                  |::| \\::/____/        \\:::\\   \\::/    /    \n *           /:::/    /          \\:::\\    \\                 |::|  ~|               \\:::\\   \\/____/     \n *          /:::/    /            \\:::\\    \\                |::|   |                \\:::\\    \\         \n *         /:::/    /              \\:::\\____\\               \\::|   |                 \\:::\\____\\        \n *         \\::/    /                \\::/    /                \\:|   |                  \\::/    /        \n *          \\/____/                  \\/____/                  \\|___|                   \\/____/         \n */\n\n\n/**\n * http://www.freebuf.com/\n *           _.._        ,------------.\n *        ,'      `.    ( We want you! )\n *       /  __) __` \\    `-,----------'\n *      (  (`-`(-')  ) _.-'\n *      /)  \\  = /  (\n *     /'    |--' .  \\\n *    (  ,---|  `-.)__`\n *     )(  `-.,--'   _`-.\n *    '/,'          (  Uu\",\n *     (_       ,    `/,-' )\n *     `.__,  : `-'/  /`--'\n *       |     `--'  |\n *       `   `-._   /\n *        \\        (\n *        /\\ .      \\.  freebuf\n *       / |` \\     ,-\\\n *      /  \\| .)   /   \\\n *     ( ,'|\\    ,'     :\n *     | \\,`.`--\"/      }\n *     `,'    \\  |,'    /\n *    / \"-._   `-/      |\n *    \"-.   \"-.,'|     ;\n *   /        _/[\"---'\"\"]\n *  :        /  |\"-     '\n *  '           |      /\n *              `      |\n */\n\n\n/**\n * https://campus.alibaba.com/\n *                                 `:::::::::::,\n *                             `::;:::::::;:::::::,  `\n *                          `::;;:::::::@@@@;:::::::`\n *                        ,:::::::::::::@    #@':::::`\n *                      :::::::::::::::'@@      @;::::\n *                    ::::::::::::'@@@@'```      .+:::`\n *                  ::::::::::;@@@#.              ,:::,\n *                .::::::::+@#@`                   ::::\n *               :::::::+@@'                       ::::\n *             `:::::'@@:                         `:::.\n *            ,::::@@:  `                         ::::\n *           ;::::::@                            .:::;\n *          :;:::::;@`        `                  :::;\n *         :::::::::@`        @                 ;::::\n *        :::::::::#`          @`              ,::::\n *       :::::::::@`         +@ @             .::::`\n *      .::::::'@@`       `@@'  @             ::::,\n *      :::::::++@@@@@@@@@@.                 ::::;\n *     ;:::::::+,   `..`                    :::::\n *    ,::::::::',                          :::::\n *    :::::::::+,                         :::::`\n *   :::::::::+@.                        ,::::.`                     `,\n *   ::::::;;@+                         .::;::                     `;\n *  :::::::@@                          `:::;:                   `::``\n *  ::::::#@                           ;::::                  .::`\n *  :::::;@                           :::::`               .;::`\n *  :::::@                           `:;:::            `::::;\n *  :::::#                           :::::.        `,;:::::\n *  ::::::                    `      ::::::,.,::::::::::.\n *  ,::::::`              .::        ::::::::::::::::;`\n *   ;::::::::,````.,:::::,          ::::::::::::::.\n *    :::::::::::::::::: `           `::::::::::`\n *     `::::::::::::,                  .:::.\n *         `..`\n */\n\n\n/**\n * http://www.flvcd.com/\n *  .--,       .--,\n * ( (  \\.---./  ) )\n *  '.__/o   o\\__.'\n *     {=  ^  =}\n *      >  -  <\n *     /       \\\n *    //       \\\\\n *   //|   .   |\\\\\n *   \"'\\       /'\"_.-~^`'-.\n *      \\  _  /--'         `\n *    ___)( )(___\n *   (((__) (__)))    高山仰止,景行行止.虽不能至,心向往之。\n */\n\n\n/**\n * 頂頂頂頂頂頂頂頂頂　頂頂頂頂頂頂頂頂頂\n * 頂頂頂頂頂頂頂　　　　　頂頂　　　　　\n * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂\n * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂\n * 　　　頂頂　　　頂頂　　　　　　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　　　　　頂頂頂　\n * 　　　頂頂　　　　　　頂頂　頂頂　頂頂\n * 　頂頂頂頂　　　頂頂頂頂頂　頂頂頂頂頂\n * 　頂頂頂頂　　　頂頂頂頂　　　頂頂頂頂\n */\n\n\n/**\n * ░░░░░░░░░░░░░░░░░░░░░░░░▄░░\n * ░░░░░░░░░▐█░░░░░░░░░░░▄▀▒▌░\n * ░░░░░░░░▐▀▒█░░░░░░░░▄▀▒▒▒▐\n * ░░░░░░░▐▄▀▒▒▀▀▀▀▄▄▄▀▒▒▒▒▒▐\n * ░░░░░▄▄▀▒░▒▒▒▒▒▒▒▒▒█▒▒▄█▒▐\n * ░░░▄▀▒▒▒░░░▒▒▒░░░▒▒▒▀██▀▒▌\n * ░░▐▒▒▒▄▄▒▒▒▒░░░▒▒▒▒▒▒▒▀▄▒▒\n * ░░▌░░▌█▀▒▒▒▒▒▄▀█▄▒▒▒▒▒▒▒█▒▐\n * ░▐░░░▒▒▒▒▒▒▒▒▌██▀▒▒░░░▒▒▒▀▄\n * ░▌░▒▄██▄▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒\n * ▀▒▀▐▄█▄█▌▄░▀▒▒░░░░░░░░░░▒▒▒\n * 单身狗就这样默默地看着你，一句话也不说。\n */\n\n\n/**\n *                   /88888888888888888888888888\\\n *                   |88888888888888888888888888/\n *                    |~~____~~~~~~~~~\"\"\"\"\"\"\"\"\"|\n *                   / \\_________/\"\"\"\"\"\"\"\"\"\"\"\"\"\\\n *                  /  |              \\         \\\n *                 /   |  88    88     \\         \\\n *                /    |  88    88      \\         \\\n *               /    /                  \\        |\n *              /     |   ________        \\       |\n *              \\     |   \\______/        /       |\n *   /\"\\         \\     \\____________     /        |\n *   | |__________\\_        |  |        /        /\n * /\"\"\"\"\\           \\_------'  '-------/       --\n * \\____/,___________\\                 -------/\n * ------*            |                    \\\n *   ||               |                     \\\n *   ||               |                 ^    \\\n *   ||               |                | \\    \\\n *   ||               |                |  \\    \\\n *   ||               |                |   \\    \\\n *   \\|              /                /\"\"\"\\/    /\n *      -------------                |    |    /\n *      |\\--_                        \\____/___/\n *      |   |\\-_                       |\n *      |   |   \\_                     |\n *      |   |     \\                    |\n *      |   |      \\_                  |\n *      |   |        ----___           |\n *      |   |               \\----------|\n *      /   |                     |     ----------\"\"\\\n * /\"\\--\"--_|                     |               |  \\\n * |_______/                      \\______________/    )\n *                                               \\___/\n */\n\n\n/**\n *                        d*##$.\n *  zP\"\"\"\"\"$e.           $\"    $o\n * 4$       '$          $\"      $\n * '$        '$        J$       $F\n *  'b        $k       $>       $\n *   $k        $r     J$       d$\n *   '$         $     $\"       $~\n *    '$        \"$   '$E       $\n *     $         $L   $\"      $F ...\n *      $.       4B   $      $$$*\"\"\"*b\n *      '$        $.  $$     $$      $F\n *       \"$       R$  $F     $\"      $\n *        $k      ?$ u*     dF      .$\n *        ^$.      $$\"     z$      u$$$$e\n *         #$b             $E.dW@e$\"    ?$\n *          #$           .o$$# d$$$$c    ?F\n *           $      .d$$#\" . zo$>   #$r .uF\n *           $L .u$*\"      $&$$$k   .$$d$$F\n *            $$\"            \"\"^\"$$$P\"$P9$\n *           JP              .o$$$$u:$P $$\n *           $          ..ue$\"      \"\"  $\"\n *          d$          $F              $\n *          $$     ....udE             4B\n *           #$    \"\"\"\"` $r            @$\n *            ^$L        '$            $F\n *              RN        4N           $\n *               *$b                  d$\n *                $$k                 $F\n *                 $$b                $F\n *                  $\"\"               $F\n *                  '$                $\n *                   $L               $\n *                   '$               $\n *                    $               $\n */\n\n\n/**\n *              ,----------------,              ,---------,\n *         ,-----------------------,          ,\"        ,\"|\n *       ,\"                      ,\"|        ,\"        ,\"  |\n *      +-----------------------+  |      ,\"        ,\"    |\n *      |  .-----------------.  |  |     +---------+      |\n *      |  |                 |  |  |     | -==----'|      |\n *      |  |  I LOVE DOS!    |  |  |     |         |      |\n *      |  |  Bad command or |  |  |/----|`---=    |      |\n *      |  |  C:\\>_          |  |  |   ,/|==== ooo |      ;\n *      |  |                 |  |  |  // |(((( [33]|    ,\"\n *      |  `-----------------'  |,\" .;'| |((((     |  ,\"\n *      +-----------------------+  ;;  | |         |,\"\n *         /_)______________(_/  //'   | +---------+\n *    ___________________________/___  `,\n *   /  oooooooooooooooo  .o.  oooo /,   \\,\"-----------\n *  / ==ooooooooooooooo==.o.  ooo= //   ,`\\--{)B     ,\"\n * /_==__==========__==_ooo__ooo=_/'   /___________,\"\n *\n */\n\n\n/**\n *                 .-~~~~~~~~~-._       _.-~~~~~~~~~-.\n *             __.'              ~.   .~              `.__\n *           .'//                  \\./                  \\\\`.\n *         .'//                     |                     \\\\`.\n *       .'// .-~\"\"\"\"\"\"\"~~~~-._     |     _,-~~~~\"\"\"\"\"\"\"~-. \\\\`.\n *     .'//.-\"                 `-.  |  .-'                 \"-.\\\\`.\n *   .'//______.============-..   \\ | /   ..-============.______\\\\`.\n * .'______________________________\\|/______________________________`.\n *\n */\n\n\n/**             无可奉告 一颗赛艇\n *  uJjYJYYLLv7r7vJJ5kqSFFFUUjJ7rrr7LLYLJLJ7\n *  JuJujuYLrvuEM@@@B@@@B@B@B@@@MG5Y7vLjYjJL\n *  JYjYJvr7XM@BB8GOOE8ZEEO8GqM8OBBBMu77LLJ7\n *  LJLY7ru@@@BOZ8O8NXFFuSkSu25X0OFZ8MZJ;vLv\n *  YvL7i5@BM8OGGqk22uvriiriii;r7LuSZXEMXrvr\n *  vv7iU@BMNkF1uY7v7rr;iiii:i:i:ii7JEPNBPir\n *  L7iL@BM8Xjuujvv77rr;ri;i;:iiiii:iLXFOBJ:\n *  7ri@B@MOFuUS2Y7L7777rii;:::::i:iirjPG@O:\n *  7:1B@BBOPjXXSJvrL7rr7iiii:i::::i;iv5MBB,\n *  r:0@BBM8SFPX2Y77rri::iirri:::::iii75O@G.\n *  7:SB@BBGqXPk0122UJL::i::r:::i:i;i:v2@Bk.\n *  ri:MB@BBEqEMGq2JLLL1u7.iX51u77LF27iSB@r,\n *  ri,v@B@MB8@qqNEqN1u:5B8BOFE0S7ii7qMB@F::\n *  ii,J80Eq1MZkqPPX5YkPE@B@iXPE52j7:vBjE7::\n *  ii:7MSqkS0PvLv7rrii0@L.Z1iLr::ir:rO,vi::\n *  ii::EZXPSkquLvii:iF@N:.,BUi7ri,::UY;r:::\n *  i::.2ONXqkPXS5FUUEOPP;..iSPXkjLYLLrr:::,\n *  :::,iMXNP0NPLriiLGZ@BB1P87;JuL7r:7ri:::,\n *  :::,.UGqNX0EZF2uUjUuULr:::,:7uuvv77::::.\n *  ::::..5OXqXNJ50NSY;i:.,,,:i77Yvr;v;,,::.\n *  :::,:.jOEPqPJiqBMMMO8NqP0SYLJriirv:.:,:.\n *  ,:,,,.,Zq0P0X7vPFqF1ujLv7r:irrr7j7.,,::.\n *  ,,,....0qk0080v75ujLLv7ri:i:rvj2J...,,,.\n *  ......8@UXqZEMNvJjr;ii::,:::7uuv...,.,,.\n *  .....B@BOvX88GMGk52vririiirJS1i.......,.\n *  .JEMB@B@BMvL0MOMMMO8PE8GPqSk2L:.........\n *  @B@@@B@M@B@L:7PGBOO8MOMOEP0Xri@B@Mk7,...\n *  B@B@BBMBB@B@0::rJP8MO0uvvu7..,B@B@B@B@Z7\n *  MMBM@BBB@B@B@Br:i,..:Lur:....7@OMMBM@B@@\n *  8OOMMMOMMMMBB@B:....,PZENNi..JBOZ8GMOOOO\n */\n\n```\n\n\n\n```java\n/**\n * 这个公司没有年终奖的,兄弟别指望了,也别来了,我准备辞职了\n * 另外这个项目有很多*Bug* 你坚持不了多久的,拜拜!\n */\n```\n\n```java\n/**\n * 1只羊 == one sheep\n * 2只羊 == two sheeps\n * 3只羊 == three sheeps\n * 4只羊 == four sheeps\n * 5只羊 == five sheeps\n * 6只羊 == six sheeps\n * 7只羊 == seven sheeps\n * 8只羊 == eight sheeps\n * 9只羊 == nine sheeps\n * 10只羊 == ten sheeps\n * 11只羊 == eleven sheeps\n * 12只羊 == twelve sheeps\n * 13只羊 == thirteen sheeps\n * 14只羊 == fourteen sheeps\n * 15只羊 == fifteen sheeps\n * 16只羊 == sixteen sheeps\n * 17只羊 == seventeen sheeps\n * 18只羊 == eighteen sheeps\n * 19只羊 == nineteen sheeps\n * 20只羊 == twenty sheeps\n * 21只羊 == twenty one sheeps\n * 22只羊 == twenty two sheeps\n * 23只羊 == twenty three sheeps\n * 24只羊 == twenty four sheeps\n * 25只羊 == twenty five sheeps\n * 26只羊 == twenty six sheeps\n * 27只羊 == twenty seven sheeps\n * 28只羊 == twenty eight sheeps\n * 29只羊 == twenty nine sheeps\n * 30只羊 == thirty sheeps\n * 现在瞌睡了吧，好了，不要再改下面的代码了，睡觉咯~~\n */\n/**\n * You may think you know what the following code does.\n * But you dont. Trust me.\n * Fiddle with it, and youll spend many a sleepless\n * night cursing the moment you thought youd be clever\n * enough to \"optimize\" the code below.\n * Now close this file and go play with something else.\n */\n```\n\n```java\n/**\n * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。\n * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。\n * 现在请关闭这个文件去玩点别的吧。\n */\n```\n\n```java\n/**\n * somedev1 -  6/7/02 Adding temporary tracking of Login screen\n * somedev2 -  5/22/07 Temporary my ass\n */\n```\n\n```java\n/**\n * 一些修改1 - 2002/6/7 增加临时的跟踪登录界面\n * 一些修改2 - 2007/5/22 我临时的犯傻\n */\n```\n\n```java\n/**\n * 程序员1（于2010年6月7日）：在这个坑临时加入一些调料\n * 程序员2（于2011年5月22日）：临你个屁啊\n * 程序员3（于2012年7月23日）：楼上都是狗屎，鉴定完毕\n * 程序员4（于2013年8月2日）：fuck 楼上，三年了，这坑还在！！！\n * 程序员5（于2014年8月21日）：哈哈哈，这坑居然坑了这么多人，幸好我也不用填了，系统终止运行了，you're died\n */\n```\n\n```java\n/**\n * For the brave souls who get this far: You are the chosen ones,\n * the valiant knights of programming who toil away, without rest,\n * fixing our most awful code. To you, true saviors, kings of men,\n * I say this: never gonna give you up, never gonna let you down,\n * never gonna run around and desert you. Never gonna make you cry,\n * never gonna say goodbye. Never gonna tell a lie and hurt you.\n */\n```\n\n```java\n/**\n * 致终于来到这里的勇敢的人：\n * 你是被上帝选中的人，是英勇的、不敌辛苦的、不眠不休的来修改我们这最棘手的代码的编程骑士。\n * 你，我们的救世主，人中之龙，我要对你说：永远不要放弃，永远不要对自己失望，永远不要逃走，辜负了自己，\n * 永远不要哭啼，永远不要说再见，永远不要说谎来伤害自己。\n */\n```\n\n```java\n/**\n * Dear maintainer:\n *\n * Once you are done trying to 'optimize' this routine,\n * and have realized what a terrible mistake that was,\n * please increment the following counter as a warning\n * to the next guy:\n *\n * total_hours_wasted_here = 42\n */\n```\n\n```java\n/**\n * 亲爱的维护者：\n *\n * 如果你尝试了对这段程序进行'优化'\n * 下面这个计数器的个数用来对后来人进行警告\n *\n * 浪费在这里的总时间 = 42h\n */\n```\n\n```java\nException up = new Exception(\"Something is really wrong.\");\nthrow up;  //ha ha\n/**\n * When I wrote this, only God and I understood what I was doing\n * Now, God only knows\n */\n```\n\n```java\n/**\n* 写这段代码的时候，只有上帝和我知道它是干嘛的\n* 现在，只有上帝知道\n*/\n```\n\n```java\nstop(); // Hammertime!\n```\n\n```java\n// Autogenerated, do not edit. All changes will be undone.\n```\n\n```java\n// sometimes I believe compiler ignores all my comments\n// 有时候我相信编译器忽略了我所有的注释\n```\n\n```java\n/**\n * I dedicate all this code, all my work, to my wife, Darlene, who will\n * have to support me and our three children and the dog once it gets\n * released into the public.\n */\n```\n\n```java\n// drunk, fix later\n// 有点晕了，以后再修改\n```\n\n```java\n// Magic. Do not touch.\n// 麻鸡。勿动。\n```\n\n```java\n#define TRUE FALSE// Happy debugging suckers\n```\n\n```java\n// I'm sorry.\n```\n\n```java\nreturn 1; # returns 1\n```\n\n```java\n/**\n * Always returns true.\n */\npublic boolean isAvailable() {\n    return false;\n}\n```\n\n```html\n<!-- Here be dragons -->\n<!-- 前方高能 -->\n```\n\n```java\ndouble penetration; // ouch\n// 自行了解，不方便解释\n```\n\n```java\n/////////////////////////////////////// this is a well commented line\n```\n\n```java\n// To understand recursion, see the bottom of this file\nAt the bottom of the file:\n// To understand recursion, see the top of this file\n// 想要明白递归须看文件末尾\n到了文末\n// 想要明白递归须看文件顶部\n```\n\n```java\n/* Please work */\n```\n\n```java\nlong long ago; /* in a galaxy far far away */\n// 很久很久以前 在一个遥远的银河中（出自星球大战）\n```\n\n```java\n// This code sucks, you know it and I know it.  \n// Move on and call me an idiot later.\n// 你我都知道这代码很烂\n// 先不要骂我2B了，请先继续往下看\n```\n\n```java\n// I am not sure why this works but it fixes the problem.\n// 虽然我不知道为什么这样管用，但它却是修复了问题\n```\n\n```java\n// If this comment is removed the program will blow up\n// 如果删了此处注释程序就炸了\n```\n\n```java\n// This function has been here since 1987. DON'T FXXKING TOUCH IT\n// 这函数1987年就这在了，别他娘动它\n```\n\n```java\n// if i ever see this again i'm going to start bringing guns to work\n// 如果要是再让我看见这样的代码，也许我会带着一把枪来上班\n```\n\n```java\n// no comments for you\n// it was hard to write\n// so it should be hard to read\n// 难写的代码，肯定很难读。因此，我没有注释留给你。\n```\n\n```java\n// I will give you two of my seventy-two virgins if you can fix this.\n// 要是你能修正这个问题的话，我会在我的七十二个处女中挑两个送你\n```\n\n```java\n// I am not responsible of this code.\n// They made me write it, against my will.\n// 下面的代码，我不负责。因为是他们逼我写的，违背了我的意愿。\n```\n\n```java\n/* You are not expected to understand this */\n/* 你绝不会明白的 */\n```\n\n```java\n// I have to find a better job\n// 看来我需要找份更好的工作了\n```\n\n```java\n/**\n * 这个类是Object的子类\n */\n```\n\n```\n```\n","comments":true,"categories":[],"tags":[{"name":"code","slug":"code","permalink":"http://jinmajue.site/tags/code/"}]},{"title":"test gist embed","date":"2024-08-14T06:59:17.000Z","path":"2024/08/14/test-gist-embed/","text":"TestGist","raw":"---\ntitle: test gist embed\ndate: 2024-08-14 14:59:17\ntags: gist\n---\n\n### TestGist\n\n<script src=\"https://gist.github.com/vestjin/0bb38efbb06cfc962f2b7b25087a05e4.js\"></script>\n\n","comments":true,"categories":[],"tags":[{"name":"gist","slug":"gist","permalink":"http://jinmajue.site/tags/gist/"}]},{"title":"how to ask","date":"2024-08-14T05:46:52.000Z","path":"2024/08/14/how-to-ask/","text":"提问的智慧 How To Ask Questions The Smart Way Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen 本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。 原文网址：http://www.catb.org/~esr&#x2F;faqs&#x2F;smart-questions.html Copyleft 2001 by D.H.Grand(nOBODY&#x2F;Ginux), 2010 by Gasolin, 2015 by Ryan Wu 本中文指南是基于原文 3.10 版以及 2010 年由 Gasolin 所翻译版本的最新翻译； 协助指出翻译问题，请发 issue，或直接发 pull request 给我。 本文另有繁體中文版。 原文版本历史目录 声明 简介 在提问之前 当你提问时 慎选提问的论坛 Stack Overflow 网站和 IRC 论坛 第二步，使用项目邮件列表 使用有意义且描述明确的标题 使问题容易回复 使用清晰、正确、精准且合乎语法的语句 使用易于读取且标准的文件格式发送问题 精确地描述问题并言之有物 话不在多而在精 别动辄声称找到 Bug 低声下气不能代替你的功课 描述问题症状而非你的猜测 按发生时间先后列出问题症状 描述目标而不是过程 别要求使用私人电邮回复 清楚明确地表达你的问题以及需求 询问有关代码的问题时 别把自己家庭作业的问题贴上来 去掉无意义的提问句 即使你很急也不要在标题写紧急 礼多人不怪，而且有时还很有帮助 问题解决后，加个简短的补充说明 如何解读答案 RTFM 和 STFW：如何知道你已完全搞砸了 如果还是搞不懂 处理无礼的回应 如何避免扮演失败者 不该问的问题 好问题与蠢问题 如果得不到回答 如何更好地回答问题 相关资源 鸣谢 声明许多项目在他们网站的帮助文档中链接了本指南。这很好，这正是我们想要的用途。但如果你是该项目管理员并试图创建指向本指南的超链接，请在超链接附近的显著位置注明： 本指南不提供此项目的实际支持服务！ 我们已经深刻领教到缺少上述声明所带来的痛苦：我们将不停地被那些认为发布这本指南就意味着有责任解决世上所有技术问题的傻瓜苦苦纠缠。 如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些傻瓜之一。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件或硬件问题的人处取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。 简介在黑客的世界里，你所提技术问题的解答的好坏, 很大程度上取决于你提问的方式与此问题的难度。本指南将教你如何正确地提问以获得你满意的答案。 现在开源（Open Source）软件已经相当盛行，您通常可以从其他更有经验的用户那里获得与黑客一样好的答案，这是件好事；和黑客相比，用户们往往对那些新手常遇到的问题更宽容一些。尽管如此，以我们在此推荐的方式对待这些有经验的用户通常也是从他们那里获得有用答案的最有效方式。 首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。 尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。 我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 失败者（loser） （由于历史原因，我们有时把它拼作 lusers）。 我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们认可这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们只为那些真正有兴趣并愿意积极参与问题解决的人调整回答问题的风格。这点不会变，也不该变：否则，我们就是在最擅长的事情上降低效率。 我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情地滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效地利用时间来回答赢家（winner）的问题。 如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。 所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。 如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。 （欢迎对本指南提出改进意见。你可以把你的建议发送至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。然而请注意，本文并非网络礼节的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。 在提问之前在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情： 尝试在你准备提问的论坛的旧文章中搜索答案。 尝试上网搜索以找到答案。 尝试阅读手册以找到答案。 尝试阅读常见问题文件（FAQ）以找到答案。 尝试自己检查或试验以找到答案。 向你身边的强者朋友打听以找到答案。 如果你是程序开发者，请尝试阅读源代码以找到答案。 当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。 运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 Google 论坛和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 我在 Google 中搜过下列句子但没有找到什么有用的东西 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。 别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐得舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。 准备好你的问题，再将问题仔细地思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。 小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着蠢问题…，一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。 绝不要自以为够格得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去挣到一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动地从他人处索取知识。 另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。谁能给点提示？、我的这个例子里缺了什么？以及我应该检查什么地方比请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。 当你提问时慎选提问的论坛小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者： 在与主题不合的论坛上贴出你的问题。 在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。 在太多的不同新闻群组上重复转贴同样的问题（cross-post）。 向既非熟人也没有义务解决你问题的人发送私人电邮。 黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。 因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括阅读 FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。 向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。 在选择论坛、新闻群组或邮件列表时，别太相信它的名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。 别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。 搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。 一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。 可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者由于涌入其私人邮箱的大量不堪忍受的无用邮件而不再提供支持。 Stack Overflow搜索，然后在 Stack Exchange 问。 近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。 因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的几率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。 如果你还是找不到任何对你的问题有用的内容，请把你的问题发在与它最相关的网站上。提问的时候请善用格式化工具，尤其注意为代码添加格式，并且添加相关的标签（特别是编程语言、操作系统或库&#x2F;包的名称）。当有人要求你提供更多相关信息时，请编辑你的贴子来补充它们[译注：而不是发一个回帖或回答！]。如果你觉得一个答案对你有帮助，点击向上的箭头来为它投票；如果一个答案提供了问题的正确解决方案，点击投票按钮下方的对勾来将它标记为正解。 Stack Exchange 已经成长到超过一百个网站，以下是最常用的几个站： Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。 Stack Overflow 是问写程序有关的问题。 Server Fault 是问服务器和网管相关的问题。 网站和 IRC 论坛本地的用户群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表），这些都是开始提问的好地方，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。 事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复“使用我们的版本”。 在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。 通过论坛或 IRC 频道来提供用户支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。 在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。 第二步，使用项目邮件列表当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法： 任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，那这也不能成为骚扰个别开发者的理由。 向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。 大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其他人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。 如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。 如果一个项目既有“用户”也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。 然而，如果你确信你的问题很特别，而且在“用户”列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意） 如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。 使用有意义且描述明确的标题在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的帮帮忙、跪求、急（更别说救命啊！！！！这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。 一个好标题范例是目标 —— 差异式的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在差异部分则描述与期望的行为不一致的地方。 蠢问题：救命啊！我的笔记本电脑不能正常显示了！ 聪明问题：X.org 6.8.1 的鼠标指针会变形，某牌显卡 MV1005 芯片组。 更聪明问题：X.org 6.8.1 的鼠标指针，在某牌显卡 MV1005 芯片组环境下 - 会变形。 编写目标 —— 差异 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标指针或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境和你遇到的问题。 总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。 如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 Re: 测试 或者 Re: 新 bug 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。 对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许用户按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。 仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。 在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你只想在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。 使问题容易回复以请将你的回复发送到……来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，换个好点的；如果是操作系统不支持这种邮件程序，也换个好点的。 在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如追踪此讨论串、有回复时发送邮件提醒等功能。 使用清晰、正确、精准且合乎语法的语句我们从经验中发现，粗心的提问者通常也会粗心地写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。 正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它必须很准确，而且有迹象表明你是在思考和关注问题。 正确地拼写、使用标点和大小写，不要将its混淆为it&#39;s，loose搞成lose或者将discrete弄成discreet。不要全部用大写，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。Alan Cox 也许可以这样做，但你不行）。 更白话的说，如果你写得像是个半文盲[译注：小白]，那多半得不到理睬。也不要使用即时通信中的简写或火星文，如将的简化为d会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。 如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂的语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。 如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：[译注：以下附上原文以供使用] English is not my native language; please excuse typing errors. 英文不是我的母语，请原谅我的错字或语法。 If you speak $LANGUAGE, please email&#x2F;PM me;I may need assistance translating my question. 如果你说某语言，请向我发电邮&#x2F;私信； 我需要有人协助我翻译我的问题。 I am familiar with the technical terms,but some slang expressions and idioms are difficult for me. 我对技术名词很熟悉，但对于俗语或是特别用法不甚了解。 I’ve posted my question in $LANGUAGE and English.I’ll be glad to translate responses, if you only use one or the other. 我把我的问题用某语言和英文写出来。 如果你只用其中的一种语言回答，我会乐意将回复翻译成为你使用的语言。 使用易于读取且标准的文件格式发送问题如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以： 使用纯文字而不是 HTML (关闭 HTML 并不难）。 使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。 不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。 但是，对一些特殊的文件不要设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。 在英语论坛中，不要使用Quoted-Printable MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的=20符号既难看也分散注意力，甚至有可能破坏内容的语意。 绝对，永远不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。 如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的智能引号功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉智能引号单选框），以免在你的邮件中到处散布垃圾字符。 在论坛，勿滥用表情符号和HTML功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。 如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的查看源代码命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。 精确地描述问题并言之有物 仔细、清楚地描述你的问题或 Bug 的症状。 描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：Fedora Core 4、Slackware 9.1等）。 描述在提问前你是怎样去研究和理解这个问题的。 描述在提问前为确定问题而采取的诊断步骤。 描述最近做过什么可能相关的硬件或软件变更。 尽可能地提供一个可以重现这个问题的可控环境的方法。 尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能提出的问题回答一遍。 以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。 Simon Tatham 写过一篇名为《如何有效地报告Bug》的出色文章。强力推荐你也读一读。 话不在多而在精你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。 这样做的用处至少有三点。第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；第二，简化问题使你更有可能得到有用的答案；第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。 别动辄声称找到 Bug当你在使用软件中遇到问题，除非你非常、非常的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的Bug，你应该能提供相应位置的修正或替代文件。 请记得，还有其他许多用户没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前已经做了这些，是吧？）。这也意味着很有可能是你弄错了而不是软件本身有问题。 编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有Bug时，这尤其严重。 提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是你做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。 低声下气不能代替你的功课有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：我知道我只是个可悲的新手，一个失败者，但...。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。 别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。 有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。 描述问题症状而非你的猜测告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。 蠢问题 我在编译内核时接连遇到 SIG11 错误，我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？ 聪明问题 我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6&#x2F;233 CPU（威盛 Apollo VP2 芯片组），256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。所有内存都换过了，没有效果。相关部分的标准编译记录如下… 由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：所有的诊断专家都来自密苏里州。 美国国务院的官方座右铭则是：让我看看（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方地展示给我们看吧！ 按发生时间先后列出问题症状问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。 如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，多不等于好。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。 如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。 描述目标而不是过程如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。 经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。 蠢问题 我怎样才能从某绘图程序的颜色选择器中取得十六进制的 RGB 值？ 聪明问题 我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），但却无法从某绘图程序的颜色选择器取得十六进制的 RGB 值。 第二种提问法比较聪明，你可能得到像是建议采用另一个更合适的工具的回复。 别要求使用私人电邮回复黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。 当你要求私下回复时，这个过程和奖励都被中止。别这样做，让回复者来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于不可能使其他人产生兴趣。 这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是向我发电邮，我将为论坛归纳这些回复。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。 清楚明确地表达你的问题以及需求漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。 如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。 要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。 所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你获得有用的答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问我想更好地理解 X，可否指点一下哪有好一点说明？通常比问你能解释一下 X 吗？更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。 询问有关代码的问题时如果没有提示别人应该从何入手，别要求他人帮你调试有问题的代码。张贴几百行的代码，然后说一声：它不能工作会让你完全被忽略。只贴几十行代码，然后说一句：在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;比较有可能让你得到回应。 最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能刚好展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译&#x2F;直译&#x2F;被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看话不在多而在精一节）。 一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做是一个好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。 如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。 别把自己家庭作业的问题贴上来黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。 如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户群组，论坛或（最后一招）在项目的用户邮件列表或论坛中提问。尽管黑客们会看出来，但一些有经验的用户也许仍会给你一些提示。 去掉无意义的提问句避免用无意义的话结束提问，例如有人能帮我吗？或者这有答案吗？。 首先：如果你对问题的描述不是很好，这样问更是画蛇添足。 其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：没错，有人能帮你或者不，没答案。 一般来说，避免用 是或否、对或错、有或没有类型的问句，除非你想得到是或否类型的回答。 即使你很急也不要在标题写紧急这是你的问题，不是我们的。宣称紧急极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，紧急这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。 有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。 当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如紧急：帮我救救这个毛茸茸的小海豹！肯定让你被黑客忽略或惹恼他们，即使他们认为毛茸茸的小海豹很重要。 如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。 礼多人不怪，而且有时还很有帮助彬彬有礼，多用请和谢谢您的关注，或谢谢你的关照。让大家都知道你对他们花时间免费提供帮助心存感激。 坦白说，这一点并没有比使用清晰、正确、精准且合乎语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的） 然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。 （我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得先谢了意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说先谢了，然后事后再对回复者表示感谢，或者换种方式表达感激，譬如用谢谢你的关注或谢谢你的关照。） 问题解决后，加个简短的补充说明问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。 最理想的方式是向最初提问的话题回复此消息，并在标题中包含已修正，已解决或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串问题 X和问题 X - 已解决的潜在回复者就明白不用再浪费时间了（除非他个人觉得问题 X有趣），因此可以利用此时间去解决其它问题。 补充说明不必很长或是很深入；简单的一句你好，原来是网线出了问题！谢谢大家 – Bill比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。 对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此之后才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。 除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表&#x2F;新闻群组&#x2F;论坛中搜索到真正解决你问题的方案，让他们也从中受益。 至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。 思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。 在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。 如何解读答案 RTFM 和 STFW：如何知道你已完全搞砸了有一个古老而神圣的传统：如果你收到RTFM（Read The Fucking Manual）的回应，回答者认为你应该去读他妈的手册。当然，基本上他是对的，你应该去读一读。 RTFM 有一个年轻的亲戚。如果你收到STFW（Search The Fucking Web）的回应，回答者认为你应该到他妈的网上搜索。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 **Google 是你的朋友**！） 在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。 通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为： 你需要的信息非常容易获得； 你自己去搜索这些信息比灌给你，能让你学到更多。 你不应该因此不爽；依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见。你应该对他祖母般的慈祥表示感谢。 如果还是搞不懂如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。 比方说，如果我回答你：看来似乎是 zentry 卡住了；你应该先清除它。，然后，这是一个很糟的后续问题回应：zentry 是什么？ 好的问法应该是这样：哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？ 处理无礼的回应很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直截了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。 如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这没有发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而你将被视为有错的一方，这将伤害到你获取信息或帮助的机会。 另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。 （有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会正常交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们喜欢我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。） Jeff Bigler 的观察总结和这个相关也值得一读 (tact filters)。 在下一节，我们会谈到另一个问题，当你行为不当时所会受到的冒犯。 如何避免扮演失败者在黑客社区的论坛中，你以本指南所描述的或类似的方式，可能会有那么几次搞砸了。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。 这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被言语攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、不去关马桶盖等等。相反地，你该这么做： 熬过去，这很正常。事实上，它是有益健康且合理的。 社区的标准不会自行维持，它们是通过参与者积极而公开地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。 也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称如果你不想帮助用户就闭嘴。 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。 夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。 记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。 有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是真的会把问题搞砸。 这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。 也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。 不该问的问题以下是几个经典蠢问题，以及黑客没回答时心中所想的： 问题：我能在哪找到 X 程序或 X 资源？ 问题：我怎样用 X 做 Y？ 问题：如何设定我的 shell 提示？ 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？ 问题：我的程序&#x2F;设定&#x2F;SQL 语句没有用 问题：我的 Windows 电脑有问题，你能帮我吗？ 问题：我的程序不会动了，我认为系统工具 X 有问题 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？ 问题：我怎么才能破解 root 帐号&#x2F;窃取 OP 特权&#x2F;读别人的邮件呢？ 问题：我能在哪找到 X 程序或 X 资源？ 回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 Google 吗？ 问题：我怎样用 X 做 Y？ 回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。 问题：如何设定我的 shell 提示？？ 回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 RTFM，然后自己去找出来。 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？ 回答：试试看就知道了。如果你试过，你就知道了答案，就不用浪费我的时间了。 问题：我的{程序&#x2F;设定&#x2F;SQL 语句}没有用 回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种 你还有什么要补充的吗？ 真糟糕，希望你能搞定。 这关我屁事？ 问题：我的 Windows 电脑有问题，你能帮我吗？ 回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。 注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你可以问与 Windows 相关的问题，只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。 问题：我的程序不会动了，我认为系统工具 X 有问题 回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？ 回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在这儿找到用户群组的清单）。 注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地用户群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 Linux 和所有被怀疑的硬件作关键词仔细搜索。 问题：我怎么才能破解 root 帐号&#x2F;窃取 OP 特权&#x2F;读别人的邮件呢？ 回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！ 好问题与蠢问题最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。 蠢问题： 我可以在哪儿找到关于 Foonly Flurbamatic 的资料？ 这种问法无非想得到 STFW 这样的回答。 聪明问题： 我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？ 这个问题已经 STFW 过了，看起来他真的遇到了麻烦。 蠢问题： 我从 foo 项目找来的源码没法编译。它怎么这么烂？ 他觉得都是别人的错，这个傲慢自大的提问者。 聪明问题： foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？ 提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。 蠢问题： 我的主机板有问题了，谁来帮我？ 某黑客对这类问题的回答通常是：好的，还要帮你拍拍背和换尿布吗？，然后按下删除键。 聪明问题： 我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？ 这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。 在最后一个问题中，注意告诉我答案和给我启示，指出我还应该做什么诊断工作之间微妙而又重要的区别。 事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。 通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。 事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候，一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的名人，而是因为我用了正确的方式来提问。 黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我像个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。 如果得不到回答如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。 总的来说，简单地重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。 你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。 有许多网上的以及本地的用户群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。 另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。 对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名用户。根本不可能由一个人来处理来自上万名用户的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。 如何更好地回答问题态度和善一点。 问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。 对初犯者私下回复。 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。 如果你不确定，一定要说出来！ 一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。 如果帮不了忙，也别妨碍他。 不要在实际步骤上开玩笑，那样也许会毁了提问者的设置 —— 有些可怜的呆瓜会把它当成真的指令。 试探性的反问以引出更多的细节。 如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。 尽管对那些懒虫抱怨一声 RTFM 是正当的，但能给出文档的链接（即使只是建议个 Google 搜索关键词）会更好。 如果你决定回答，就请给出好的答案。 当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。 正面地回答问题！ 如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 试试看 A 或是 B 或者 试试 X 、 Y 、 Z 、 A 、 B 、 C 并附上一个链接一点用都没有。 帮助你的社区从问题中学习。 当回复一个好问题时，问问自己如何修改相关文件或常见问题文件以免再次解答同样的问题？，接着再向文件维护者发一份补丁。 如果你在研究一番后才作出了回答，展现你的技巧而不是直接端出结果。毕竟授人以鱼不如授人以渔。 相关资源如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 Unix 系统和网络基本原理。 当你发布软件或补丁时，试着按软件发布实践操作。 鸣谢Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。","raw":"---\ntitle: how to ask\ndate: 2024-08-14 13:46:52\ntags:\n---\n\n# 提问的智慧\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls)\n\n**How To Ask Questions The Smart Way**\n\nCopyright © 2001,2006,2014 Eric S. Raymond, Rick Moen\n\n本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。\n\n原文网址：[http://www.catb.org/~esr/faqs/smart-questions.html](http://www.catb.org/~esr/faqs/smart-questions.html)\n\nCopyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu\n\n本中文指南是基于原文 3.10 版以及 2010 年由 [Gasolin](https://github.com/gasolin) 所翻译版本的最新翻译；\n\n协助指出翻译问题，**请[发 issue](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/issues/new)，或直接[发 pull request](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/compare) 给我。**\n\n本文另有[繁體中文版](README.md)。\n\n## [原文版本历史](history.md)\n\n## 目录\n  * [声明](#声明)\n  * [简介](#简介)\n  * [在提问之前](#在提问之前)\n  * [当你提问时](#当你提问时)\n    * [慎选提问的论坛](#慎选提问的论坛)\n    * [Stack Overflow](#stack-overflow)\n    * [网站和 IRC 论坛](#网站和-irc-论坛)\n    * [第二步，使用项目邮件列表](#第二步使用项目邮件列表)\n    * [使用有意义且描述明确的标题](#使用有意义且描述明确的标题)\n    * [使问题容易回复](#使问题容易回复)\n    * [使用清晰、正确、精准且合乎语法的语句](#使用清晰、正确、精准且合乎语法的语句)\n    * [使用易于读取且标准的文件格式发送问题](#使用易于读取且标准的文件格式发送问题)\n    * [精确地描述问题并言之有物](#精确地描述问题并言之有物)\n    * [话不在多而在精](#话不在多而在精)\n    * [别动辄声称找到 Bug](#别动辄声称找到-bug)\n    * [低声下气不能代替你的功课](#低声下气不能代替你的功课)\n    * [描述问题症状而非你的猜测](#描述问题症状而非你的猜测)\n    * [按发生时间先后列出问题症状](#按发生时间先后列出问题症状)\n    * [描述目标而不是过程](#描述目标而不是过程)\n    * [别要求使用私人电邮回复](#别要求使用私人电邮回复)\n    * [清楚明确地表达你的问题以及需求](#清楚明确地表达你的问题以及需求)\n    * [询问有关代码的问题时](#询问有关代码的问题时)\n    * [别把自己家庭作业的问题贴上来](#别把自己家庭作业的问题贴上来)\n    * [去掉无意义的提问句](#去掉无意义的提问句)\n    * [即使你很急也不要在标题写```紧急```](#即使你很急也不要在标题写紧急)\n    * [礼多人不怪，而且有时还很有帮助](#礼多人不怪而且有时还很有帮助)\n    * [问题解决后，加个简短的补充说明](#问题解决后加个简短的补充说明)\n  * [如何解读答案](#如何解读答案)\n    * [RTFM 和 STFW：如何知道你已完全搞砸了](#rtfm-和-stfw如何知道你已完全搞砸了)\n    * [如果还是搞不懂](#如果还是搞不懂)\n    * [处理无礼的回应](#处理无礼的回应)\n  * [如何避免扮演失败者](#如何避免扮演失败者)\n  * [不该问的问题](#不该问的问题)\n  * [好问题与蠢问题](#好问题与蠢问题)\n  * [如果得不到回答](#如果得不到回答)\n  * [如何更好地回答问题](#如何更好地回答问题)\n  * [相关资源](#相关资源)\n  * [鸣谢](#鸣谢)\n\n## 声明\n\n许多项目在他们网站的帮助文档中链接了本指南。这很好，这正是我们想要的用途。但如果你是该项目管理员并试图创建指向本指南的超链接，请在超链接附近的显著位置注明：\n\n**本指南不提供此项目的实际支持服务！**\n\n我们已经深刻领教到缺少上述声明所带来的痛苦：我们将不停地被那些认为发布这本指南就意味着有责任解决世上所有技术问题的傻瓜苦苦纠缠。\n\n如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些傻瓜之一。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件或硬件问题的人处取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。\n\n## 简介\n\n在[黑客](http://www.catb.org/~esr/faqs/hacker-howto.html)的世界里，你所提技术问题的解答的好坏, 很大程度上取决于你提问的方式与此问题的难度。本指南将教你如何正确地提问以获得你满意的答案。\n\n现在开源（Open Source）软件已经相当盛行，您通常可以从其他更有经验的用户那里获得与黑客一样好的答案，这是件**好事**；和黑客相比，用户们往往对那些新手常遇到的问题更宽容一些。尽管如此，以我们在此推荐的方式对待这些有经验的用户通常也是从他们那里获得有用答案的最有效方式。\n\n首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。\n\n尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。\n\n我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 `失败者（loser）` （由于历史原因，我们有时把它拼作 `lusers`）。\n\n我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们认可这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们只为那些真正有兴趣并愿意积极参与问题解决的人调整回答问题的风格。这点不会变，也不该变：否则，我们就是在最擅长的事情上降低效率。\n\n我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情地滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效地利用时间来回答`赢家（winner）`的问题。\n\n如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。\n\n所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。\n\n如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。\n\n（欢迎对本指南提出改进意见。你可以把你的建议发送至 [esr@thyrsus.com](esr@thyrsus.com) 或 [respond-auto@linuxmafia.com](respond-auto@linuxmafia.com)。然而请注意，本文并非[网络礼节](http://www.ietf.org/rfc/rfc1855.txt)的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。\n\n## 在提问之前\n\n在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：\n\n  1. 尝试在你准备提问的论坛的旧文章中搜索答案。\n  2. 尝试上网搜索以找到答案。\n  3. 尝试阅读手册以找到答案。\n  4. 尝试阅读常见问题文件（FAQ）以找到答案。\n  5. 尝试自己检查或试验以找到答案。\n  6. 向你身边的强者朋友打听以找到答案。\n  7. 如果你是程序开发者，请尝试阅读源代码以找到答案。\n\n当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所**学到**的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。\n\n运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 [Google 论坛](http://groups.google.com/)和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 `我在 Google 中搜过下列句子但没有找到什么有用的东西` 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。\n\n别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐得舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。\n\n准备好你的问题，再将问题仔细地思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。\n\n小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着`蠢问题…`，一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。\n\n绝不要自以为**够格**得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去**挣到**一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动地从他人处索取知识。\n\n另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。`谁能给点提示？`、`我的这个例子里缺了什么？`以及`我应该检查什么地方`比`请把我需要的确切的过程贴出来`更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。\n\n## 当你提问时\n\n### 慎选提问的论坛\n\n小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：\n\n* 在与主题不合的论坛上贴出你的问题。\n* 在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。\n* 在太多的不同新闻群组上重复转贴同样的问题（cross-post）。\n* 向既非熟人也没有义务解决你问题的人发送私人电邮。\n\n黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。\n\n因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括**阅读** FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。\n\n向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。\n\n在选择论坛、新闻群组或邮件列表时，别太相信它的名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。\n\n别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。\n\n搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。\n\n一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。\n\n可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者由于涌入其私人邮箱的大量不堪忍受的无用邮件而不再提供支持。\n\n### Stack Overflow\n\n搜索，*然后*在 Stack Exchange 问。\n\n近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。\n\n因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的几率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。\n\n如果你还是找不到任何对你的问题有用的内容，请把你的问题发在与它最相关的网站上。提问的时候请善用格式化工具，尤其注意为代码添加格式，并且添加相关的标签（特别是编程语言、操作系统或库/包的名称）。当有人要求你提供更多相关信息时，请编辑你的贴子来补充它们[译注：而不是发一个回帖或回答！]。如果你觉得一个答案对你有帮助，点击向上的箭头来为它投票；如果一个答案提供了问题的正确解决方案，点击投票按钮下方的对勾来将它标记为正解。\n\nStack Exchange 已经成长到[超过一百个网站](https://stackexchange.com/sites)，以下是最常用的几个站：\n\n* Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。\n* Stack Overflow 是问写程序有关的问题。\n* Server Fault 是问服务器和网管相关的问题。\n\n### 网站和 IRC 论坛\n\n本地的用户群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表），这些都是开始提问的好地方，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。\n\n事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复“使用**我们的**版本”。\n\n在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。\n\n通过论坛或 IRC 频道来提供用户支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。\n\n在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。\n\n### 第二步，使用项目邮件列表\n\n当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：\n\n  * 任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，那这也不能成为骚扰个别开发者的理由。\n  * 向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。\n  * 大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其他人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。\n  * 如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。\n\n如果一个项目既有“用户”也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。\n\n然而，如果你**确信**你的问题很特别，而且在“用户”列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）\n\n如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。\n\n### 使用有意义且描述明确的标题\n\n在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的`帮帮忙`、`跪求`、`急`（更别说`救命啊！！！！`这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。\n\n一个好标题范例是`目标 —— 差异`式的描述，许多技术支持组织就是这样做的。在`目标`部分指出是哪一个或哪一组东西有问题，在`差异`部分则描述与期望的行为不一致的地方。\n\n\n> 蠢问题：救命啊！我的笔记本电脑不能正常显示了！\n\n> 聪明问题：X.org 6.8.1 的鼠标指针会变形，某牌显卡 MV1005 芯片组。\n\n> 更聪明问题：X.org 6.8.1 的鼠标指针，在某牌显卡 MV1005 芯片组环境下 - 会变形。\n\n编写`目标 —— 差异` 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标指针或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境**和**你遇到的问题。\n\n总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。\n\n如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 `Re: 测试` 或者 `Re: 新 bug` 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。\n\n对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许用户按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。\n\n仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。\n\n在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你**只想**在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。\n\n### 使问题容易回复\n\n以`请将你的回复发送到……`来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，[换个好点的](http://linuxmafia.com/faq/Mail/muas.html)；如果是操作系统不支持这种邮件程序，也换个好点的。\n\n在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如`追踪此讨论串`、`有回复时发送邮件提醒`等功能。\n\n### <a name=\"使用清晰、正确、精准且合乎语法的语句\">使用清晰、正确、精准且合乎语法的语句</a>\n\n我们从经验中发现，粗心的提问者通常也会粗心地写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。\n\n正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它**必须很**准确，而且有迹象表明你是在思考和关注问题。\n\n正确地拼写、使用标点和大小写，不要将`its`混淆为`it's`，`loose`搞成`lose`或者将`discrete`弄成`discreet`。不要**全部用大写**，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。[Alan Cox](http://en.wikipedia.org/wiki/Alan_Cox) 也许可以这样做，但你不行）。\n\n更白话的说，如果你写得像是个半文盲[译注：[小白](http://zh.wikipedia.org/wiki/小白)]，那多半得不到理睬。也不要使用即时通信中的简写或[火星文](http://zh.wikipedia.org/wiki/火星文)，如将`的`简化为`d`会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。\n\n如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂的语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。\n\n如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：\n[译注：以下附上原文以供使用]\n\n> English is not my native language; please excuse typing errors.\n\n* 英文不是我的母语，请原谅我的错字或语法。\n\n\n> If you speak $LANGUAGE, please email/PM me;\n> I may need assistance translating my question.\n\n* 如果你说**某语言**，请向我发电邮/私信；\n* 我需要有人协助我翻译我的问题。\n\n\n> I am familiar with the technical terms,\n> but some slang expressions and idioms are difficult for me.\n\n* 我对技术名词很熟悉，但对于俗语或是特别用法不甚了解。\n\n\n> I've posted my question in $LANGUAGE and English.\n> I'll be glad to translate responses, if you only use one or the other.\n\n* 我把我的问题用**某语言**和英文写出来。\n* 如果你只用其中的一种语言回答，我会乐意将回复翻译成为你使用的语言。\n\n### 使用易于读取且标准的文件格式发送问题\n\n如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：\n\n* 使用纯文字而不是 HTML ([关闭 HTML](http://archive.birdhouse.org/etc/evilmail.html) 并不难）。\n* 使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。\n* 不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。\n* 但是，对一些特殊的文件**不要**设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。\n* 在英语论坛中，不要使用`Quoted-Printable` MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的`=20`符号既难看也分散注意力，甚至有可能破坏内容的语意。\n* 绝对，**永远**不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。\n* 如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的`智能引号`功能 （从[选项] > [校订] > [自动校正选项]，勾选掉`智能引号`单选框），以免在你的邮件中到处散布垃圾字符。\n* 在论坛，勿滥用`表情符号`和`HTML`功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。\n\n如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的`查看源代码`命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。\n\n### 精确地描述问题并言之有物\n\n* 仔细、清楚地描述你的问题或 Bug 的症状。\n* 描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：`Fedora Core 4`、`Slackware 9.1`等）。\n* 描述在提问前你是怎样去研究和理解这个问题的。\n* 描述在提问前为确定问题而采取的诊断步骤。\n* 描述最近做过什么可能相关的硬件或软件变更。\n* 尽可能地提供一个可以`重现这个问题的可控环境`的方法。\n\n尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能提出的问题回答一遍。\n\n以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。\n\n[Simon Tatham](http://www.chiark.greenend.org.uk/~sgtatham/) 写过一篇名为《[如何有效地报告Bug](http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html)》的出色文章。强力推荐你也读一读。\n\n### 话不在多而在精\n\n你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。\n\n这样做的用处至少有三点。\n第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；\n第二，简化问题使你更有可能得到**有用**的答案；\n第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。\n\n### 别动辄声称找到 Bug\n\n当你在使用软件中遇到问题，除非你非常、**非常**的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的`Bug`，你应该能提供相应位置的修正或替代文件。\n\n请记得，还有其他许多用户没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前[已经做了这些，是吧](#在提问之前)？）。这也意味着很有可能是你弄错了而不是软件本身有问题。\n\n编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有`Bug`时，这尤其严重。\n\n提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是**你**做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。\n\n### 低声下气不能代替你的功课\n\n有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：`我知道我只是个可悲的新手，一个失败者，但...`。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。\n\n别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。\n\n有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。\n\n### 描述问题症状而非你的猜测\n\n告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。\n\n**蠢问题**\n\n> 我在编译内核时接连遇到 SIG11 错误，\n> 我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？\n\n**聪明问题**\n> 我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组），\n> 256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，\n> 但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。\n> 所有内存都换过了，没有效果。相关部分的标准编译记录如下…\n\n由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：`所有的诊断专家都来自密苏里州。` 美国国务院的官方座右铭则是：`让我看看`（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：`我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。`） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方地展示给我们看吧！\n\n### 按发生时间先后列出问题症状\n\n问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。\n\n如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，`多`不等于`好`。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。\n\n如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。\n\n### 描述目标而不是过程\n\n如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。\n\n经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。\n\n**蠢问题**\n> 我怎样才能从某绘图程序的颜色选择器中取得十六进制的 RGB 值？\n\n**聪明问题**\n> 我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），\n> 但却无法从某绘图程序的颜色选择器取得十六进制的 RGB 值。\n\n第二种提问法比较聪明，你可能得到像是```建议采用另一个更合适的工具```的回复。\n\n### 别要求使用私人电邮回复\n\n黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。\n\n当你要求私下回复时，这个过程和奖励都被中止。别这样做，让**回复者**来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于不可能使其他人产生兴趣。\n\n这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是`向我发电邮，我将为论坛归纳这些回复`。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。\n\n### 清楚明确地表达你的问题以及需求\n\n漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。\n\n如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。\n\n要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。\n\n所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你获得有用的答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问`我想更好地理解 X，可否指点一下哪有好一点说明？`通常比问`你能解释一下 X 吗？`更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。\n\n### 询问有关代码的问题时\n\n如果没有提示别人应该从何入手，别要求他人帮你调试有问题的代码。张贴几百行的代码，然后说一声：`它不能工作`会让你完全被忽略。只贴几十行代码，然后说一句：`在第七行以后，我期待它显示 <x>，但实际出现的是 <y>`比较有可能让你得到回应。\n\n最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能**刚好**展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看[话不在多而在精](#话不在多而在精)一节）。\n\n一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做是一个好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。\n\n如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。\n\n### 别把自己家庭作业的问题贴上来\n\n黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由**你**来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。\n\n如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户群组，论坛或（最后一招）在项目的**用户**邮件列表或论坛中提问。尽管黑客们**会**看出来，但一些有经验的用户也许仍会给你一些提示。\n\n### 去掉无意义的提问句\n\n避免用无意义的话结束提问，例如`有人能帮我吗？`或者`这有答案吗？`。\n\n首先：如果你对问题的描述不是很好，这样问更是画蛇添足。\n\n其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：`没错，有人能帮你`或者`不，没答案`。\n\n一般来说，避免用 `是或否`、`对或错`、`有或没有`类型的问句，除非你想得到[是或否类型的回答](https://strcat.de/questions-with-yes-or-no-answers.html)。\n\n### 即使你很急也不要在标题写`紧急`\n\n这是你的问题，不是我们的。宣称`紧急`极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，`紧急`这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。\n\n有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。\n\n当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如`紧急：帮我救救这个毛茸茸的小海豹！`肯定让你被黑客忽略或惹恼他们，即使他们认为毛茸茸的小海豹很重要。\n\n如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。\n\n### 礼多人不怪，而且有时还很有帮助\n\n彬彬有礼，多用`请`和`谢谢您的关注`，或`谢谢你的关照`。让大家都知道你对他们花时间免费提供帮助心存感激。\n\n坦白说，这一点并没有比使用清晰、正确、精准且合乎语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）\n\n然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。\n\n（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得`先谢了`意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说`先谢了`，**然后**事后再对回复者表示感谢，或者换种方式表达感激，譬如用`谢谢你的关注`或`谢谢你的关照`。）\n\n### 问题解决后，加个简短的补充说明\n\n问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。\n\n最理想的方式是向最初提问的话题回复此消息，并在标题中包含`已修正`，`已解决`或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串`问题 X`和`问题 X - 已解决`的潜在回复者就明白不用再浪费时间了（除非他个人觉得`问题 X`有趣），因此可以利用此时间去解决其它问题。\n\n补充说明不必很长或是很深入；简单的一句`你好，原来是网线出了问题！谢谢大家 – Bill`比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。\n\n对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此**之后**才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。\n\n除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。\n\n至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。\n\n思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。\n\n在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。\n\n## 如何解读答案\n\n<a id=\"rtfm\"></a>\n### RTFM 和 STFW：如何知道你已完全搞砸了\n\n有一个古老而神圣的传统：如果你收到`RTFM（Read The Fucking Manual）`的回应，回答者认为你**应该去读他妈的手册**。当然，基本上他是对的，你应该去读一读。\n\nRTFM 有一个年轻的亲戚。如果你收到`STFW（Search The Fucking Web）`的回应，回答者认为你**应该到他妈的网上搜索**。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 **[Google 是你的朋友](http://lmgtfy.com/)**！）\n\n在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。\n\n通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为：\n\n* **你需要的信息非常容易获得**；\n* **你自己去搜索这些信息比灌给你，能让你学到更多**。\n\n你不应该因此不爽；**依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见**。你应该对他祖母般的慈祥表示感谢。\n\n### 如果还是搞不懂\n\n如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。\n\n比方说，如果我回答你：`看来似乎是 zentry 卡住了；你应该先清除它。`，然后，这是一个**很糟的**后续问题回应：`zentry 是什么？` **好**的问法应该是这样：`哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？`\n\n### 处理无礼的回应\n\n很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直截了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。\n\n如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这**没有**发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而**你**将被视为有错的一方，这将伤害到你获取信息或帮助的机会。\n\n另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。\n\n（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会**正常**交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们**喜欢**我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。）\n\nJeff Bigler 的观察总结和这个相关也值得一读 (**[tact filters](http://www.mit.edu/~jcb/tact.html)**)。\n\n在下一节，我们会谈到另一个问题，当**你**行为不当时所会受到的`冒犯`。\n\n## 如何避免扮演失败者\n\n在黑客社区的论坛中，你以本指南所描述的或类似的方式，可能会有那么几次搞砸了。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。\n\n这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被言语攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、不去关马桶盖等等。相反地，你该这么做：\n\n熬过去，这很正常。事实上，它是有益健康且合理的。\n\n社区的标准不会自行维持，它们是通过参与者积极而**公开地**执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。\n\n也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称`如果你不想帮助用户就闭嘴。` 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。\n\n夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。\n\n记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心**你**和**他的社区**而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。\n\n有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是**真的**会把问题搞砸。\n\n这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。\n\n也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。\n\n## 不该问的问题\n\n以下是几个经典蠢问题，以及黑客没回答时心中所想的：\n\n问题：[我能在哪找到 X 程序或 X 资源？](#q1)\n\n问题：[我怎样用 X 做 Y？](#q2)\n\n问题：[如何设定我的 shell 提示？](#q3)\n\n问题：[我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？](#q4)\n\n问题：[我的程序/设定/SQL 语句没有用](#q5)\n\n问题：[我的 Windows 电脑有问题，你能帮我吗？](#q6)\n\n问题：[我的程序不会动了，我认为系统工具 X 有问题](#q7)\n\n问题：[我在安装 Linux（或者 X ）时有问题，你能帮我吗？](#q8)\n\n问题：[我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？](#q9)\n\n---\n\n<a id=\"q1\"></a>\n> 问题：我能在哪找到 X 程序或 X 资源？\n\n回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 [Google](https://www.google.com) 吗？\n\n<a id=\"q2\"></a>\n> 问题：我怎样用 X 做 Y？\n\n回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。\n\n<a id=\"q3\"></a>\n>问题：如何设定我的 shell 提示？？\n\n回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 [RTFM](#RTFM)，然后自己去找出来。\n\n<a id=\"q4\"></a>\n> 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？\n\n回答：试试看就知道了。如果你试过，你就知道了答案，就不用浪费我的时间了。\n\n<a id=\"q5\"></a>\n> 问题：我的{程序/设定/SQL 语句}没有用\n\n回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种\n\n  * 你还有什么要补充的吗？\n  * 真糟糕，希望你能搞定。\n  * 这关我屁事？\n\n<a id=\"q6\"></a>\n> 问题：我的 Windows 电脑有问题，你能帮我吗？\n\n回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。\n\n注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你**可以**问与 Windows 相关的问题，只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。\n\n<a id=\"q7\"></a>\n> 问题：我的程序不会动了，我认为系统工具 X 有问题\n\n回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。\n\n<a id=\"q8\"></a>\n> 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？\n\n回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在[这儿](http://www.linux.org/groups/index.html)找到用户群组的清单）。\n\n注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地用户群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 `Linux` 和**所有**被怀疑的硬件作关键词仔细搜索。\n\n<a id=\"q9\"></a>\n> 问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？\n\n回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！\n\n## 好问题与蠢问题\n\n最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。\n\n\n**蠢问题**：\n\n> 我可以在哪儿找到关于 Foonly Flurbamatic 的资料？\n\n这种问法无非想得到 [STFW](#RTFM) 这样的回答。\n\n**聪明问题**：\n\n> 我用 Google 搜索过 \"Foonly Flurbamatic 2600\"，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？\n\n这个问题已经 STFW 过了，看起来他真的遇到了麻烦。\n\n\n**蠢问题**：\n\n> 我从 foo 项目找来的源码没法编译。它怎么这么烂？\n\n他觉得都是别人的错，这个傲慢自大的提问者。\n\n**聪明问题**：\n\n> foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？\n\n提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。\n\n\n**蠢问题**：\n\n> 我的主机板有问题了，谁来帮我？\n\n某黑客对这类问题的回答通常是：`好的，还要帮你拍拍背和换尿布吗？`，然后按下删除键。\n\n**聪明问题**：\n\n> 我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？\n\n这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。\n\n在最后一个问题中，注意`告诉我答案`和`给我启示，指出我还应该做什么诊断工作`之间微妙而又重要的区别。\n\n事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。\n\n通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。\n\n事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候，一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的**名**人，而是因为我用了正确的方式来提问。\n\n黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我**像**个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。\n\n## 如果得不到回答\n\n如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。\n\n总的来说，简单地重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。\n\n你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。\n\n有许多网上的以及本地的用户群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。\n\n另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。\n\n对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名用户。根本不可能由一个人来处理来自上万名用户的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。\n\n## 如何更好地回答问题\n\n**态度和善一点。** 问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。\n\n**对初犯者私下回复。** 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。\n\n**如果你不确定，一定要说出来！** 一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。\n\n**如果帮不了忙，也别妨碍他。** 不要在实际步骤上开玩笑，那样也许会毁了提问者的设置 —— 有些可怜的呆瓜会把它当成真的指令。\n\n**试探性的反问以引出更多的细节。** 如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。\n\n尽管对那些懒虫抱怨一声 RTFM 是正当的，但能给出文档的链接（即使只是建议个 Google 搜索关键词）会更好。\n\n**如果你决定回答，就请给出好的答案。** 当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。\n\n**正面地回答问题！** 如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 `试试看 A 或是 B` 或者 `试试 X 、 Y 、 Z 、 A 、 B 、 C` 并附上一个链接一点用都没有。\n\n**帮助你的社区从问题中学习。** 当回复一个好问题时，问问自己`如何修改相关文件或常见问题文件以免再次解答同样的问题？`，接着再向文件维护者发一份补丁。\n\n如果你在研究一番后才作出了回答，**展现你的技巧而不是直接端出结果**。毕竟`授人以鱼不如授人以渔`。\n\n## 相关资源\n\n如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 [Unix 系统和网络基本原理](http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/)。\n\n当你发布软件或补丁时，试着按[软件发布实践](http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html)操作。\n\n## 鸣谢\n\nEvelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写`如何更好地回答问题`这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。\n\n","comments":true,"categories":[],"tags":[]},{"title":"the first","date":"2024-08-14T04:46:43.000Z","path":"2024/08/14/the-first/","text":"口袋妖怪属性克制关系&#x3D;&#x3D;一般系&#x3D;&#x3D; : 对任何属性不克制，对岩石、钢系效果减半,对幽灵无效果,被格斗系克制 &#x3D;&#x3D;格斗系&#x3D;&#x3D; ：克制一般、岩石、钢、冰、恶属性,对飞行、毒、虫、超能系效果减半,对幽灵无效果 &#x3D;&#x3D;飞行系&#x3D;&#x3D; ： 克制格斗、虫、草系,对岩石、钢、电系效果减半 &#x3D;&#x3D;毒系&#x3D;&#x3D; : 克制草系,对毒、地面、岩石、幽灵系效果减半,对钢系无效果 &#x3D;&#x3D;地面系&#x3D;&#x3D; 克制毒、岩石、钢、火、电系,对草系效果减半,对飞行系无效果 &#x3D;&#x3D;岩石系&#x3D;&#x3D; 克制飞行、虫、火、冰系,对格斗、地面、钢系效果减半 &#x3D;&#x3D;虫系&#x3D;&#x3D; 克制草、超能、恶系,对格斗、飞行、毒、幽灵、钢、火系效果减半 &#x3D;&#x3D;幽灵系&#x3D;&#x3D; 克制幽灵、超能系,对钢、恶系效果减半,对一般系无效 &#x3D;&#x3D;钢系&#x3D;&#x3D; 克制岩石、冰系,对钢、火、水、电系效果减半 &#x3D;&#x3D;火系&#x3D;&#x3D; 克制虫、钢、草、冰系,对岩石、火、水、龙系效果减半 &#x3D;&#x3D;水系&#x3D;&#x3D; 克制地面、岩石、火系,对水、草、龙系效果减半 &#x3D;&#x3D;草系&#x3D;&#x3D; 克制地面、岩石、水系,对飞行、毒、虫、钢、火、草、龙系效果减半 &#x3D;&#x3D;电系&#x3D;&#x3D; 克制飞行、水系,对草、电、龙系效果减半，对地面系无效果 &#x3D;&#x3D;超能系&#x3D;&#x3D; 克制格斗、毒系,对钢、超能系效果减半,对恶系无效果 &#x3D;&#x3D;冰系&#x3D;&#x3D; 克制飞行、地面、草、龙系,对钢、火、水、冰系效果减半 &#x3D;&#x3D;龙系&#x3D;&#x3D; 克制龙系 &#x3D;&#x3D;幽灵系&#x3D;&#x3D; 克制幽灵、超能系,对格斗、钢、恶系效果减半","raw":"---\ntitle: the first\ndate: 2024-08-14 12:46:43\ntags: Pokemmo\n---\n\n# 口袋妖怪属性克制关系\n\n<big>==一般系==</big> : 对任何属性不克制，对岩石、钢系效果减半,对幽灵无效果,被格斗系克制\n\n<big>==格斗系==</big> ：克制一般、岩石、钢、冰、恶属性,对飞行、毒、虫、超能系效果减半,对幽灵无效果\n\n<big>==飞行系==</big> ： 克制格斗、虫、草系,对岩石、钢、电系效果减半\n\n<big>==毒系==</big> : 克制草系,对毒、地面、岩石、幽灵系效果减半,对钢系无效果\n\n<big>==地面系==</big>  克制毒、岩石、钢、火、电系,对草系效果减半,对飞行系无效果\n\n<big>==岩石系==</big>  克制飞行、虫、火、冰系,对格斗、地面、钢系效果减半\n\n<big>==虫系==</big>   克制草、超能、恶系,对格斗、飞行、毒、幽灵、钢、火系效果减半\n\n<big>==幽灵系==</big>  克制幽灵、超能系,对钢、恶系效果减半,对一般系无效\n\n<big>==钢系==</big>  克制岩石、冰系,对钢、火、水、电系效果减半\n\n<big>==火系==</big>   克制虫、钢、草、冰系,对岩石、火、水、龙系效果减半\n\n<big>==水系==</big>   克制地面、岩石、火系,对水、草、龙系效果减半\n\n<big>==草系== </big> 克制地面、岩石、水系,对飞行、毒、虫、钢、火、草、龙系效果减半\n\n<big>==电系==</big>   克制飞行、水系,对草、电、龙系效果减半，对地面系无效果\n\n<big>==超能系==</big>   克制格斗、毒系,对钢、超能系效果减半,对恶系无效果\n\n<big>==冰系==</big>   克制飞行、地面、草、龙系,对钢、火、水、冰系效果减半\n\n<big>==龙系==</big>   克制龙系\n\n<big>==幽灵系==</big>  克制幽灵、超能系,对格斗、钢、恶系效果减半\n","comments":true,"categories":[],"tags":[{"name":"Pokemmo","slug":"Pokemmo","permalink":"http://jinmajue.site/tags/Pokemmo/"}]},{"title":"Hello World","date":"2024-08-14T03:14:48.553Z","path":"2024/08/14/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","comments":true,"categories":[],"tags":[]}],"categories":[],"tags":[{"name":"homework","slug":"homework","permalink":"http://jinmajue.site/tags/homework/"},{"name":"fiction","slug":"fiction","permalink":"http://jinmajue.site/tags/fiction/"},{"name":"notes","slug":"notes","permalink":"http://jinmajue.site/tags/notes/"},{"name":"tips","slug":"tips","permalink":"http://jinmajue.site/tags/tips/"},{"name":"code","slug":"code","permalink":"http://jinmajue.site/tags/code/"},{"name":"gist","slug":"gist","permalink":"http://jinmajue.site/tags/gist/"},{"name":"Pokemmo","slug":"Pokemmo","permalink":"http://jinmajue.site/tags/Pokemmo/"}]}